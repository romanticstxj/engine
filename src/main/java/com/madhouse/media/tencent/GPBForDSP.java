// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tx_rtb_for_dsp.proto

package com.madhouse.media.tencent;

public final class GPBForDSP {
  private GPBForDSP() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>optional uint32 at = 2;</code>
     *
     * <pre>
     *用于区分是第一高价竞价（值为1）还是第二高价竞价（值为2），腾讯采用第二高价竞价本字段填固定值2，dsp可以只处理at值为2的请求（仅rtb）
     * </pre>
     */
    boolean hasAt();
    /**
     * <code>optional uint32 at = 2;</code>
     *
     * <pre>
     *用于区分是第一高价竞价（值为1）还是第二高价竞价（值为2），腾讯采用第二高价竞价本字段填固定值2，dsp可以只处理at值为2的请求（仅rtb）
     * </pre>
     */
    int getAt();

    /**
     * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
     *
     * <pre>
     *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
     * </pre>
     */
    boolean hasSite();
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
     *
     * <pre>
     *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.Site getSite();
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
     *
     * <pre>
     *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.SiteOrBuilder getSiteOrBuilder();

    /**
     * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
     *
     * <pre>
     *设备信息 通过本结构可获取用户的设备id
     * </pre>
     */
    boolean hasDevice();
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
     *
     * <pre>
     *设备信息 通过本结构可获取用户的设备id
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.Device getDevice();
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
     *
     * <pre>
     *设备信息 通过本结构可获取用户的设备id
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.DeviceOrBuilder getDeviceOrBuilder();

    /**
     * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
     *
     * <pre>
     *用户信息
     * </pre>
     */
    boolean hasUser();
    /**
     * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
     *
     * <pre>
     *用户信息
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.User getUser();
    /**
     * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
     *
     * <pre>
     *用户信息
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.UserOrBuilder getUserOrBuilder();

    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression> 
        getImpressionList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.Impression getImpression(int index);
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    int getImpressionCount();
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder> 
        getImpressionOrBuilderList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder getImpressionOrBuilder(
        int index);

    /**
     * <code>optional string inner_info = 7;</code>
     *
     * <pre>
     *[无效字段]内部使用
     * </pre>
     */
    boolean hasInnerInfo();
    /**
     * <code>optional string inner_info = 7;</code>
     *
     * <pre>
     *[无效字段]内部使用
     * </pre>
     */
    java.lang.String getInnerInfo();
    /**
     * <code>optional string inner_info = 7;</code>
     *
     * <pre>
     *[无效字段]内部使用
     * </pre>
     */
    com.google.protobuf.ByteString
        getInnerInfoBytes();

    /**
     * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
     *
     * <pre>
     *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
     * </pre>
     */
    boolean hasApp();
    /**
     * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
     *
     * <pre>
     *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.App getApp();
    /**
     * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
     *
     * <pre>
     *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.AppOrBuilder getAppOrBuilder();

    /**
     * <code>repeated string unlike_order_list = 9;</code>
     *
     * <pre>
     *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getUnlikeOrderListList();
    /**
     * <code>repeated string unlike_order_list = 9;</code>
     *
     * <pre>
     *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    int getUnlikeOrderListCount();
    /**
     * <code>repeated string unlike_order_list = 9;</code>
     *
     * <pre>
     *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    java.lang.String getUnlikeOrderList(int index);
    /**
     * <code>repeated string unlike_order_list = 9;</code>
     *
     * <pre>
     *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    com.google.protobuf.ByteString
        getUnlikeOrderListBytes(int index);

    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder> 
        getOidsList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder getOids(int index);
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    int getOidsCount();
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder> 
        getOidsOrBuilderList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder getOidsOrBuilder(
        int index);

    /**
     * <code>repeated string request_black_orders = 11;</code>
     *
     * <pre>
     *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getRequestBlackOrdersList();
    /**
     * <code>repeated string request_black_orders = 11;</code>
     *
     * <pre>
     *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    int getRequestBlackOrdersCount();
    /**
     * <code>repeated string request_black_orders = 11;</code>
     *
     * <pre>
     *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    java.lang.String getRequestBlackOrders(int index);
    /**
     * <code>repeated string request_black_orders = 11;</code>
     *
     * <pre>
     *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    com.google.protobuf.ByteString
        getRequestBlackOrdersBytes(int index);

    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders> 
        getChannelBlackOrdersList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders getChannelBlackOrders(int index);
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    int getChannelBlackOrdersCount();
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder> 
        getChannelBlackOrdersOrBuilderList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder getChannelBlackOrdersOrBuilder(
        int index);

    /**
     * <code>optional bool is_order_cache = 13;</code>
     *
     * <pre>
     *是否是订单池请求 新闻客户端订单池，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    boolean hasIsOrderCache();
    /**
     * <code>optional bool is_order_cache = 13;</code>
     *
     * <pre>
     *是否是订单池请求 新闻客户端订单池，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    boolean getIsOrderCache();

    /**
     * <code>optional bool is_first_time = 14;</code>
     *
     * <pre>
     *[无效字段]是否冷启动，第一次打开APP
     * </pre>
     */
    boolean hasIsFirstTime();
    /**
     * <code>optional bool is_first_time = 14;</code>
     *
     * <pre>
     *[无效字段]是否冷启动，第一次打开APP
     * </pre>
     */
    boolean getIsFirstTime();
  }
  /**
   * Protobuf type {@code com.madhouse.media.tencent.Request}
   */
  public static final class Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }

    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              at_ = input.readUInt32();
              break;
            }
            case 26: {
              com.madhouse.media.tencent.GPBForDSP.Request.Site.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = site_.toBuilder();
              }
              site_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Site.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(site_);
                site_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.madhouse.media.tencent.GPBForDSP.Request.Device.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = device_.toBuilder();
              }
              device_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Device.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(device_);
                device_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.madhouse.media.tencent.GPBForDSP.Request.User.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = user_.toBuilder();
              }
              user_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.User.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(user_);
                user_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                impression_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.Impression>();
                mutable_bitField0_ |= 0x00000020;
              }
              impression_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Impression.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              innerInfo_ = bs;
              break;
            }
            case 66: {
              com.madhouse.media.tencent.GPBForDSP.Request.App.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = app_.toBuilder();
              }
              app_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.App.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(app_);
                app_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                unlikeOrderList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000100;
              }
              unlikeOrderList_.add(bs);
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                oids_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder>();
                mutable_bitField0_ |= 0x00000200;
              }
              oids_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.PARSER, extensionRegistry));
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                requestBlackOrders_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000400;
              }
              requestBlackOrders_.add(bs);
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                channelBlackOrders_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders>();
                mutable_bitField0_ |= 0x00000800;
              }
              channelBlackOrders_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.PARSER, extensionRegistry));
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              isOrderCache_ = input.readBool();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000100;
              isFirstTime_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          impression_ = java.util.Collections.unmodifiableList(impression_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          unlikeOrderList_ = unlikeOrderList_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          oids_ = java.util.Collections.unmodifiableList(oids_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          requestBlackOrders_ = requestBlackOrders_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          channelBlackOrders_ = java.util.Collections.unmodifiableList(channelBlackOrders_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.madhouse.media.tencent.GPBForDSP.Request.class, com.madhouse.media.tencent.GPBForDSP.Request.Builder.class);
    }

    public static com.google.protobuf.Parser<Request> PARSER =
        new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public interface ImpressionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.Impression)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
       * </pre>
       */
      java.lang.String getId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
       * </pre>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <code>optional string tagid = 2;</code>
       *
       * <pre>
       *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
       * </pre>
       */
      boolean hasTagid();
      /**
       * <code>optional string tagid = 2;</code>
       *
       * <pre>
       *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
       * </pre>
       */
      java.lang.String getTagid();
      /**
       * <code>optional string tagid = 2;</code>
       *
       * <pre>
       *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
       * </pre>
       */
      com.google.protobuf.ByteString
          getTagidBytes();

      /**
       * <code>optional float bidfloor = 3;</code>
       *
       * <pre>
       *曝光底价，单位:千次曝光分 dsp出价必须高于本字段的价格，否则无法参与竞价，adx会在底价校验环节过滤掉本次竞价（仅rtb）
       * </pre>
       */
      boolean hasBidfloor();
      /**
       * <code>optional float bidfloor = 3;</code>
       *
       * <pre>
       *曝光底价，单位:千次曝光分 dsp出价必须高于本字段的价格，否则无法参与竞价，adx会在底价校验环节过滤掉本次竞价（仅rtb）
       * </pre>
       */
      float getBidfloor();

      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
       *
       * <pre>
       *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
       * </pre>
       */
      boolean hasBanner();
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
       *
       * <pre>
       *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner getBanner();
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
       *
       * <pre>
       *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.BannerOrBuilder getBannerOrBuilder();

      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
       *
       * <pre>
       *video广告位信息(框内资源才有，否则为空)
       * </pre>
       */
      boolean hasVideo();
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
       *
       * <pre>
       *video广告位信息(框内资源才有，否则为空)
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video getVideo();
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
       *
       * <pre>
       *video广告位信息(框内资源才有，否则为空)
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.VideoOrBuilder getVideoOrBuilder();

      /**
       * <code>optional string clientid = 6;</code>
       *
       * <pre>
       *[无效字段]
       * </pre>
       */
      boolean hasClientid();
      /**
       * <code>optional string clientid = 6;</code>
       *
       * <pre>
       *[无效字段]
       * </pre>
       */
      java.lang.String getClientid();
      /**
       * <code>optional string clientid = 6;</code>
       *
       * <pre>
       *[无效字段]
       * </pre>
       */
      com.google.protobuf.ByteString
          getClientidBytes();

      /**
       * <code>optional string tradecode = 7;</code>
       *
       * <pre>
       *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
       * </pre>
       */
      boolean hasTradecode();
      /**
       * <code>optional string tradecode = 7;</code>
       *
       * <pre>
       *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
       * </pre>
       */
      java.lang.String getTradecode();
      /**
       * <code>optional string tradecode = 7;</code>
       *
       * <pre>
       *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
       * </pre>
       */
      com.google.protobuf.ByteString
          getTradecodeBytes();

      /**
       * <code>optional string sns_lists = 8;</code>
       *
       * <pre>
       *[无效字段] 该广告位允许的社交化播放形式列表
       * </pre>
       */
      boolean hasSnsLists();
      /**
       * <code>optional string sns_lists = 8;</code>
       *
       * <pre>
       *[无效字段] 该广告位允许的社交化播放形式列表
       * </pre>
       */
      java.lang.String getSnsLists();
      /**
       * <code>optional string sns_lists = 8;</code>
       *
       * <pre>
       *[无效字段] 该广告位允许的社交化播放形式列表
       * </pre>
       */
      com.google.protobuf.ByteString
          getSnsListsBytes();

      /**
       * <code>optional string dealid = 9;</code>
       *
       * <pre>
       * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
       * </pre>
       */
      boolean hasDealid();
      /**
       * <code>optional string dealid = 9;</code>
       *
       * <pre>
       * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
       * </pre>
       */
      java.lang.String getDealid();
      /**
       * <code>optional string dealid = 9;</code>
       *
       * <pre>
       * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
       * </pre>
       */
      com.google.protobuf.ByteString
          getDealidBytes();

      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> 
          getAdmRequireList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat getAdmRequire(int index);
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      int getAdmRequireCount();
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> 
          getAdmRequireOrBuilderList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder getAdmRequireOrBuilder(
          int index);

      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
       *
       * <pre>
       *[无效字段]附加信息ssp使用
       * </pre>
       */
      boolean hasImpExt();
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
       *
       * <pre>
       *[无效字段]附加信息ssp使用
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt getImpExt();
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
       *
       * <pre>
       *[无效字段]附加信息ssp使用
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExtOrBuilder getImpExtOrBuilder();

      /**
       * <code>optional string channel = 12;</code>
       *
       * <pre>
       *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
       * </pre>
       */
      boolean hasChannel();
      /**
       * <code>optional string channel = 12;</code>
       *
       * <pre>
       *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
       * </pre>
       */
      java.lang.String getChannel();
      /**
       * <code>optional string channel = 12;</code>
       *
       * <pre>
       *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
       * </pre>
       */
      com.google.protobuf.ByteString
          getChannelBytes();

      /**
       * <code>optional string date = 13;</code>
       *
       * <pre>
       * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
       * </pre>
       */
      boolean hasDate();
      /**
       * <code>optional string date = 13;</code>
       *
       * <pre>
       * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
       * </pre>
       */
      java.lang.String getDate();
      /**
       * <code>optional string date = 13;</code>
       *
       * <pre>
       * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
       * </pre>
       */
      com.google.protobuf.ByteString
          getDateBytes();

      /**
       * <code>optional uint32 tag_seq = 14;</code>
       *
       * <pre>
       * [无效字段]信息流广告位的位置 1-255
       * </pre>
       */
      boolean hasTagSeq();
      /**
       * <code>optional uint32 tag_seq = 14;</code>
       *
       * <pre>
       * [无效字段]信息流广告位的位置 1-255
       * </pre>
       */
      int getTagSeq();

      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType> 
          getDisplayTypeList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType getDisplayType(int index);
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      int getDisplayTypeCount();
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder> 
          getDisplayTypeOrBuilderList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder getDisplayTypeOrBuilder(
          int index);

      /**
       * <code>repeated string dealids = 16;</code>
       *
       * <pre>
       *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getDealidsList();
      /**
       * <code>repeated string dealids = 16;</code>
       *
       * <pre>
       *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
       * </pre>
       */
      int getDealidsCount();
      /**
       * <code>repeated string dealids = 16;</code>
       *
       * <pre>
       *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
       * </pre>
       */
      java.lang.String getDealids(int index);
      /**
       * <code>repeated string dealids = 16;</code>
       *
       * <pre>
       *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
       * </pre>
       */
      com.google.protobuf.ByteString
          getDealidsBytes(int index);

      /**
       * <code>optional uint32 max_order_count = 17;</code>
       *
       * <pre>
       *允许对这个imp回复的最大订单数（仅rtb）
       * </pre>
       */
      boolean hasMaxOrderCount();
      /**
       * <code>optional uint32 max_order_count = 17;</code>
       *
       * <pre>
       *允许对这个imp回复的最大订单数（仅rtb）
       * </pre>
       */
      int getMaxOrderCount();
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Request.Impression}
     */
    public static final class Impression extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.Impression)
        ImpressionOrBuilder {
      // Use Impression.newBuilder() to construct.
      private Impression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Impression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Impression defaultInstance;
      public static Impression getDefaultInstance() {
        return defaultInstance;
      }

      public Impression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Impression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                id_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                tagid_ = bs;
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                bidfloor_ = input.readFloat();
                break;
              }
              case 34: {
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = banner_.toBuilder();
                }
                banner_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(banner_);
                  banner_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
              case 42: {
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                  subBuilder = video_.toBuilder();
                }
                video_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(video_);
                  video_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                clientid_ = bs;
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                tradecode_ = bs;
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                snsLists_ = bs;
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000100;
                dealid_ = bs;
                break;
              }
              case 82: {
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                  admRequire_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat>();
                  mutable_bitField0_ |= 0x00000200;
                }
                admRequire_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.PARSER, extensionRegistry));
                break;
              }
              case 90: {
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.Builder subBuilder = null;
                if (((bitField0_ & 0x00000200) == 0x00000200)) {
                  subBuilder = impExt_.toBuilder();
                }
                impExt_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(impExt_);
                  impExt_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000200;
                break;
              }
              case 98: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000400;
                channel_ = bs;
                break;
              }
              case 106: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000800;
                date_ = bs;
                break;
              }
              case 112: {
                bitField0_ |= 0x00001000;
                tagSeq_ = input.readUInt32();
                break;
              }
              case 122: {
                if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                  displayType_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType>();
                  mutable_bitField0_ |= 0x00004000;
                }
                displayType_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.PARSER, extensionRegistry));
                break;
              }
              case 130: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                  dealids_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00008000;
                }
                dealids_.add(bs);
                break;
              }
              case 136: {
                bitField0_ |= 0x00002000;
                maxOrderCount_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
            admRequire_ = java.util.Collections.unmodifiableList(admRequire_);
          }
          if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
            displayType_ = java.util.Collections.unmodifiableList(displayType_);
          }
          if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
            dealids_ = dealids_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder.class);
      }

      public static com.google.protobuf.Parser<Impression> PARSER =
          new com.google.protobuf.AbstractParser<Impression>() {
        public Impression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Impression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Impression> getParserForType() {
        return PARSER;
      }

      public interface ImpExtOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.Impression.ImpExt)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 chid = 1;</code>
         *
         * <pre>
         *渠道id
         * </pre>
         */
        boolean hasChid();
        /**
         * <code>optional uint32 chid = 1;</code>
         *
         * <pre>
         *渠道id
         * </pre>
         */
        int getChid();

        /**
         * <code>repeated uint32 stype = 2;</code>
         *
         * <pre>
         *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
         * </pre>
         */
        java.util.List<java.lang.Integer> getStypeList();
        /**
         * <code>repeated uint32 stype = 2;</code>
         *
         * <pre>
         *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
         * </pre>
         */
        int getStypeCount();
        /**
         * <code>repeated uint32 stype = 2;</code>
         *
         * <pre>
         *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
         * </pre>
         */
        int getStype(int index);
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.ImpExt}
       */
      public static final class ImpExt extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.Impression.ImpExt)
          ImpExtOrBuilder {
        // Use ImpExt.newBuilder() to construct.
        private ImpExt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private ImpExt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final ImpExt defaultInstance;
        public static ImpExt getDefaultInstance() {
          return defaultInstance;
        }

        public ImpExt getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private ImpExt(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  chid_ = input.readUInt32();
                  break;
                }
                case 16: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    stype_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  stype_.add(input.readUInt32());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                    stype_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    stype_.add(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              stype_ = java.util.Collections.unmodifiableList(stype_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.Builder.class);
        }

        public static com.google.protobuf.Parser<ImpExt> PARSER =
            new com.google.protobuf.AbstractParser<ImpExt>() {
          public ImpExt parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ImpExt(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ImpExt> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int CHID_FIELD_NUMBER = 1;
        private int chid_;
        /**
         * <code>optional uint32 chid = 1;</code>
         *
         * <pre>
         *渠道id
         * </pre>
         */
        public boolean hasChid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 chid = 1;</code>
         *
         * <pre>
         *渠道id
         * </pre>
         */
        public int getChid() {
          return chid_;
        }

        public static final int STYPE_FIELD_NUMBER = 2;
        private java.util.List<java.lang.Integer> stype_;
        /**
         * <code>repeated uint32 stype = 2;</code>
         *
         * <pre>
         *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
         * </pre>
         */
        public java.util.List<java.lang.Integer>
            getStypeList() {
          return stype_;
        }
        /**
         * <code>repeated uint32 stype = 2;</code>
         *
         * <pre>
         *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
         * </pre>
         */
        public int getStypeCount() {
          return stype_.size();
        }
        /**
         * <code>repeated uint32 stype = 2;</code>
         *
         * <pre>
         *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
         * </pre>
         */
        public int getStype(int index) {
          return stype_.get(index);
        }

        private void initFields() {
          chid_ = 0;
          stype_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, chid_);
          }
          for (int i = 0; i < stype_.size(); i++) {
            output.writeUInt32(2, stype_.get(i));
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, chid_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < stype_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(stype_.get(i));
            }
            size += dataSize;
            size += 1 * getStypeList().size();
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.ImpExt}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.Impression.ImpExt)
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExtOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.Builder.class);
          }

          // Construct using com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            chid_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            stype_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_descriptor;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt getDefaultInstanceForType() {
            return com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.getDefaultInstance();
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt build() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt buildPartial() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt result = new com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.chid_ = chid_;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              stype_ = java.util.Collections.unmodifiableList(stype_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.stype_ = stype_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt) {
              return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt other) {
            if (other == com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.getDefaultInstance()) return this;
            if (other.hasChid()) {
              setChid(other.getChid());
            }
            if (!other.stype_.isEmpty()) {
              if (stype_.isEmpty()) {
                stype_ = other.stype_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureStypeIsMutable();
                stype_.addAll(other.stype_);
              }
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int chid_ ;
          /**
           * <code>optional uint32 chid = 1;</code>
           *
           * <pre>
           *渠道id
           * </pre>
           */
          public boolean hasChid() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 chid = 1;</code>
           *
           * <pre>
           *渠道id
           * </pre>
           */
          public int getChid() {
            return chid_;
          }
          /**
           * <code>optional uint32 chid = 1;</code>
           *
           * <pre>
           *渠道id
           * </pre>
           */
          public Builder setChid(int value) {
            bitField0_ |= 0x00000001;
            chid_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 chid = 1;</code>
           *
           * <pre>
           *渠道id
           * </pre>
           */
          public Builder clearChid() {
            bitField0_ = (bitField0_ & ~0x00000001);
            chid_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> stype_ = java.util.Collections.emptyList();
          private void ensureStypeIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              stype_ = new java.util.ArrayList<java.lang.Integer>(stype_);
              bitField0_ |= 0x00000002;
             }
          }
          /**
           * <code>repeated uint32 stype = 2;</code>
           *
           * <pre>
           *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
           * </pre>
           */
          public java.util.List<java.lang.Integer>
              getStypeList() {
            return java.util.Collections.unmodifiableList(stype_);
          }
          /**
           * <code>repeated uint32 stype = 2;</code>
           *
           * <pre>
           *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
           * </pre>
           */
          public int getStypeCount() {
            return stype_.size();
          }
          /**
           * <code>repeated uint32 stype = 2;</code>
           *
           * <pre>
           *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
           * </pre>
           */
          public int getStype(int index) {
            return stype_.get(index);
          }
          /**
           * <code>repeated uint32 stype = 2;</code>
           *
           * <pre>
           *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
           * </pre>
           */
          public Builder setStype(
              int index, int value) {
            ensureStypeIsMutable();
            stype_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 stype = 2;</code>
           *
           * <pre>
           *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
           * </pre>
           */
          public Builder addStype(int value) {
            ensureStypeIsMutable();
            stype_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 stype = 2;</code>
           *
           * <pre>
           *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
           * </pre>
           */
          public Builder addAllStype(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureStypeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, stype_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 stype = 2;</code>
           *
           * <pre>
           *ssp专用：仅图片（默认）2：仅文字；3：图文（信息流）4:三小图
           * </pre>
           */
          public Builder clearStype() {
            stype_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.Impression.ImpExt)
        }

        static {
          defaultInstance = new ImpExt(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.Impression.ImpExt)
      }

      public interface BannerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.Impression.Banner)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 width = 1;</code>
         *
         * <pre>
         *广告位宽度
         * </pre>
         */
        boolean hasWidth();
        /**
         * <code>optional uint32 width = 1;</code>
         *
         * <pre>
         *广告位宽度
         * </pre>
         */
        int getWidth();

        /**
         * <code>optional uint32 height = 2;</code>
         *
         * <pre>
         *广告位高度
         * </pre>
         */
        boolean hasHeight();
        /**
         * <code>optional uint32 height = 2;</code>
         *
         * <pre>
         *广告位高度
         * </pre>
         */
        int getHeight();

        /**
         * <code>repeated string mimes = 3;</code>
         *
         * <pre>
         *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
         * </pre>
         */
        com.google.protobuf.ProtocolStringList
            getMimesList();
        /**
         * <code>repeated string mimes = 3;</code>
         *
         * <pre>
         *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
         * </pre>
         */
        int getMimesCount();
        /**
         * <code>repeated string mimes = 3;</code>
         *
         * <pre>
         *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
         * </pre>
         */
        java.lang.String getMimes(int index);
        /**
         * <code>repeated string mimes = 3;</code>
         *
         * <pre>
         *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
         * </pre>
         */
        com.google.protobuf.ByteString
            getMimesBytes(int index);

        /**
         * <code>optional string extra_style = 4;</code>
         *
         * <pre>
         *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
         * </pre>
         */
        boolean hasExtraStyle();
        /**
         * <code>optional string extra_style = 4;</code>
         *
         * <pre>
         *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
         * </pre>
         */
        java.lang.String getExtraStyle();
        /**
         * <code>optional string extra_style = 4;</code>
         *
         * <pre>
         *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
         * </pre>
         */
        com.google.protobuf.ByteString
            getExtraStyleBytes();

        /**
         * <code>optional uint32 visibility = 5;</code>
         *
         * <pre>
         *广告位所在的屏幕位置: 0:未知 1：首屏 2：非首屏（腾讯网等pc资源才有本字段，否则为空）
         * </pre>
         */
        boolean hasVisibility();
        /**
         * <code>optional uint32 visibility = 5;</code>
         *
         * <pre>
         *广告位所在的屏幕位置: 0:未知 1：首屏 2：非首屏（腾讯网等pc资源才有本字段，否则为空）
         * </pre>
         */
        int getVisibility();
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.Banner}
       */
      public static final class Banner extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.Impression.Banner)
          BannerOrBuilder {
        // Use Banner.newBuilder() to construct.
        private Banner(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Banner(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Banner defaultInstance;
        public static Banner getDefaultInstance() {
          return defaultInstance;
        }

        public Banner getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Banner(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  width_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  height_ = input.readUInt32();
                  break;
                }
                case 26: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    mimes_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  mimes_.add(bs);
                  break;
                }
                case 34: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000004;
                  extraStyle_ = bs;
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000008;
                  visibility_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              mimes_ = mimes_.getUnmodifiableView();
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Banner_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Banner_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.Builder.class);
        }

        public static com.google.protobuf.Parser<Banner> PARSER =
            new com.google.protobuf.AbstractParser<Banner>() {
          public Banner parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Banner(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Banner> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int WIDTH_FIELD_NUMBER = 1;
        private int width_;
        /**
         * <code>optional uint32 width = 1;</code>
         *
         * <pre>
         *广告位宽度
         * </pre>
         */
        public boolean hasWidth() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 width = 1;</code>
         *
         * <pre>
         *广告位宽度
         * </pre>
         */
        public int getWidth() {
          return width_;
        }

        public static final int HEIGHT_FIELD_NUMBER = 2;
        private int height_;
        /**
         * <code>optional uint32 height = 2;</code>
         *
         * <pre>
         *广告位高度
         * </pre>
         */
        public boolean hasHeight() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 height = 2;</code>
         *
         * <pre>
         *广告位高度
         * </pre>
         */
        public int getHeight() {
          return height_;
        }

        public static final int MIMES_FIELD_NUMBER = 3;
        private com.google.protobuf.LazyStringList mimes_;
        /**
         * <code>repeated string mimes = 3;</code>
         *
         * <pre>
         *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getMimesList() {
          return mimes_;
        }
        /**
         * <code>repeated string mimes = 3;</code>
         *
         * <pre>
         *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
         * </pre>
         */
        public int getMimesCount() {
          return mimes_.size();
        }
        /**
         * <code>repeated string mimes = 3;</code>
         *
         * <pre>
         *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
         * </pre>
         */
        public java.lang.String getMimes(int index) {
          return mimes_.get(index);
        }
        /**
         * <code>repeated string mimes = 3;</code>
         *
         * <pre>
         *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMimesBytes(int index) {
          return mimes_.getByteString(index);
        }

        public static final int EXTRA_STYLE_FIELD_NUMBER = 4;
        private java.lang.Object extraStyle_;
        /**
         * <code>optional string extra_style = 4;</code>
         *
         * <pre>
         *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
         * </pre>
         */
        public boolean hasExtraStyle() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string extra_style = 4;</code>
         *
         * <pre>
         *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
         * </pre>
         */
        public java.lang.String getExtraStyle() {
          java.lang.Object ref = extraStyle_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              extraStyle_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string extra_style = 4;</code>
         *
         * <pre>
         *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
         * </pre>
         */
        public com.google.protobuf.ByteString
            getExtraStyleBytes() {
          java.lang.Object ref = extraStyle_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            extraStyle_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int VISIBILITY_FIELD_NUMBER = 5;
        private int visibility_;
        /**
         * <code>optional uint32 visibility = 5;</code>
         *
         * <pre>
         *广告位所在的屏幕位置: 0:未知 1：首屏 2：非首屏（腾讯网等pc资源才有本字段，否则为空）
         * </pre>
         */
        public boolean hasVisibility() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 visibility = 5;</code>
         *
         * <pre>
         *广告位所在的屏幕位置: 0:未知 1：首屏 2：非首屏（腾讯网等pc资源才有本字段，否则为空）
         * </pre>
         */
        public int getVisibility() {
          return visibility_;
        }

        private void initFields() {
          width_ = 0;
          height_ = 0;
          mimes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          extraStyle_ = "";
          visibility_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, width_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, height_);
          }
          for (int i = 0; i < mimes_.size(); i++) {
            output.writeBytes(3, mimes_.getByteString(i));
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBytes(4, getExtraStyleBytes());
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeUInt32(5, visibility_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, width_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, height_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < mimes_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(mimes_.getByteString(i));
            }
            size += dataSize;
            size += 1 * getMimesList().size();
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(4, getExtraStyleBytes());
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(5, visibility_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.Banner}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.Impression.Banner)
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.BannerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Banner_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Banner_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.Builder.class);
          }

          // Construct using com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            width_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            height_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            mimes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000004);
            extraStyle_ = "";
            bitField0_ = (bitField0_ & ~0x00000008);
            visibility_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Banner_descriptor;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner getDefaultInstanceForType() {
            return com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.getDefaultInstance();
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner build() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner buildPartial() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner result = new com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.width_ = width_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.height_ = height_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              mimes_ = mimes_.getUnmodifiableView();
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.mimes_ = mimes_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000004;
            }
            result.extraStyle_ = extraStyle_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000008;
            }
            result.visibility_ = visibility_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner) {
              return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner other) {
            if (other == com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.getDefaultInstance()) return this;
            if (other.hasWidth()) {
              setWidth(other.getWidth());
            }
            if (other.hasHeight()) {
              setHeight(other.getHeight());
            }
            if (!other.mimes_.isEmpty()) {
              if (mimes_.isEmpty()) {
                mimes_ = other.mimes_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureMimesIsMutable();
                mimes_.addAll(other.mimes_);
              }
              onChanged();
            }
            if (other.hasExtraStyle()) {
              bitField0_ |= 0x00000008;
              extraStyle_ = other.extraStyle_;
              onChanged();
            }
            if (other.hasVisibility()) {
              setVisibility(other.getVisibility());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int width_ ;
          /**
           * <code>optional uint32 width = 1;</code>
           *
           * <pre>
           *广告位宽度
           * </pre>
           */
          public boolean hasWidth() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 width = 1;</code>
           *
           * <pre>
           *广告位宽度
           * </pre>
           */
          public int getWidth() {
            return width_;
          }
          /**
           * <code>optional uint32 width = 1;</code>
           *
           * <pre>
           *广告位宽度
           * </pre>
           */
          public Builder setWidth(int value) {
            bitField0_ |= 0x00000001;
            width_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 width = 1;</code>
           *
           * <pre>
           *广告位宽度
           * </pre>
           */
          public Builder clearWidth() {
            bitField0_ = (bitField0_ & ~0x00000001);
            width_ = 0;
            onChanged();
            return this;
          }

          private int height_ ;
          /**
           * <code>optional uint32 height = 2;</code>
           *
           * <pre>
           *广告位高度
           * </pre>
           */
          public boolean hasHeight() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 height = 2;</code>
           *
           * <pre>
           *广告位高度
           * </pre>
           */
          public int getHeight() {
            return height_;
          }
          /**
           * <code>optional uint32 height = 2;</code>
           *
           * <pre>
           *广告位高度
           * </pre>
           */
          public Builder setHeight(int value) {
            bitField0_ |= 0x00000002;
            height_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 height = 2;</code>
           *
           * <pre>
           *广告位高度
           * </pre>
           */
          public Builder clearHeight() {
            bitField0_ = (bitField0_ & ~0x00000002);
            height_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.LazyStringList mimes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureMimesIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              mimes_ = new com.google.protobuf.LazyStringArrayList(mimes_);
              bitField0_ |= 0x00000004;
             }
          }
          /**
           * <code>repeated string mimes = 3;</code>
           *
           * <pre>
           *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
           * </pre>
           */
          public com.google.protobuf.ProtocolStringList
              getMimesList() {
            return mimes_.getUnmodifiableView();
          }
          /**
           * <code>repeated string mimes = 3;</code>
           *
           * <pre>
           *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
           * </pre>
           */
          public int getMimesCount() {
            return mimes_.size();
          }
          /**
           * <code>repeated string mimes = 3;</code>
           *
           * <pre>
           *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
           * </pre>
           */
          public java.lang.String getMimes(int index) {
            return mimes_.get(index);
          }
          /**
           * <code>repeated string mimes = 3;</code>
           *
           * <pre>
           *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
           * </pre>
           */
          public com.google.protobuf.ByteString
              getMimesBytes(int index) {
            return mimes_.getByteString(index);
          }
          /**
           * <code>repeated string mimes = 3;</code>
           *
           * <pre>
           *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
           * </pre>
           */
          public Builder setMimes(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureMimesIsMutable();
            mimes_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string mimes = 3;</code>
           *
           * <pre>
           *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
           * </pre>
           */
          public Builder addMimes(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureMimesIsMutable();
            mimes_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string mimes = 3;</code>
           *
           * <pre>
           *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
           * </pre>
           */
          public Builder addAllMimes(
              java.lang.Iterable<java.lang.String> values) {
            ensureMimesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, mimes_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string mimes = 3;</code>
           *
           * <pre>
           *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
           * </pre>
           */
          public Builder clearMimes() {
            mimes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string mimes = 3;</code>
           *
           * <pre>
           *支持的素材类型(如 "jpg","swf") repeated结构表示可以是多种选择中的一个，如“jpg”，“gif”，“swf”
           * </pre>
           */
          public Builder addMimesBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureMimesIsMutable();
            mimes_.add(value);
            onChanged();
            return this;
          }

          private java.lang.Object extraStyle_ = "";
          /**
           * <code>optional string extra_style = 4;</code>
           *
           * <pre>
           *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
           * </pre>
           */
          public boolean hasExtraStyle() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional string extra_style = 4;</code>
           *
           * <pre>
           *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
           * </pre>
           */
          public java.lang.String getExtraStyle() {
            java.lang.Object ref = extraStyle_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                extraStyle_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string extra_style = 4;</code>
           *
           * <pre>
           *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
           * </pre>
           */
          public com.google.protobuf.ByteString
              getExtraStyleBytes() {
            java.lang.Object ref = extraStyle_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              extraStyle_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string extra_style = 4;</code>
           *
           * <pre>
           *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
           * </pre>
           */
          public Builder setExtraStyle(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            extraStyle_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string extra_style = 4;</code>
           *
           * <pre>
           *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
           * </pre>
           */
          public Builder clearExtraStyle() {
            bitField0_ = (bitField0_ & ~0x00000008);
            extraStyle_ = getDefaultInstance().getExtraStyle();
            onChanged();
            return this;
          }
          /**
           * <code>optional string extra_style = 4;</code>
           *
           * <pre>
           *该广告位除广告位规格外额外允许投放的素材尺寸：960*90;1000*90(分号分隔多个 宽*高)
           * </pre>
           */
          public Builder setExtraStyleBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            extraStyle_ = value;
            onChanged();
            return this;
          }

          private int visibility_ ;
          /**
           * <code>optional uint32 visibility = 5;</code>
           *
           * <pre>
           *广告位所在的屏幕位置: 0:未知 1：首屏 2：非首屏（腾讯网等pc资源才有本字段，否则为空）
           * </pre>
           */
          public boolean hasVisibility() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional uint32 visibility = 5;</code>
           *
           * <pre>
           *广告位所在的屏幕位置: 0:未知 1：首屏 2：非首屏（腾讯网等pc资源才有本字段，否则为空）
           * </pre>
           */
          public int getVisibility() {
            return visibility_;
          }
          /**
           * <code>optional uint32 visibility = 5;</code>
           *
           * <pre>
           *广告位所在的屏幕位置: 0:未知 1：首屏 2：非首屏（腾讯网等pc资源才有本字段，否则为空）
           * </pre>
           */
          public Builder setVisibility(int value) {
            bitField0_ |= 0x00000010;
            visibility_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 visibility = 5;</code>
           *
           * <pre>
           *广告位所在的屏幕位置: 0:未知 1：首屏 2：非首屏（腾讯网等pc资源才有本字段，否则为空）
           * </pre>
           */
          public Builder clearVisibility() {
            bitField0_ = (bitField0_ & ~0x00000010);
            visibility_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.Impression.Banner)
        }

        static {
          defaultInstance = new Banner(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.Impression.Banner)
      }

      public interface VideoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.Impression.Video)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated string mimes = 1;</code>
         *
         * <pre>
         *支持播放的内容类型(如 "flv","swf")
         * </pre>
         */
        com.google.protobuf.ProtocolStringList
            getMimesList();
        /**
         * <code>repeated string mimes = 1;</code>
         *
         * <pre>
         *支持播放的内容类型(如 "flv","swf")
         * </pre>
         */
        int getMimesCount();
        /**
         * <code>repeated string mimes = 1;</code>
         *
         * <pre>
         *支持播放的内容类型(如 "flv","swf")
         * </pre>
         */
        java.lang.String getMimes(int index);
        /**
         * <code>repeated string mimes = 1;</code>
         *
         * <pre>
         *支持播放的内容类型(如 "flv","swf")
         * </pre>
         */
        com.google.protobuf.ByteString
            getMimesBytes(int index);

        /**
         * <code>optional uint32 linearity = 2;</code>
         *
         * <pre>
         *[无效字段]默认值填1  linear/in-stream(1) or non-linear/overlay(2)
         * </pre>
         */
        boolean hasLinearity();
        /**
         * <code>optional uint32 linearity = 2;</code>
         *
         * <pre>
         *[无效字段]默认值填1  linear/in-stream(1) or non-linear/overlay(2)
         * </pre>
         */
        int getLinearity();

        /**
         * <code>optional uint32 minduration = 3;</code>
         *
         * <pre>
         *广告视频最短时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能小于最小时长（仅rtb）
         * </pre>
         */
        boolean hasMinduration();
        /**
         * <code>optional uint32 minduration = 3;</code>
         *
         * <pre>
         *广告视频最短时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能小于最小时长（仅rtb）
         * </pre>
         */
        int getMinduration();

        /**
         * <code>optional uint32 maxduration = 4;</code>
         *
         * <pre>
         *广告视频最长时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能大于最大时长
         * </pre>
         */
        boolean hasMaxduration();
        /**
         * <code>optional uint32 maxduration = 4;</code>
         *
         * <pre>
         *广告视频最长时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能大于最大时长
         * </pre>
         */
        int getMaxduration();

        /**
         * <code>optional uint32 protocol = 5;</code>
         *
         * <pre>
         *[无效字段]目前没有实际作用，vast 1.0/2.0/3.0/wrapper
         * </pre>
         */
        boolean hasProtocol();
        /**
         * <code>optional uint32 protocol = 5;</code>
         *
         * <pre>
         *[无效字段]目前没有实际作用，vast 1.0/2.0/3.0/wrapper
         * </pre>
         */
        int getProtocol();

        /**
         * <code>optional uint32 width = 6;</code>
         *
         * <pre>
         *广告位宽度
         * </pre>
         */
        boolean hasWidth();
        /**
         * <code>optional uint32 width = 6;</code>
         *
         * <pre>
         *广告位宽度
         * </pre>
         */
        int getWidth();

        /**
         * <code>optional uint32 height = 7;</code>
         *
         * <pre>
         *广告位高度
         * </pre>
         */
        boolean hasHeight();
        /**
         * <code>optional uint32 height = 7;</code>
         *
         * <pre>
         *广告位高度
         * </pre>
         */
        int getHeight();
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.Video}
       */
      public static final class Video extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.Impression.Video)
          VideoOrBuilder {
        // Use Video.newBuilder() to construct.
        private Video(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Video(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Video defaultInstance;
        public static Video getDefaultInstance() {
          return defaultInstance;
        }

        public Video getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Video(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    mimes_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  mimes_.add(bs);
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000001;
                  linearity_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  minduration_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000004;
                  maxduration_ = input.readUInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000008;
                  protocol_ = input.readUInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000010;
                  width_ = input.readUInt32();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000020;
                  height_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              mimes_ = mimes_.getUnmodifiableView();
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Video_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Video_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.Builder.class);
        }

        public static com.google.protobuf.Parser<Video> PARSER =
            new com.google.protobuf.AbstractParser<Video>() {
          public Video parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Video(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Video> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int MIMES_FIELD_NUMBER = 1;
        private com.google.protobuf.LazyStringList mimes_;
        /**
         * <code>repeated string mimes = 1;</code>
         *
         * <pre>
         *支持播放的内容类型(如 "flv","swf")
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getMimesList() {
          return mimes_;
        }
        /**
         * <code>repeated string mimes = 1;</code>
         *
         * <pre>
         *支持播放的内容类型(如 "flv","swf")
         * </pre>
         */
        public int getMimesCount() {
          return mimes_.size();
        }
        /**
         * <code>repeated string mimes = 1;</code>
         *
         * <pre>
         *支持播放的内容类型(如 "flv","swf")
         * </pre>
         */
        public java.lang.String getMimes(int index) {
          return mimes_.get(index);
        }
        /**
         * <code>repeated string mimes = 1;</code>
         *
         * <pre>
         *支持播放的内容类型(如 "flv","swf")
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMimesBytes(int index) {
          return mimes_.getByteString(index);
        }

        public static final int LINEARITY_FIELD_NUMBER = 2;
        private int linearity_;
        /**
         * <code>optional uint32 linearity = 2;</code>
         *
         * <pre>
         *[无效字段]默认值填1  linear/in-stream(1) or non-linear/overlay(2)
         * </pre>
         */
        public boolean hasLinearity() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 linearity = 2;</code>
         *
         * <pre>
         *[无效字段]默认值填1  linear/in-stream(1) or non-linear/overlay(2)
         * </pre>
         */
        public int getLinearity() {
          return linearity_;
        }

        public static final int MINDURATION_FIELD_NUMBER = 3;
        private int minduration_;
        /**
         * <code>optional uint32 minduration = 3;</code>
         *
         * <pre>
         *广告视频最短时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能小于最小时长（仅rtb）
         * </pre>
         */
        public boolean hasMinduration() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 minduration = 3;</code>
         *
         * <pre>
         *广告视频最短时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能小于最小时长（仅rtb）
         * </pre>
         */
        public int getMinduration() {
          return minduration_;
        }

        public static final int MAXDURATION_FIELD_NUMBER = 4;
        private int maxduration_;
        /**
         * <code>optional uint32 maxduration = 4;</code>
         *
         * <pre>
         *广告视频最长时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能大于最大时长
         * </pre>
         */
        public boolean hasMaxduration() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 maxduration = 4;</code>
         *
         * <pre>
         *广告视频最长时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能大于最大时长
         * </pre>
         */
        public int getMaxduration() {
          return maxduration_;
        }

        public static final int PROTOCOL_FIELD_NUMBER = 5;
        private int protocol_;
        /**
         * <code>optional uint32 protocol = 5;</code>
         *
         * <pre>
         *[无效字段]目前没有实际作用，vast 1.0/2.0/3.0/wrapper
         * </pre>
         */
        public boolean hasProtocol() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 protocol = 5;</code>
         *
         * <pre>
         *[无效字段]目前没有实际作用，vast 1.0/2.0/3.0/wrapper
         * </pre>
         */
        public int getProtocol() {
          return protocol_;
        }

        public static final int WIDTH_FIELD_NUMBER = 6;
        private int width_;
        /**
         * <code>optional uint32 width = 6;</code>
         *
         * <pre>
         *广告位宽度
         * </pre>
         */
        public boolean hasWidth() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 width = 6;</code>
         *
         * <pre>
         *广告位宽度
         * </pre>
         */
        public int getWidth() {
          return width_;
        }

        public static final int HEIGHT_FIELD_NUMBER = 7;
        private int height_;
        /**
         * <code>optional uint32 height = 7;</code>
         *
         * <pre>
         *广告位高度
         * </pre>
         */
        public boolean hasHeight() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 height = 7;</code>
         *
         * <pre>
         *广告位高度
         * </pre>
         */
        public int getHeight() {
          return height_;
        }

        private void initFields() {
          mimes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          linearity_ = 0;
          minduration_ = 0;
          maxduration_ = 0;
          protocol_ = 0;
          width_ = 0;
          height_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          for (int i = 0; i < mimes_.size(); i++) {
            output.writeBytes(1, mimes_.getByteString(i));
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(2, linearity_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(3, minduration_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeUInt32(4, maxduration_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeUInt32(5, protocol_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeUInt32(6, width_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output.writeUInt32(7, height_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          {
            int dataSize = 0;
            for (int i = 0; i < mimes_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(mimes_.getByteString(i));
            }
            size += dataSize;
            size += 1 * getMimesList().size();
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, linearity_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, minduration_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(4, maxduration_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(5, protocol_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(6, width_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(7, height_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.Video}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.Impression.Video)
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.VideoOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Video_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Video_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.Builder.class);
          }

          // Construct using com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            mimes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000001);
            linearity_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            minduration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            maxduration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            protocol_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            width_ = 0;
            bitField0_ = (bitField0_ & ~0x00000020);
            height_ = 0;
            bitField0_ = (bitField0_ & ~0x00000040);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_Video_descriptor;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video getDefaultInstanceForType() {
            return com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.getDefaultInstance();
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video build() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video buildPartial() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video result = new com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              mimes_ = mimes_.getUnmodifiableView();
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.mimes_ = mimes_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000001;
            }
            result.linearity_ = linearity_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000002;
            }
            result.minduration_ = minduration_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000004;
            }
            result.maxduration_ = maxduration_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000008;
            }
            result.protocol_ = protocol_;
            if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
              to_bitField0_ |= 0x00000010;
            }
            result.width_ = width_;
            if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
              to_bitField0_ |= 0x00000020;
            }
            result.height_ = height_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video) {
              return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video other) {
            if (other == com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.getDefaultInstance()) return this;
            if (!other.mimes_.isEmpty()) {
              if (mimes_.isEmpty()) {
                mimes_ = other.mimes_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureMimesIsMutable();
                mimes_.addAll(other.mimes_);
              }
              onChanged();
            }
            if (other.hasLinearity()) {
              setLinearity(other.getLinearity());
            }
            if (other.hasMinduration()) {
              setMinduration(other.getMinduration());
            }
            if (other.hasMaxduration()) {
              setMaxduration(other.getMaxduration());
            }
            if (other.hasProtocol()) {
              setProtocol(other.getProtocol());
            }
            if (other.hasWidth()) {
              setWidth(other.getWidth());
            }
            if (other.hasHeight()) {
              setHeight(other.getHeight());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private com.google.protobuf.LazyStringList mimes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureMimesIsMutable() {
            if (!((bitField0_ & 0x00000001) == 0x00000001)) {
              mimes_ = new com.google.protobuf.LazyStringArrayList(mimes_);
              bitField0_ |= 0x00000001;
             }
          }
          /**
           * <code>repeated string mimes = 1;</code>
           *
           * <pre>
           *支持播放的内容类型(如 "flv","swf")
           * </pre>
           */
          public com.google.protobuf.ProtocolStringList
              getMimesList() {
            return mimes_.getUnmodifiableView();
          }
          /**
           * <code>repeated string mimes = 1;</code>
           *
           * <pre>
           *支持播放的内容类型(如 "flv","swf")
           * </pre>
           */
          public int getMimesCount() {
            return mimes_.size();
          }
          /**
           * <code>repeated string mimes = 1;</code>
           *
           * <pre>
           *支持播放的内容类型(如 "flv","swf")
           * </pre>
           */
          public java.lang.String getMimes(int index) {
            return mimes_.get(index);
          }
          /**
           * <code>repeated string mimes = 1;</code>
           *
           * <pre>
           *支持播放的内容类型(如 "flv","swf")
           * </pre>
           */
          public com.google.protobuf.ByteString
              getMimesBytes(int index) {
            return mimes_.getByteString(index);
          }
          /**
           * <code>repeated string mimes = 1;</code>
           *
           * <pre>
           *支持播放的内容类型(如 "flv","swf")
           * </pre>
           */
          public Builder setMimes(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureMimesIsMutable();
            mimes_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string mimes = 1;</code>
           *
           * <pre>
           *支持播放的内容类型(如 "flv","swf")
           * </pre>
           */
          public Builder addMimes(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureMimesIsMutable();
            mimes_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string mimes = 1;</code>
           *
           * <pre>
           *支持播放的内容类型(如 "flv","swf")
           * </pre>
           */
          public Builder addAllMimes(
              java.lang.Iterable<java.lang.String> values) {
            ensureMimesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, mimes_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string mimes = 1;</code>
           *
           * <pre>
           *支持播放的内容类型(如 "flv","swf")
           * </pre>
           */
          public Builder clearMimes() {
            mimes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string mimes = 1;</code>
           *
           * <pre>
           *支持播放的内容类型(如 "flv","swf")
           * </pre>
           */
          public Builder addMimesBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureMimesIsMutable();
            mimes_.add(value);
            onChanged();
            return this;
          }

          private int linearity_ ;
          /**
           * <code>optional uint32 linearity = 2;</code>
           *
           * <pre>
           *[无效字段]默认值填1  linear/in-stream(1) or non-linear/overlay(2)
           * </pre>
           */
          public boolean hasLinearity() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 linearity = 2;</code>
           *
           * <pre>
           *[无效字段]默认值填1  linear/in-stream(1) or non-linear/overlay(2)
           * </pre>
           */
          public int getLinearity() {
            return linearity_;
          }
          /**
           * <code>optional uint32 linearity = 2;</code>
           *
           * <pre>
           *[无效字段]默认值填1  linear/in-stream(1) or non-linear/overlay(2)
           * </pre>
           */
          public Builder setLinearity(int value) {
            bitField0_ |= 0x00000002;
            linearity_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 linearity = 2;</code>
           *
           * <pre>
           *[无效字段]默认值填1  linear/in-stream(1) or non-linear/overlay(2)
           * </pre>
           */
          public Builder clearLinearity() {
            bitField0_ = (bitField0_ & ~0x00000002);
            linearity_ = 0;
            onChanged();
            return this;
          }

          private int minduration_ ;
          /**
           * <code>optional uint32 minduration = 3;</code>
           *
           * <pre>
           *广告视频最短时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能小于最小时长（仅rtb）
           * </pre>
           */
          public boolean hasMinduration() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint32 minduration = 3;</code>
           *
           * <pre>
           *广告视频最短时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能小于最小时长（仅rtb）
           * </pre>
           */
          public int getMinduration() {
            return minduration_;
          }
          /**
           * <code>optional uint32 minduration = 3;</code>
           *
           * <pre>
           *广告视频最短时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能小于最小时长（仅rtb）
           * </pre>
           */
          public Builder setMinduration(int value) {
            bitField0_ |= 0x00000004;
            minduration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 minduration = 3;</code>
           *
           * <pre>
           *广告视频最短时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能小于最小时长（仅rtb）
           * </pre>
           */
          public Builder clearMinduration() {
            bitField0_ = (bitField0_ & ~0x00000004);
            minduration_ = 0;
            onChanged();
            return this;
          }

          private int maxduration_ ;
          /**
           * <code>optional uint32 maxduration = 4;</code>
           *
           * <pre>
           *广告视频最长时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能大于最大时长
           * </pre>
           */
          public boolean hasMaxduration() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional uint32 maxduration = 4;</code>
           *
           * <pre>
           *广告视频最长时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能大于最大时长
           * </pre>
           */
          public int getMaxduration() {
            return maxduration_;
          }
          /**
           * <code>optional uint32 maxduration = 4;</code>
           *
           * <pre>
           *广告视频最长时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能大于最大时长
           * </pre>
           */
          public Builder setMaxduration(int value) {
            bitField0_ |= 0x00000008;
            maxduration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxduration = 4;</code>
           *
           * <pre>
           *广告视频最长时长 单位毫秒 口播、前贴、中插和后贴这几个资源位dsp出单的素材时长不能大于最大时长
           * </pre>
           */
          public Builder clearMaxduration() {
            bitField0_ = (bitField0_ & ~0x00000008);
            maxduration_ = 0;
            onChanged();
            return this;
          }

          private int protocol_ ;
          /**
           * <code>optional uint32 protocol = 5;</code>
           *
           * <pre>
           *[无效字段]目前没有实际作用，vast 1.0/2.0/3.0/wrapper
           * </pre>
           */
          public boolean hasProtocol() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional uint32 protocol = 5;</code>
           *
           * <pre>
           *[无效字段]目前没有实际作用，vast 1.0/2.0/3.0/wrapper
           * </pre>
           */
          public int getProtocol() {
            return protocol_;
          }
          /**
           * <code>optional uint32 protocol = 5;</code>
           *
           * <pre>
           *[无效字段]目前没有实际作用，vast 1.0/2.0/3.0/wrapper
           * </pre>
           */
          public Builder setProtocol(int value) {
            bitField0_ |= 0x00000010;
            protocol_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 protocol = 5;</code>
           *
           * <pre>
           *[无效字段]目前没有实际作用，vast 1.0/2.0/3.0/wrapper
           * </pre>
           */
          public Builder clearProtocol() {
            bitField0_ = (bitField0_ & ~0x00000010);
            protocol_ = 0;
            onChanged();
            return this;
          }

          private int width_ ;
          /**
           * <code>optional uint32 width = 6;</code>
           *
           * <pre>
           *广告位宽度
           * </pre>
           */
          public boolean hasWidth() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
          }
          /**
           * <code>optional uint32 width = 6;</code>
           *
           * <pre>
           *广告位宽度
           * </pre>
           */
          public int getWidth() {
            return width_;
          }
          /**
           * <code>optional uint32 width = 6;</code>
           *
           * <pre>
           *广告位宽度
           * </pre>
           */
          public Builder setWidth(int value) {
            bitField0_ |= 0x00000020;
            width_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 width = 6;</code>
           *
           * <pre>
           *广告位宽度
           * </pre>
           */
          public Builder clearWidth() {
            bitField0_ = (bitField0_ & ~0x00000020);
            width_ = 0;
            onChanged();
            return this;
          }

          private int height_ ;
          /**
           * <code>optional uint32 height = 7;</code>
           *
           * <pre>
           *广告位高度
           * </pre>
           */
          public boolean hasHeight() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
          }
          /**
           * <code>optional uint32 height = 7;</code>
           *
           * <pre>
           *广告位高度
           * </pre>
           */
          public int getHeight() {
            return height_;
          }
          /**
           * <code>optional uint32 height = 7;</code>
           *
           * <pre>
           *广告位高度
           * </pre>
           */
          public Builder setHeight(int value) {
            bitField0_ |= 0x00000040;
            height_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 height = 7;</code>
           *
           * <pre>
           *广告位高度
           * </pre>
           */
          public Builder clearHeight() {
            bitField0_ = (bitField0_ & ~0x00000040);
            height_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.Impression.Video)
        }

        static {
          defaultInstance = new Video(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.Impression.Video)
      }

      public interface MaterialFormatOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.Impression.MaterialFormat)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 width = 1;</code>
         *
         * <pre>
         *广告位宽度,txt类型时表示中文个数
         * </pre>
         */
        boolean hasWidth();
        /**
         * <code>optional uint32 width = 1;</code>
         *
         * <pre>
         *广告位宽度,txt类型时表示中文个数
         * </pre>
         */
        int getWidth();

        /**
         * <code>optional uint32 height = 2;</code>
         *
         * <pre>
         *广告位高度,txt类型时高度为0
         * </pre>
         */
        boolean hasHeight();
        /**
         * <code>optional uint32 height = 2;</code>
         *
         * <pre>
         *广告位高度,txt类型时高度为0
         * </pre>
         */
        int getHeight();

        /**
         * <code>optional string mimes = 3;</code>
         *
         * <pre>
         *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
         * </pre>
         */
        boolean hasMimes();
        /**
         * <code>optional string mimes = 3;</code>
         *
         * <pre>
         *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
         * </pre>
         */
        java.lang.String getMimes();
        /**
         * <code>optional string mimes = 3;</code>
         *
         * <pre>
         *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
         * </pre>
         */
        com.google.protobuf.ByteString
            getMimesBytes();
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.MaterialFormat}
       */
      public static final class MaterialFormat extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.Impression.MaterialFormat)
          MaterialFormatOrBuilder {
        // Use MaterialFormat.newBuilder() to construct.
        private MaterialFormat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private MaterialFormat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final MaterialFormat defaultInstance;
        public static MaterialFormat getDefaultInstance() {
          return defaultInstance;
        }

        public MaterialFormat getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private MaterialFormat(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  width_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  height_ = input.readUInt32();
                  break;
                }
                case 26: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000004;
                  mimes_ = bs;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder.class);
        }

        public static com.google.protobuf.Parser<MaterialFormat> PARSER =
            new com.google.protobuf.AbstractParser<MaterialFormat>() {
          public MaterialFormat parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MaterialFormat(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<MaterialFormat> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int WIDTH_FIELD_NUMBER = 1;
        private int width_;
        /**
         * <code>optional uint32 width = 1;</code>
         *
         * <pre>
         *广告位宽度,txt类型时表示中文个数
         * </pre>
         */
        public boolean hasWidth() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 width = 1;</code>
         *
         * <pre>
         *广告位宽度,txt类型时表示中文个数
         * </pre>
         */
        public int getWidth() {
          return width_;
        }

        public static final int HEIGHT_FIELD_NUMBER = 2;
        private int height_;
        /**
         * <code>optional uint32 height = 2;</code>
         *
         * <pre>
         *广告位高度,txt类型时高度为0
         * </pre>
         */
        public boolean hasHeight() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 height = 2;</code>
         *
         * <pre>
         *广告位高度,txt类型时高度为0
         * </pre>
         */
        public int getHeight() {
          return height_;
        }

        public static final int MIMES_FIELD_NUMBER = 3;
        private java.lang.Object mimes_;
        /**
         * <code>optional string mimes = 3;</code>
         *
         * <pre>
         *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
         * </pre>
         */
        public boolean hasMimes() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string mimes = 3;</code>
         *
         * <pre>
         *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
         * </pre>
         */
        public java.lang.String getMimes() {
          java.lang.Object ref = mimes_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mimes_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string mimes = 3;</code>
         *
         * <pre>
         *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMimesBytes() {
          java.lang.Object ref = mimes_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mimes_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private void initFields() {
          width_ = 0;
          height_ = 0;
          mimes_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, width_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, height_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBytes(3, getMimesBytes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, width_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, height_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(3, getMimesBytes());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.MaterialFormat}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.Impression.MaterialFormat)
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder.class);
          }

          // Construct using com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            width_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            height_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            mimes_ = "";
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_descriptor;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat getDefaultInstanceForType() {
            return com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.getDefaultInstance();
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat build() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat buildPartial() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat result = new com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.width_ = width_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.height_ = height_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.mimes_ = mimes_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat) {
              return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat other) {
            if (other == com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.getDefaultInstance()) return this;
            if (other.hasWidth()) {
              setWidth(other.getWidth());
            }
            if (other.hasHeight()) {
              setHeight(other.getHeight());
            }
            if (other.hasMimes()) {
              bitField0_ |= 0x00000004;
              mimes_ = other.mimes_;
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int width_ ;
          /**
           * <code>optional uint32 width = 1;</code>
           *
           * <pre>
           *广告位宽度,txt类型时表示中文个数
           * </pre>
           */
          public boolean hasWidth() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 width = 1;</code>
           *
           * <pre>
           *广告位宽度,txt类型时表示中文个数
           * </pre>
           */
          public int getWidth() {
            return width_;
          }
          /**
           * <code>optional uint32 width = 1;</code>
           *
           * <pre>
           *广告位宽度,txt类型时表示中文个数
           * </pre>
           */
          public Builder setWidth(int value) {
            bitField0_ |= 0x00000001;
            width_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 width = 1;</code>
           *
           * <pre>
           *广告位宽度,txt类型时表示中文个数
           * </pre>
           */
          public Builder clearWidth() {
            bitField0_ = (bitField0_ & ~0x00000001);
            width_ = 0;
            onChanged();
            return this;
          }

          private int height_ ;
          /**
           * <code>optional uint32 height = 2;</code>
           *
           * <pre>
           *广告位高度,txt类型时高度为0
           * </pre>
           */
          public boolean hasHeight() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 height = 2;</code>
           *
           * <pre>
           *广告位高度,txt类型时高度为0
           * </pre>
           */
          public int getHeight() {
            return height_;
          }
          /**
           * <code>optional uint32 height = 2;</code>
           *
           * <pre>
           *广告位高度,txt类型时高度为0
           * </pre>
           */
          public Builder setHeight(int value) {
            bitField0_ |= 0x00000002;
            height_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 height = 2;</code>
           *
           * <pre>
           *广告位高度,txt类型时高度为0
           * </pre>
           */
          public Builder clearHeight() {
            bitField0_ = (bitField0_ & ~0x00000002);
            height_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object mimes_ = "";
          /**
           * <code>optional string mimes = 3;</code>
           *
           * <pre>
           *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
           * </pre>
           */
          public boolean hasMimes() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional string mimes = 3;</code>
           *
           * <pre>
           *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
           * </pre>
           */
          public java.lang.String getMimes() {
            java.lang.Object ref = mimes_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                mimes_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string mimes = 3;</code>
           *
           * <pre>
           *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
           * </pre>
           */
          public com.google.protobuf.ByteString
              getMimesBytes() {
            java.lang.Object ref = mimes_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              mimes_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string mimes = 3;</code>
           *
           * <pre>
           *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
           * </pre>
           */
          public Builder setMimes(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            mimes_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string mimes = 3;</code>
           *
           * <pre>
           *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
           * </pre>
           */
          public Builder clearMimes() {
            bitField0_ = (bitField0_ & ~0x00000004);
            mimes_ = getDefaultInstance().getMimes();
            onChanged();
            return this;
          }
          /**
           * <code>optional string mimes = 3;</code>
           *
           * <pre>
           *此种播放形式要求的,素材允许的类型,全部小写,多个格式用,隔开 如“swf,jgp,txt”
           * </pre>
           */
          public Builder setMimesBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            mimes_ = value;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.Impression.MaterialFormat)
        }

        static {
          defaultInstance = new MaterialFormat(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.Impression.MaterialFormat)
      }

      public interface DisplayTypeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.Impression.DisplayType)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 display_type = 1;</code>
         *
         * <pre>
         *允许广告形式 1:信息流大图 2:原生信息流 3:信息流三小图 4:组图最后一帧 5:前帖片 6:暂停 7:视频信息流视频广告
         * </pre>
         */
        boolean hasDisplayType();
        /**
         * <code>optional uint32 display_type = 1;</code>
         *
         * <pre>
         *允许广告形式 1:信息流大图 2:原生信息流 3:信息流三小图 4:组图最后一帧 5:前帖片 6:暂停 7:视频信息流视频广告
         * </pre>
         */
        int getDisplayType();

        /**
         * <code>repeated uint32 click_type = 2;</code>
         *
         * <pre>
         *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
         * </pre>
         */
        java.util.List<java.lang.Integer> getClickTypeList();
        /**
         * <code>repeated uint32 click_type = 2;</code>
         *
         * <pre>
         *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
         * </pre>
         */
        int getClickTypeCount();
        /**
         * <code>repeated uint32 click_type = 2;</code>
         *
         * <pre>
         *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
         * </pre>
         */
        int getClickType(int index);

        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> 
            getAdmRequireList();
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat getAdmRequire(int index);
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        int getAdmRequireCount();
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> 
            getAdmRequireOrBuilderList();
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder getAdmRequireOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.DisplayType}
       */
      public static final class DisplayType extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.Impression.DisplayType)
          DisplayTypeOrBuilder {
        // Use DisplayType.newBuilder() to construct.
        private DisplayType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private DisplayType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final DisplayType defaultInstance;
        public static DisplayType getDefaultInstance() {
          return defaultInstance;
        }

        public DisplayType getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private DisplayType(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  displayType_ = input.readUInt32();
                  break;
                }
                case 16: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    clickType_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  clickType_.add(input.readUInt32());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                    clickType_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    clickType_.add(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 26: {
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    admRequire_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  admRequire_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.PARSER, extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              clickType_ = java.util.Collections.unmodifiableList(clickType_);
            }
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              admRequire_ = java.util.Collections.unmodifiableList(admRequire_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder.class);
        }

        public static com.google.protobuf.Parser<DisplayType> PARSER =
            new com.google.protobuf.AbstractParser<DisplayType>() {
          public DisplayType parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new DisplayType(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<DisplayType> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int DISPLAY_TYPE_FIELD_NUMBER = 1;
        private int displayType_;
        /**
         * <code>optional uint32 display_type = 1;</code>
         *
         * <pre>
         *允许广告形式 1:信息流大图 2:原生信息流 3:信息流三小图 4:组图最后一帧 5:前帖片 6:暂停 7:视频信息流视频广告
         * </pre>
         */
        public boolean hasDisplayType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 display_type = 1;</code>
         *
         * <pre>
         *允许广告形式 1:信息流大图 2:原生信息流 3:信息流三小图 4:组图最后一帧 5:前帖片 6:暂停 7:视频信息流视频广告
         * </pre>
         */
        public int getDisplayType() {
          return displayType_;
        }

        public static final int CLICK_TYPE_FIELD_NUMBER = 2;
        private java.util.List<java.lang.Integer> clickType_;
        /**
         * <code>repeated uint32 click_type = 2;</code>
         *
         * <pre>
         *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
         * </pre>
         */
        public java.util.List<java.lang.Integer>
            getClickTypeList() {
          return clickType_;
        }
        /**
         * <code>repeated uint32 click_type = 2;</code>
         *
         * <pre>
         *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
         * </pre>
         */
        public int getClickTypeCount() {
          return clickType_.size();
        }
        /**
         * <code>repeated uint32 click_type = 2;</code>
         *
         * <pre>
         *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
         * </pre>
         */
        public int getClickType(int index) {
          return clickType_.get(index);
        }

        public static final int ADM_REQUIRE_FIELD_NUMBER = 3;
        private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> admRequire_;
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> getAdmRequireList() {
          return admRequire_;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> 
            getAdmRequireOrBuilderList() {
          return admRequire_;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        public int getAdmRequireCount() {
          return admRequire_.size();
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat getAdmRequire(int index) {
          return admRequire_.get(index);
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
         *
         * <pre>
         *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder getAdmRequireOrBuilder(
            int index) {
          return admRequire_.get(index);
        }

        private void initFields() {
          displayType_ = 0;
          clickType_ = java.util.Collections.emptyList();
          admRequire_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, displayType_);
          }
          for (int i = 0; i < clickType_.size(); i++) {
            output.writeUInt32(2, clickType_.get(i));
          }
          for (int i = 0; i < admRequire_.size(); i++) {
            output.writeMessage(3, admRequire_.get(i));
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, displayType_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < clickType_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(clickType_.get(i));
            }
            size += dataSize;
            size += 1 * getClickTypeList().size();
          }
          for (int i = 0; i < admRequire_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, admRequire_.get(i));
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.madhouse.media.tencent.Request.Impression.DisplayType}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.Impression.DisplayType)
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder.class);
          }

          // Construct using com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getAdmRequireFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            displayType_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            clickType_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            if (admRequireBuilder_ == null) {
              admRequire_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              admRequireBuilder_.clear();
            }
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_descriptor;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType getDefaultInstanceForType() {
            return com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.getDefaultInstance();
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType build() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType buildPartial() {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType result = new com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.displayType_ = displayType_;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              clickType_ = java.util.Collections.unmodifiableList(clickType_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.clickType_ = clickType_;
            if (admRequireBuilder_ == null) {
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                admRequire_ = java.util.Collections.unmodifiableList(admRequire_);
                bitField0_ = (bitField0_ & ~0x00000004);
              }
              result.admRequire_ = admRequire_;
            } else {
              result.admRequire_ = admRequireBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType) {
              return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType other) {
            if (other == com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.getDefaultInstance()) return this;
            if (other.hasDisplayType()) {
              setDisplayType(other.getDisplayType());
            }
            if (!other.clickType_.isEmpty()) {
              if (clickType_.isEmpty()) {
                clickType_ = other.clickType_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureClickTypeIsMutable();
                clickType_.addAll(other.clickType_);
              }
              onChanged();
            }
            if (admRequireBuilder_ == null) {
              if (!other.admRequire_.isEmpty()) {
                if (admRequire_.isEmpty()) {
                  admRequire_ = other.admRequire_;
                  bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                  ensureAdmRequireIsMutable();
                  admRequire_.addAll(other.admRequire_);
                }
                onChanged();
              }
            } else {
              if (!other.admRequire_.isEmpty()) {
                if (admRequireBuilder_.isEmpty()) {
                  admRequireBuilder_.dispose();
                  admRequireBuilder_ = null;
                  admRequire_ = other.admRequire_;
                  bitField0_ = (bitField0_ & ~0x00000004);
                  admRequireBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getAdmRequireFieldBuilder() : null;
                } else {
                  admRequireBuilder_.addAllMessages(other.admRequire_);
                }
              }
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int displayType_ ;
          /**
           * <code>optional uint32 display_type = 1;</code>
           *
           * <pre>
           *允许广告形式 1:信息流大图 2:原生信息流 3:信息流三小图 4:组图最后一帧 5:前帖片 6:暂停 7:视频信息流视频广告
           * </pre>
           */
          public boolean hasDisplayType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 display_type = 1;</code>
           *
           * <pre>
           *允许广告形式 1:信息流大图 2:原生信息流 3:信息流三小图 4:组图最后一帧 5:前帖片 6:暂停 7:视频信息流视频广告
           * </pre>
           */
          public int getDisplayType() {
            return displayType_;
          }
          /**
           * <code>optional uint32 display_type = 1;</code>
           *
           * <pre>
           *允许广告形式 1:信息流大图 2:原生信息流 3:信息流三小图 4:组图最后一帧 5:前帖片 6:暂停 7:视频信息流视频广告
           * </pre>
           */
          public Builder setDisplayType(int value) {
            bitField0_ |= 0x00000001;
            displayType_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 display_type = 1;</code>
           *
           * <pre>
           *允许广告形式 1:信息流大图 2:原生信息流 3:信息流三小图 4:组图最后一帧 5:前帖片 6:暂停 7:视频信息流视频广告
           * </pre>
           */
          public Builder clearDisplayType() {
            bitField0_ = (bitField0_ & ~0x00000001);
            displayType_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> clickType_ = java.util.Collections.emptyList();
          private void ensureClickTypeIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              clickType_ = new java.util.ArrayList<java.lang.Integer>(clickType_);
              bitField0_ |= 0x00000002;
             }
          }
          /**
           * <code>repeated uint32 click_type = 2;</code>
           *
           * <pre>
           *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
           * </pre>
           */
          public java.util.List<java.lang.Integer>
              getClickTypeList() {
            return java.util.Collections.unmodifiableList(clickType_);
          }
          /**
           * <code>repeated uint32 click_type = 2;</code>
           *
           * <pre>
           *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
           * </pre>
           */
          public int getClickTypeCount() {
            return clickType_.size();
          }
          /**
           * <code>repeated uint32 click_type = 2;</code>
           *
           * <pre>
           *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
           * </pre>
           */
          public int getClickType(int index) {
            return clickType_.get(index);
          }
          /**
           * <code>repeated uint32 click_type = 2;</code>
           *
           * <pre>
           *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
           * </pre>
           */
          public Builder setClickType(
              int index, int value) {
            ensureClickTypeIsMutable();
            clickType_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 click_type = 2;</code>
           *
           * <pre>
           *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
           * </pre>
           */
          public Builder addClickType(int value) {
            ensureClickTypeIsMutable();
            clickType_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 click_type = 2;</code>
           *
           * <pre>
           *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
           * </pre>
           */
          public Builder addAllClickType(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureClickTypeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, clickType_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 click_type = 2;</code>
           *
           * <pre>
           *点击类型 1：app唤醒  2：下载  0：默认跳转落地页
           * </pre>
           */
          public Builder clearClickType() {
            clickType_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }

          private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> admRequire_ =
            java.util.Collections.emptyList();
          private void ensureAdmRequireIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              admRequire_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat>(admRequire_);
              bitField0_ |= 0x00000004;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> admRequireBuilder_;

          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> getAdmRequireList() {
            if (admRequireBuilder_ == null) {
              return java.util.Collections.unmodifiableList(admRequire_);
            } else {
              return admRequireBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public int getAdmRequireCount() {
            if (admRequireBuilder_ == null) {
              return admRequire_.size();
            } else {
              return admRequireBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat getAdmRequire(int index) {
            if (admRequireBuilder_ == null) {
              return admRequire_.get(index);
            } else {
              return admRequireBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public Builder setAdmRequire(
              int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat value) {
            if (admRequireBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureAdmRequireIsMutable();
              admRequire_.set(index, value);
              onChanged();
            } else {
              admRequireBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public Builder setAdmRequire(
              int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder builderForValue) {
            if (admRequireBuilder_ == null) {
              ensureAdmRequireIsMutable();
              admRequire_.set(index, builderForValue.build());
              onChanged();
            } else {
              admRequireBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public Builder addAdmRequire(com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat value) {
            if (admRequireBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureAdmRequireIsMutable();
              admRequire_.add(value);
              onChanged();
            } else {
              admRequireBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public Builder addAdmRequire(
              int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat value) {
            if (admRequireBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureAdmRequireIsMutable();
              admRequire_.add(index, value);
              onChanged();
            } else {
              admRequireBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public Builder addAdmRequire(
              com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder builderForValue) {
            if (admRequireBuilder_ == null) {
              ensureAdmRequireIsMutable();
              admRequire_.add(builderForValue.build());
              onChanged();
            } else {
              admRequireBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public Builder addAdmRequire(
              int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder builderForValue) {
            if (admRequireBuilder_ == null) {
              ensureAdmRequireIsMutable();
              admRequire_.add(index, builderForValue.build());
              onChanged();
            } else {
              admRequireBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public Builder addAllAdmRequire(
              java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> values) {
            if (admRequireBuilder_ == null) {
              ensureAdmRequireIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, admRequire_);
              onChanged();
            } else {
              admRequireBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public Builder clearAdmRequire() {
            if (admRequireBuilder_ == null) {
              admRequire_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000004);
              onChanged();
            } else {
              admRequireBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public Builder removeAdmRequire(int index) {
            if (admRequireBuilder_ == null) {
              ensureAdmRequireIsMutable();
              admRequire_.remove(index);
              onChanged();
            } else {
              admRequireBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder getAdmRequireBuilder(
              int index) {
            return getAdmRequireFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder getAdmRequireOrBuilder(
              int index) {
            if (admRequireBuilder_ == null) {
              return admRequire_.get(index);  } else {
              return admRequireBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> 
               getAdmRequireOrBuilderList() {
            if (admRequireBuilder_ != null) {
              return admRequireBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(admRequire_);
            }
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder addAdmRequireBuilder() {
            return getAdmRequireFieldBuilder().addBuilder(
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.getDefaultInstance());
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder addAdmRequireBuilder(
              int index) {
            return getAdmRequireFieldBuilder().addBuilder(
                index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.getDefaultInstance());
          }
          /**
           * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 3;</code>
           *
           * <pre>
           *免审核rtb方式下 要求DSP回复的素材格式。多素材广告时，DSP所回复的订单必须素材顺序和格式都一致（仅rtb）
           * </pre>
           */
          public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder> 
               getAdmRequireBuilderList() {
            return getAdmRequireFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> 
              getAdmRequireFieldBuilder() {
            if (admRequireBuilder_ == null) {
              admRequireBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder>(
                      admRequire_,
                      ((bitField0_ & 0x00000004) == 0x00000004),
                      getParentForChildren(),
                      isClean());
              admRequire_ = null;
            }
            return admRequireBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.Impression.DisplayType)
        }

        static {
          defaultInstance = new DisplayType(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.Impression.DisplayType)
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private java.lang.Object id_;
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TAGID_FIELD_NUMBER = 2;
      private java.lang.Object tagid_;
      /**
       * <code>optional string tagid = 2;</code>
       *
       * <pre>
       *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
       * </pre>
       */
      public boolean hasTagid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string tagid = 2;</code>
       *
       * <pre>
       *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
       * </pre>
       */
      public java.lang.String getTagid() {
        java.lang.Object ref = tagid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tagid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string tagid = 2;</code>
       *
       * <pre>
       *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTagidBytes() {
        java.lang.Object ref = tagid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tagid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BIDFLOOR_FIELD_NUMBER = 3;
      private float bidfloor_;
      /**
       * <code>optional float bidfloor = 3;</code>
       *
       * <pre>
       *曝光底价，单位:千次曝光分 dsp出价必须高于本字段的价格，否则无法参与竞价，adx会在底价校验环节过滤掉本次竞价（仅rtb）
       * </pre>
       */
      public boolean hasBidfloor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float bidfloor = 3;</code>
       *
       * <pre>
       *曝光底价，单位:千次曝光分 dsp出价必须高于本字段的价格，否则无法参与竞价，adx会在底价校验环节过滤掉本次竞价（仅rtb）
       * </pre>
       */
      public float getBidfloor() {
        return bidfloor_;
      }

      public static final int BANNER_FIELD_NUMBER = 4;
      private com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner banner_;
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
       *
       * <pre>
       *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
       * </pre>
       */
      public boolean hasBanner() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
       *
       * <pre>
       *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner getBanner() {
        return banner_;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
       *
       * <pre>
       *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.BannerOrBuilder getBannerOrBuilder() {
        return banner_;
      }

      public static final int VIDEO_FIELD_NUMBER = 5;
      private com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video video_;
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
       *
       * <pre>
       *video广告位信息(框内资源才有，否则为空)
       * </pre>
       */
      public boolean hasVideo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
       *
       * <pre>
       *video广告位信息(框内资源才有，否则为空)
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video getVideo() {
        return video_;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
       *
       * <pre>
       *video广告位信息(框内资源才有，否则为空)
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.VideoOrBuilder getVideoOrBuilder() {
        return video_;
      }

      public static final int CLIENTID_FIELD_NUMBER = 6;
      private java.lang.Object clientid_;
      /**
       * <code>optional string clientid = 6;</code>
       *
       * <pre>
       *[无效字段]
       * </pre>
       */
      public boolean hasClientid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string clientid = 6;</code>
       *
       * <pre>
       *[无效字段]
       * </pre>
       */
      public java.lang.String getClientid() {
        java.lang.Object ref = clientid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string clientid = 6;</code>
       *
       * <pre>
       *[无效字段]
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientidBytes() {
        java.lang.Object ref = clientid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TRADECODE_FIELD_NUMBER = 7;
      private java.lang.Object tradecode_;
      /**
       * <code>optional string tradecode = 7;</code>
       *
       * <pre>
       *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
       * </pre>
       */
      public boolean hasTradecode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string tradecode = 7;</code>
       *
       * <pre>
       *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
       * </pre>
       */
      public java.lang.String getTradecode() {
        java.lang.Object ref = tradecode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tradecode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string tradecode = 7;</code>
       *
       * <pre>
       *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTradecodeBytes() {
        java.lang.Object ref = tradecode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tradecode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SNS_LISTS_FIELD_NUMBER = 8;
      private java.lang.Object snsLists_;
      /**
       * <code>optional string sns_lists = 8;</code>
       *
       * <pre>
       *[无效字段] 该广告位允许的社交化播放形式列表
       * </pre>
       */
      public boolean hasSnsLists() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string sns_lists = 8;</code>
       *
       * <pre>
       *[无效字段] 该广告位允许的社交化播放形式列表
       * </pre>
       */
      public java.lang.String getSnsLists() {
        java.lang.Object ref = snsLists_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            snsLists_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sns_lists = 8;</code>
       *
       * <pre>
       *[无效字段] 该广告位允许的社交化播放形式列表
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSnsListsBytes() {
        java.lang.Object ref = snsLists_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          snsLists_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEALID_FIELD_NUMBER = 9;
      private java.lang.Object dealid_;
      /**
       * <code>optional string dealid = 9;</code>
       *
       * <pre>
       * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
       * </pre>
       */
      public boolean hasDealid() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string dealid = 9;</code>
       *
       * <pre>
       * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
       * </pre>
       */
      public java.lang.String getDealid() {
        java.lang.Object ref = dealid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dealid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string dealid = 9;</code>
       *
       * <pre>
       * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDealidBytes() {
        java.lang.Object ref = dealid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dealid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ADM_REQUIRE_FIELD_NUMBER = 10;
      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> admRequire_;
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> getAdmRequireList() {
        return admRequire_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> 
          getAdmRequireOrBuilderList() {
        return admRequire_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      public int getAdmRequireCount() {
        return admRequire_.size();
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat getAdmRequire(int index) {
        return admRequire_.get(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
       *
       * <pre>
       *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder getAdmRequireOrBuilder(
          int index) {
        return admRequire_.get(index);
      }

      public static final int IMP_EXT_FIELD_NUMBER = 11;
      private com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt impExt_;
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
       *
       * <pre>
       *[无效字段]附加信息ssp使用
       * </pre>
       */
      public boolean hasImpExt() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
       *
       * <pre>
       *[无效字段]附加信息ssp使用
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt getImpExt() {
        return impExt_;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
       *
       * <pre>
       *[无效字段]附加信息ssp使用
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExtOrBuilder getImpExtOrBuilder() {
        return impExt_;
      }

      public static final int CHANNEL_FIELD_NUMBER = 12;
      private java.lang.Object channel_;
      /**
       * <code>optional string channel = 12;</code>
       *
       * <pre>
       *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
       * </pre>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string channel = 12;</code>
       *
       * <pre>
       *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
       * </pre>
       */
      public java.lang.String getChannel() {
        java.lang.Object ref = channel_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channel_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string channel = 12;</code>
       *
       * <pre>
       *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChannelBytes() {
        java.lang.Object ref = channel_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DATE_FIELD_NUMBER = 13;
      private java.lang.Object date_;
      /**
       * <code>optional string date = 13;</code>
       *
       * <pre>
       * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
       * </pre>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string date = 13;</code>
       *
       * <pre>
       * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
       * </pre>
       */
      public java.lang.String getDate() {
        java.lang.Object ref = date_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            date_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string date = 13;</code>
       *
       * <pre>
       * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDateBytes() {
        java.lang.Object ref = date_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          date_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TAG_SEQ_FIELD_NUMBER = 14;
      private int tagSeq_;
      /**
       * <code>optional uint32 tag_seq = 14;</code>
       *
       * <pre>
       * [无效字段]信息流广告位的位置 1-255
       * </pre>
       */
      public boolean hasTagSeq() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 tag_seq = 14;</code>
       *
       * <pre>
       * [无效字段]信息流广告位的位置 1-255
       * </pre>
       */
      public int getTagSeq() {
        return tagSeq_;
      }

      public static final int DISPLAY_TYPE_FIELD_NUMBER = 15;
      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType> displayType_;
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType> getDisplayTypeList() {
        return displayType_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder> 
          getDisplayTypeOrBuilderList() {
        return displayType_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      public int getDisplayTypeCount() {
        return displayType_.size();
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType getDisplayType(int index) {
        return displayType_.get(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
       *
       * <pre>
       *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder getDisplayTypeOrBuilder(
          int index) {
        return displayType_.get(index);
      }

      public static final int DEALIDS_FIELD_NUMBER = 16;
      private com.google.protobuf.LazyStringList dealids_;
      /**
       * <code>repeated string dealids = 16;</code>
       *
       * <pre>
       *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getDealidsList() {
        return dealids_;
      }
      /**
       * <code>repeated string dealids = 16;</code>
       *
       * <pre>
       *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
       * </pre>
       */
      public int getDealidsCount() {
        return dealids_.size();
      }
      /**
       * <code>repeated string dealids = 16;</code>
       *
       * <pre>
       *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
       * </pre>
       */
      public java.lang.String getDealids(int index) {
        return dealids_.get(index);
      }
      /**
       * <code>repeated string dealids = 16;</code>
       *
       * <pre>
       *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDealidsBytes(int index) {
        return dealids_.getByteString(index);
      }

      public static final int MAX_ORDER_COUNT_FIELD_NUMBER = 17;
      private int maxOrderCount_;
      /**
       * <code>optional uint32 max_order_count = 17;</code>
       *
       * <pre>
       *允许对这个imp回复的最大订单数（仅rtb）
       * </pre>
       */
      public boolean hasMaxOrderCount() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 max_order_count = 17;</code>
       *
       * <pre>
       *允许对这个imp回复的最大订单数（仅rtb）
       * </pre>
       */
      public int getMaxOrderCount() {
        return maxOrderCount_;
      }

      private void initFields() {
        id_ = "";
        tagid_ = "";
        bidfloor_ = 0F;
        banner_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.getDefaultInstance();
        video_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.getDefaultInstance();
        clientid_ = "";
        tradecode_ = "";
        snsLists_ = "";
        dealid_ = "";
        admRequire_ = java.util.Collections.emptyList();
        impExt_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.getDefaultInstance();
        channel_ = "";
        date_ = "";
        tagSeq_ = 0;
        displayType_ = java.util.Collections.emptyList();
        dealids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        maxOrderCount_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getTagidBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, bidfloor_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, banner_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(5, video_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBytes(6, getClientidBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(7, getTradecodeBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(8, getSnsListsBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBytes(9, getDealidBytes());
        }
        for (int i = 0; i < admRequire_.size(); i++) {
          output.writeMessage(10, admRequire_.get(i));
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeMessage(11, impExt_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBytes(12, getChannelBytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeBytes(13, getDateBytes());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeUInt32(14, tagSeq_);
        }
        for (int i = 0; i < displayType_.size(); i++) {
          output.writeMessage(15, displayType_.get(i));
        }
        for (int i = 0; i < dealids_.size(); i++) {
          output.writeBytes(16, dealids_.getByteString(i));
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeUInt32(17, maxOrderCount_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getTagidBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, bidfloor_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, banner_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, video_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getClientidBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getTradecodeBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(8, getSnsListsBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getDealidBytes());
        }
        for (int i = 0; i < admRequire_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, admRequire_.get(i));
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, impExt_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(12, getChannelBytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(13, getDateBytes());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(14, tagSeq_);
        }
        for (int i = 0; i < displayType_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, displayType_.get(i));
        }
        {
          int dataSize = 0;
          for (int i = 0; i < dealids_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(dealids_.getByteString(i));
          }
          size += dataSize;
          size += 2 * getDealidsList().size();
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(17, maxOrderCount_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Impression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.Impression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.Impression}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.Impression)
          com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.Impression.class, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Request.Impression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getBannerFieldBuilder();
            getVideoFieldBuilder();
            getAdmRequireFieldBuilder();
            getImpExtFieldBuilder();
            getDisplayTypeFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          tagid_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          bidfloor_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          if (bannerBuilder_ == null) {
            banner_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.getDefaultInstance();
          } else {
            bannerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          if (videoBuilder_ == null) {
            video_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.getDefaultInstance();
          } else {
            videoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          clientid_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          tradecode_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          snsLists_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          dealid_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          if (admRequireBuilder_ == null) {
            admRequire_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            admRequireBuilder_.clear();
          }
          if (impExtBuilder_ == null) {
            impExt_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.getDefaultInstance();
          } else {
            impExtBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000400);
          channel_ = "";
          bitField0_ = (bitField0_ & ~0x00000800);
          date_ = "";
          bitField0_ = (bitField0_ & ~0x00001000);
          tagSeq_ = 0;
          bitField0_ = (bitField0_ & ~0x00002000);
          if (displayTypeBuilder_ == null) {
            displayType_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            displayTypeBuilder_.clear();
          }
          dealids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00008000);
          maxOrderCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00010000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Impression_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.Impression getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Request.Impression.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.Impression build() {
          com.madhouse.media.tencent.GPBForDSP.Request.Impression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.Impression buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Request.Impression result = new com.madhouse.media.tencent.GPBForDSP.Request.Impression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.tagid_ = tagid_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.bidfloor_ = bidfloor_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (bannerBuilder_ == null) {
            result.banner_ = banner_;
          } else {
            result.banner_ = bannerBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          if (videoBuilder_ == null) {
            result.video_ = video_;
          } else {
            result.video_ = videoBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.clientid_ = clientid_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.tradecode_ = tradecode_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.snsLists_ = snsLists_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.dealid_ = dealid_;
          if (admRequireBuilder_ == null) {
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
              admRequire_ = java.util.Collections.unmodifiableList(admRequire_);
              bitField0_ = (bitField0_ & ~0x00000200);
            }
            result.admRequire_ = admRequire_;
          } else {
            result.admRequire_ = admRequireBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000200;
          }
          if (impExtBuilder_ == null) {
            result.impExt_ = impExt_;
          } else {
            result.impExt_ = impExtBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000400;
          }
          result.channel_ = channel_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00000800;
          }
          result.date_ = date_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.tagSeq_ = tagSeq_;
          if (displayTypeBuilder_ == null) {
            if (((bitField0_ & 0x00004000) == 0x00004000)) {
              displayType_ = java.util.Collections.unmodifiableList(displayType_);
              bitField0_ = (bitField0_ & ~0x00004000);
            }
            result.displayType_ = displayType_;
          } else {
            result.displayType_ = displayTypeBuilder_.build();
          }
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            dealids_ = dealids_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.dealids_ = dealids_;
          if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.maxOrderCount_ = maxOrderCount_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.Impression) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.Impression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.Impression other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Request.Impression.getDefaultInstance()) return this;
          if (other.hasId()) {
            bitField0_ |= 0x00000001;
            id_ = other.id_;
            onChanged();
          }
          if (other.hasTagid()) {
            bitField0_ |= 0x00000002;
            tagid_ = other.tagid_;
            onChanged();
          }
          if (other.hasBidfloor()) {
            setBidfloor(other.getBidfloor());
          }
          if (other.hasBanner()) {
            mergeBanner(other.getBanner());
          }
          if (other.hasVideo()) {
            mergeVideo(other.getVideo());
          }
          if (other.hasClientid()) {
            bitField0_ |= 0x00000020;
            clientid_ = other.clientid_;
            onChanged();
          }
          if (other.hasTradecode()) {
            bitField0_ |= 0x00000040;
            tradecode_ = other.tradecode_;
            onChanged();
          }
          if (other.hasSnsLists()) {
            bitField0_ |= 0x00000080;
            snsLists_ = other.snsLists_;
            onChanged();
          }
          if (other.hasDealid()) {
            bitField0_ |= 0x00000100;
            dealid_ = other.dealid_;
            onChanged();
          }
          if (admRequireBuilder_ == null) {
            if (!other.admRequire_.isEmpty()) {
              if (admRequire_.isEmpty()) {
                admRequire_ = other.admRequire_;
                bitField0_ = (bitField0_ & ~0x00000200);
              } else {
                ensureAdmRequireIsMutable();
                admRequire_.addAll(other.admRequire_);
              }
              onChanged();
            }
          } else {
            if (!other.admRequire_.isEmpty()) {
              if (admRequireBuilder_.isEmpty()) {
                admRequireBuilder_.dispose();
                admRequireBuilder_ = null;
                admRequire_ = other.admRequire_;
                bitField0_ = (bitField0_ & ~0x00000200);
                admRequireBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAdmRequireFieldBuilder() : null;
              } else {
                admRequireBuilder_.addAllMessages(other.admRequire_);
              }
            }
          }
          if (other.hasImpExt()) {
            mergeImpExt(other.getImpExt());
          }
          if (other.hasChannel()) {
            bitField0_ |= 0x00000800;
            channel_ = other.channel_;
            onChanged();
          }
          if (other.hasDate()) {
            bitField0_ |= 0x00001000;
            date_ = other.date_;
            onChanged();
          }
          if (other.hasTagSeq()) {
            setTagSeq(other.getTagSeq());
          }
          if (displayTypeBuilder_ == null) {
            if (!other.displayType_.isEmpty()) {
              if (displayType_.isEmpty()) {
                displayType_ = other.displayType_;
                bitField0_ = (bitField0_ & ~0x00004000);
              } else {
                ensureDisplayTypeIsMutable();
                displayType_.addAll(other.displayType_);
              }
              onChanged();
            }
          } else {
            if (!other.displayType_.isEmpty()) {
              if (displayTypeBuilder_.isEmpty()) {
                displayTypeBuilder_.dispose();
                displayTypeBuilder_ = null;
                displayType_ = other.displayType_;
                bitField0_ = (bitField0_ & ~0x00004000);
                displayTypeBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getDisplayTypeFieldBuilder() : null;
              } else {
                displayTypeBuilder_.addAllMessages(other.displayType_);
              }
            }
          }
          if (!other.dealids_.isEmpty()) {
            if (dealids_.isEmpty()) {
              dealids_ = other.dealids_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureDealidsIsMutable();
              dealids_.addAll(other.dealids_);
            }
            onChanged();
          }
          if (other.hasMaxOrderCount()) {
            setMaxOrderCount(other.getMaxOrderCount());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Request.Impression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.Impression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object id_ = "";
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
         * </pre>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
         * </pre>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *标识每一次曝光的唯一ID,需要在回复出单时回带给adx，填写到Response. seatbid[0]. bid. Id字段中
         * </pre>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object tagid_ = "";
        /**
         * <code>optional string tagid = 2;</code>
         *
         * <pre>
         *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
         * </pre>
         */
        public boolean hasTagid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string tagid = 2;</code>
         *
         * <pre>
         *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
         * </pre>
         */
        public java.lang.String getTagid() {
          java.lang.Object ref = tagid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              tagid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string tagid = 2;</code>
         *
         * <pre>
         *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTagidBytes() {
          java.lang.Object ref = tagid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tagid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string tagid = 2;</code>
         *
         * <pre>
         *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
         * </pre>
         */
        public Builder setTagid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          tagid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string tagid = 2;</code>
         *
         * <pre>
         *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
         * </pre>
         */
        public Builder clearTagid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          tagid_ = getDefaultInstance().getTagid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string tagid = 2;</code>
         *
         * <pre>
         *广告位ID，dsp先同步到腾讯资源的素材标准，然后根据本字段识别曝光资源的来源（如源于腾讯网或新闻客户端，或者快报app）和素材标准（有几个素材，每个素材尺寸）（如：tagid =”App_Stream_news_news”表示新闻客户端信息流）
         * </pre>
         */
        public Builder setTagidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          tagid_ = value;
          onChanged();
          return this;
        }

        private float bidfloor_ ;
        /**
         * <code>optional float bidfloor = 3;</code>
         *
         * <pre>
         *曝光底价，单位:千次曝光分 dsp出价必须高于本字段的价格，否则无法参与竞价，adx会在底价校验环节过滤掉本次竞价（仅rtb）
         * </pre>
         */
        public boolean hasBidfloor() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float bidfloor = 3;</code>
         *
         * <pre>
         *曝光底价，单位:千次曝光分 dsp出价必须高于本字段的价格，否则无法参与竞价，adx会在底价校验环节过滤掉本次竞价（仅rtb）
         * </pre>
         */
        public float getBidfloor() {
          return bidfloor_;
        }
        /**
         * <code>optional float bidfloor = 3;</code>
         *
         * <pre>
         *曝光底价，单位:千次曝光分 dsp出价必须高于本字段的价格，否则无法参与竞价，adx会在底价校验环节过滤掉本次竞价（仅rtb）
         * </pre>
         */
        public Builder setBidfloor(float value) {
          bitField0_ |= 0x00000004;
          bidfloor_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float bidfloor = 3;</code>
         *
         * <pre>
         *曝光底价，单位:千次曝光分 dsp出价必须高于本字段的价格，否则无法参与竞价，adx会在底价校验环节过滤掉本次竞价（仅rtb）
         * </pre>
         */
        public Builder clearBidfloor() {
          bitField0_ = (bitField0_ & ~0x00000004);
          bidfloor_ = 0F;
          onChanged();
          return this;
        }

        private com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner banner_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.BannerOrBuilder> bannerBuilder_;
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
         *
         * <pre>
         *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
         * </pre>
         */
        public boolean hasBanner() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
         *
         * <pre>
         *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner getBanner() {
          if (bannerBuilder_ == null) {
            return banner_;
          } else {
            return bannerBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
         *
         * <pre>
         *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
         * </pre>
         */
        public Builder setBanner(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner value) {
          if (bannerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            banner_ = value;
            onChanged();
          } else {
            bannerBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
         *
         * <pre>
         *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
         * </pre>
         */
        public Builder setBanner(
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.Builder builderForValue) {
          if (bannerBuilder_ == null) {
            banner_ = builderForValue.build();
            onChanged();
          } else {
            bannerBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
         *
         * <pre>
         *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
         * </pre>
         */
        public Builder mergeBanner(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner value) {
          if (bannerBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                banner_ != com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.getDefaultInstance()) {
              banner_ =
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.newBuilder(banner_).mergeFrom(value).buildPartial();
            } else {
              banner_ = value;
            }
            onChanged();
          } else {
            bannerBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
         *
         * <pre>
         *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
         * </pre>
         */
        public Builder clearBanner() {
          if (bannerBuilder_ == null) {
            banner_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.getDefaultInstance();
            onChanged();
          } else {
            bannerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
         *
         * <pre>
         *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.Builder getBannerBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getBannerFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
         *
         * <pre>
         *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.BannerOrBuilder getBannerOrBuilder() {
          if (bannerBuilder_ != null) {
            return bannerBuilder_.getMessageOrBuilder();
          } else {
            return banner_;
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Banner banner = 4;</code>
         *
         * <pre>
         *banner广告位信息（框外资源才有，否则为空）本字段在移动端资源可以忽略
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.BannerOrBuilder> 
            getBannerFieldBuilder() {
          if (bannerBuilder_ == null) {
            bannerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Banner.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.BannerOrBuilder>(
                    getBanner(),
                    getParentForChildren(),
                    isClean());
            banner_ = null;
          }
          return bannerBuilder_;
        }

        private com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video video_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.VideoOrBuilder> videoBuilder_;
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
         *
         * <pre>
         *video广告位信息(框内资源才有，否则为空)
         * </pre>
         */
        public boolean hasVideo() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
         *
         * <pre>
         *video广告位信息(框内资源才有，否则为空)
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video getVideo() {
          if (videoBuilder_ == null) {
            return video_;
          } else {
            return videoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
         *
         * <pre>
         *video广告位信息(框内资源才有，否则为空)
         * </pre>
         */
        public Builder setVideo(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video value) {
          if (videoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            video_ = value;
            onChanged();
          } else {
            videoBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
         *
         * <pre>
         *video广告位信息(框内资源才有，否则为空)
         * </pre>
         */
        public Builder setVideo(
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.Builder builderForValue) {
          if (videoBuilder_ == null) {
            video_ = builderForValue.build();
            onChanged();
          } else {
            videoBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
         *
         * <pre>
         *video广告位信息(框内资源才有，否则为空)
         * </pre>
         */
        public Builder mergeVideo(com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video value) {
          if (videoBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                video_ != com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.getDefaultInstance()) {
              video_ =
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.newBuilder(video_).mergeFrom(value).buildPartial();
            } else {
              video_ = value;
            }
            onChanged();
          } else {
            videoBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
         *
         * <pre>
         *video广告位信息(框内资源才有，否则为空)
         * </pre>
         */
        public Builder clearVideo() {
          if (videoBuilder_ == null) {
            video_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.getDefaultInstance();
            onChanged();
          } else {
            videoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
         *
         * <pre>
         *video广告位信息(框内资源才有，否则为空)
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.Builder getVideoBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getVideoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
         *
         * <pre>
         *video广告位信息(框内资源才有，否则为空)
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.VideoOrBuilder getVideoOrBuilder() {
          if (videoBuilder_ != null) {
            return videoBuilder_.getMessageOrBuilder();
          } else {
            return video_;
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.Video video = 5;</code>
         *
         * <pre>
         *video广告位信息(框内资源才有，否则为空)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.VideoOrBuilder> 
            getVideoFieldBuilder() {
          if (videoBuilder_ == null) {
            videoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Video.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.VideoOrBuilder>(
                    getVideo(),
                    getParentForChildren(),
                    isClean());
            video_ = null;
          }
          return videoBuilder_;
        }

        private java.lang.Object clientid_ = "";
        /**
         * <code>optional string clientid = 6;</code>
         *
         * <pre>
         *[无效字段]
         * </pre>
         */
        public boolean hasClientid() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string clientid = 6;</code>
         *
         * <pre>
         *[无效字段]
         * </pre>
         */
        public java.lang.String getClientid() {
          java.lang.Object ref = clientid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              clientid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string clientid = 6;</code>
         *
         * <pre>
         *[无效字段]
         * </pre>
         */
        public com.google.protobuf.ByteString
            getClientidBytes() {
          java.lang.Object ref = clientid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            clientid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string clientid = 6;</code>
         *
         * <pre>
         *[无效字段]
         * </pre>
         */
        public Builder setClientid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          clientid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string clientid = 6;</code>
         *
         * <pre>
         *[无效字段]
         * </pre>
         */
        public Builder clearClientid() {
          bitField0_ = (bitField0_ & ~0x00000020);
          clientid_ = getDefaultInstance().getClientid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string clientid = 6;</code>
         *
         * <pre>
         *[无效字段]
         * </pre>
         */
        public Builder setClientidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          clientid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object tradecode_ = "";
        /**
         * <code>optional string tradecode = 7;</code>
         *
         * <pre>
         *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
         * </pre>
         */
        public boolean hasTradecode() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string tradecode = 7;</code>
         *
         * <pre>
         *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
         * </pre>
         */
        public java.lang.String getTradecode() {
          java.lang.Object ref = tradecode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              tradecode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string tradecode = 7;</code>
         *
         * <pre>
         *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTradecodeBytes() {
          java.lang.Object ref = tradecode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tradecode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string tradecode = 7;</code>
         *
         * <pre>
         *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
         * </pre>
         */
        public Builder setTradecode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          tradecode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string tradecode = 7;</code>
         *
         * <pre>
         *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
         * </pre>
         */
        public Builder clearTradecode() {
          bitField0_ = (bitField0_ & ~0x00000040);
          tradecode_ = getDefaultInstance().getTradecode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string tradecode = 7;</code>
         *
         * <pre>
         *该广告位的限制行业编码列表，如：018;014008;008014013;006;001;004;002(一级，二级，三级)，行业编码的具体含义dsp可以离线同步到一个行业编码表（仅rtb）
         * </pre>
         */
        public Builder setTradecodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          tradecode_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object snsLists_ = "";
        /**
         * <code>optional string sns_lists = 8;</code>
         *
         * <pre>
         *[无效字段] 该广告位允许的社交化播放形式列表
         * </pre>
         */
        public boolean hasSnsLists() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string sns_lists = 8;</code>
         *
         * <pre>
         *[无效字段] 该广告位允许的社交化播放形式列表
         * </pre>
         */
        public java.lang.String getSnsLists() {
          java.lang.Object ref = snsLists_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              snsLists_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string sns_lists = 8;</code>
         *
         * <pre>
         *[无效字段] 该广告位允许的社交化播放形式列表
         * </pre>
         */
        public com.google.protobuf.ByteString
            getSnsListsBytes() {
          java.lang.Object ref = snsLists_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            snsLists_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sns_lists = 8;</code>
         *
         * <pre>
         *[无效字段] 该广告位允许的社交化播放形式列表
         * </pre>
         */
        public Builder setSnsLists(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          snsLists_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sns_lists = 8;</code>
         *
         * <pre>
         *[无效字段] 该广告位允许的社交化播放形式列表
         * </pre>
         */
        public Builder clearSnsLists() {
          bitField0_ = (bitField0_ & ~0x00000080);
          snsLists_ = getDefaultInstance().getSnsLists();
          onChanged();
          return this;
        }
        /**
         * <code>optional string sns_lists = 8;</code>
         *
         * <pre>
         *[无效字段] 该广告位允许的社交化播放形式列表
         * </pre>
         */
        public Builder setSnsListsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          snsLists_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object dealid_ = "";
        /**
         * <code>optional string dealid = 9;</code>
         *
         * <pre>
         * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
         * </pre>
         */
        public boolean hasDealid() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string dealid = 9;</code>
         *
         * <pre>
         * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
         * </pre>
         */
        public java.lang.String getDealid() {
          java.lang.Object ref = dealid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              dealid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string dealid = 9;</code>
         *
         * <pre>
         * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDealidBytes() {
          java.lang.Object ref = dealid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dealid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string dealid = 9;</code>
         *
         * <pre>
         * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
         * </pre>
         */
        public Builder setDealid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          dealid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string dealid = 9;</code>
         *
         * <pre>
         * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
         * </pre>
         */
        public Builder clearDealid() {
          bitField0_ = (bitField0_ & ~0x00000100);
          dealid_ = getDefaultInstance().getDealid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string dealid = 9;</code>
         *
         * <pre>
         * 预定的资源id，仅pd和pdb业务使用，通过本id可以知道本次曝光对应的品牌和排期，本字段为dsp选单的核心字段（仅pd&amp;pdb）
         * </pre>
         */
        public Builder setDealidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          dealid_ = value;
          onChanged();
          return this;
        }

        private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> admRequire_ =
          java.util.Collections.emptyList();
        private void ensureAdmRequireIsMutable() {
          if (!((bitField0_ & 0x00000200) == 0x00000200)) {
            admRequire_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat>(admRequire_);
            bitField0_ |= 0x00000200;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> admRequireBuilder_;

        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> getAdmRequireList() {
          if (admRequireBuilder_ == null) {
            return java.util.Collections.unmodifiableList(admRequire_);
          } else {
            return admRequireBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public int getAdmRequireCount() {
          if (admRequireBuilder_ == null) {
            return admRequire_.size();
          } else {
            return admRequireBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat getAdmRequire(int index) {
          if (admRequireBuilder_ == null) {
            return admRequire_.get(index);
          } else {
            return admRequireBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public Builder setAdmRequire(
            int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat value) {
          if (admRequireBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdmRequireIsMutable();
            admRequire_.set(index, value);
            onChanged();
          } else {
            admRequireBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public Builder setAdmRequire(
            int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder builderForValue) {
          if (admRequireBuilder_ == null) {
            ensureAdmRequireIsMutable();
            admRequire_.set(index, builderForValue.build());
            onChanged();
          } else {
            admRequireBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public Builder addAdmRequire(com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat value) {
          if (admRequireBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdmRequireIsMutable();
            admRequire_.add(value);
            onChanged();
          } else {
            admRequireBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public Builder addAdmRequire(
            int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat value) {
          if (admRequireBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdmRequireIsMutable();
            admRequire_.add(index, value);
            onChanged();
          } else {
            admRequireBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public Builder addAdmRequire(
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder builderForValue) {
          if (admRequireBuilder_ == null) {
            ensureAdmRequireIsMutable();
            admRequire_.add(builderForValue.build());
            onChanged();
          } else {
            admRequireBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public Builder addAdmRequire(
            int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder builderForValue) {
          if (admRequireBuilder_ == null) {
            ensureAdmRequireIsMutable();
            admRequire_.add(index, builderForValue.build());
            onChanged();
          } else {
            admRequireBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public Builder addAllAdmRequire(
            java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat> values) {
          if (admRequireBuilder_ == null) {
            ensureAdmRequireIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, admRequire_);
            onChanged();
          } else {
            admRequireBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public Builder clearAdmRequire() {
          if (admRequireBuilder_ == null) {
            admRequire_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000200);
            onChanged();
          } else {
            admRequireBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public Builder removeAdmRequire(int index) {
          if (admRequireBuilder_ == null) {
            ensureAdmRequireIsMutable();
            admRequire_.remove(index);
            onChanged();
          } else {
            admRequireBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder getAdmRequireBuilder(
            int index) {
          return getAdmRequireFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder getAdmRequireOrBuilder(
            int index) {
          if (admRequireBuilder_ == null) {
            return admRequire_.get(index);  } else {
            return admRequireBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> 
             getAdmRequireOrBuilderList() {
          if (admRequireBuilder_ != null) {
            return admRequireBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(admRequire_);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder addAdmRequireBuilder() {
          return getAdmRequireFieldBuilder().addBuilder(
              com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder addAdmRequireBuilder(
            int index) {
          return getAdmRequireFieldBuilder().addBuilder(
              index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.MaterialFormat adm_require = 10;</code>
         *
         * <pre>
         *rtb时填写第一个默认播放形式要求的素材格式，dsp还可使用的其他rtb素材规格以离线同步为准，dsp可忽略本字段；pd&amp;pdb时填写预定播放形式所要求的素材格式。当本字段存在时，DSP所回复的订单必须素材顺序和格式都一致; 
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder> 
             getAdmRequireBuilderList() {
          return getAdmRequireFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder> 
            getAdmRequireFieldBuilder() {
          if (admRequireBuilder_ == null) {
            admRequireBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormat.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.MaterialFormatOrBuilder>(
                    admRequire_,
                    ((bitField0_ & 0x00000200) == 0x00000200),
                    getParentForChildren(),
                    isClean());
            admRequire_ = null;
          }
          return admRequireBuilder_;
        }

        private com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt impExt_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt, com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExtOrBuilder> impExtBuilder_;
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
         *
         * <pre>
         *[无效字段]附加信息ssp使用
         * </pre>
         */
        public boolean hasImpExt() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
         *
         * <pre>
         *[无效字段]附加信息ssp使用
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt getImpExt() {
          if (impExtBuilder_ == null) {
            return impExt_;
          } else {
            return impExtBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
         *
         * <pre>
         *[无效字段]附加信息ssp使用
         * </pre>
         */
        public Builder setImpExt(com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt value) {
          if (impExtBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            impExt_ = value;
            onChanged();
          } else {
            impExtBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000400;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
         *
         * <pre>
         *[无效字段]附加信息ssp使用
         * </pre>
         */
        public Builder setImpExt(
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.Builder builderForValue) {
          if (impExtBuilder_ == null) {
            impExt_ = builderForValue.build();
            onChanged();
          } else {
            impExtBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000400;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
         *
         * <pre>
         *[无效字段]附加信息ssp使用
         * </pre>
         */
        public Builder mergeImpExt(com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt value) {
          if (impExtBuilder_ == null) {
            if (((bitField0_ & 0x00000400) == 0x00000400) &&
                impExt_ != com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.getDefaultInstance()) {
              impExt_ =
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.newBuilder(impExt_).mergeFrom(value).buildPartial();
            } else {
              impExt_ = value;
            }
            onChanged();
          } else {
            impExtBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000400;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
         *
         * <pre>
         *[无效字段]附加信息ssp使用
         * </pre>
         */
        public Builder clearImpExt() {
          if (impExtBuilder_ == null) {
            impExt_ = com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.getDefaultInstance();
            onChanged();
          } else {
            impExtBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
         *
         * <pre>
         *[无效字段]附加信息ssp使用
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.Builder getImpExtBuilder() {
          bitField0_ |= 0x00000400;
          onChanged();
          return getImpExtFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
         *
         * <pre>
         *[无效字段]附加信息ssp使用
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExtOrBuilder getImpExtOrBuilder() {
          if (impExtBuilder_ != null) {
            return impExtBuilder_.getMessageOrBuilder();
          } else {
            return impExt_;
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Impression.ImpExt imp_ext = 11;</code>
         *
         * <pre>
         *[无效字段]附加信息ssp使用
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt, com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExtOrBuilder> 
            getImpExtFieldBuilder() {
          if (impExtBuilder_ == null) {
            impExtBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt, com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExt.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.ImpExtOrBuilder>(
                    getImpExt(),
                    getParentForChildren(),
                    isClean());
            impExt_ = null;
          }
          return impExtBuilder_;
        }

        private java.lang.Object channel_ = "";
        /**
         * <code>optional string channel = 12;</code>
         *
         * <pre>
         *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
         * </pre>
         */
        public boolean hasChannel() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional string channel = 12;</code>
         *
         * <pre>
         *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
         * </pre>
         */
        public java.lang.String getChannel() {
          java.lang.Object ref = channel_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              channel_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string channel = 12;</code>
         *
         * <pre>
         *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
         * </pre>
         */
        public com.google.protobuf.ByteString
            getChannelBytes() {
          java.lang.Object ref = channel_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            channel_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string channel = 12;</code>
         *
         * <pre>
         *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
         * </pre>
         */
        public Builder setChannel(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
          channel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string channel = 12;</code>
         *
         * <pre>
         *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
         * </pre>
         */
        public Builder clearChannel() {
          bitField0_ = (bitField0_ & ~0x00000800);
          channel_ = getDefaultInstance().getChannel();
          onChanged();
          return this;
        }
        /**
         * <code>optional string channel = 12;</code>
         *
         * <pre>
         *新闻频道号或视频内容id  仅提供编码，不提供频道映射关系
         * </pre>
         */
        public Builder setChannelBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
          channel_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object date_ = "";
        /**
         * <code>optional string date = 13;</code>
         *
         * <pre>
         * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
         * </pre>
         */
        public boolean hasDate() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional string date = 13;</code>
         *
         * <pre>
         * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
         * </pre>
         */
        public java.lang.String getDate() {
          java.lang.Object ref = date_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              date_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string date = 13;</code>
         *
         * <pre>
         * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDateBytes() {
          java.lang.Object ref = date_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            date_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string date = 13;</code>
         *
         * <pre>
         * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
         * </pre>
         */
        public Builder setDate(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
          date_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string date = 13;</code>
         *
         * <pre>
         * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
         * </pre>
         */
        public Builder clearDate() {
          bitField0_ = (bitField0_ & ~0x00001000);
          date_ = getDefaultInstance().getDate();
          onChanged();
          return this;
        }
        /**
         * <code>optional string date = 13;</code>
         *
         * <pre>
         * [无效字段]请求曝光的日期（闪屏用）格式 YYYY-MM-DD
         * </pre>
         */
        public Builder setDateBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
          date_ = value;
          onChanged();
          return this;
        }

        private int tagSeq_ ;
        /**
         * <code>optional uint32 tag_seq = 14;</code>
         *
         * <pre>
         * [无效字段]信息流广告位的位置 1-255
         * </pre>
         */
        public boolean hasTagSeq() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional uint32 tag_seq = 14;</code>
         *
         * <pre>
         * [无效字段]信息流广告位的位置 1-255
         * </pre>
         */
        public int getTagSeq() {
          return tagSeq_;
        }
        /**
         * <code>optional uint32 tag_seq = 14;</code>
         *
         * <pre>
         * [无效字段]信息流广告位的位置 1-255
         * </pre>
         */
        public Builder setTagSeq(int value) {
          bitField0_ |= 0x00002000;
          tagSeq_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tag_seq = 14;</code>
         *
         * <pre>
         * [无效字段]信息流广告位的位置 1-255
         * </pre>
         */
        public Builder clearTagSeq() {
          bitField0_ = (bitField0_ & ~0x00002000);
          tagSeq_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType> displayType_ =
          java.util.Collections.emptyList();
        private void ensureDisplayTypeIsMutable() {
          if (!((bitField0_ & 0x00004000) == 0x00004000)) {
            displayType_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType>(displayType_);
            bitField0_ |= 0x00004000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder> displayTypeBuilder_;

        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType> getDisplayTypeList() {
          if (displayTypeBuilder_ == null) {
            return java.util.Collections.unmodifiableList(displayType_);
          } else {
            return displayTypeBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public int getDisplayTypeCount() {
          if (displayTypeBuilder_ == null) {
            return displayType_.size();
          } else {
            return displayTypeBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType getDisplayType(int index) {
          if (displayTypeBuilder_ == null) {
            return displayType_.get(index);
          } else {
            return displayTypeBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public Builder setDisplayType(
            int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType value) {
          if (displayTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDisplayTypeIsMutable();
            displayType_.set(index, value);
            onChanged();
          } else {
            displayTypeBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public Builder setDisplayType(
            int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder builderForValue) {
          if (displayTypeBuilder_ == null) {
            ensureDisplayTypeIsMutable();
            displayType_.set(index, builderForValue.build());
            onChanged();
          } else {
            displayTypeBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public Builder addDisplayType(com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType value) {
          if (displayTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDisplayTypeIsMutable();
            displayType_.add(value);
            onChanged();
          } else {
            displayTypeBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public Builder addDisplayType(
            int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType value) {
          if (displayTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDisplayTypeIsMutable();
            displayType_.add(index, value);
            onChanged();
          } else {
            displayTypeBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public Builder addDisplayType(
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder builderForValue) {
          if (displayTypeBuilder_ == null) {
            ensureDisplayTypeIsMutable();
            displayType_.add(builderForValue.build());
            onChanged();
          } else {
            displayTypeBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public Builder addDisplayType(
            int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder builderForValue) {
          if (displayTypeBuilder_ == null) {
            ensureDisplayTypeIsMutable();
            displayType_.add(index, builderForValue.build());
            onChanged();
          } else {
            displayTypeBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public Builder addAllDisplayType(
            java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType> values) {
          if (displayTypeBuilder_ == null) {
            ensureDisplayTypeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, displayType_);
            onChanged();
          } else {
            displayTypeBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public Builder clearDisplayType() {
          if (displayTypeBuilder_ == null) {
            displayType_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00004000);
            onChanged();
          } else {
            displayTypeBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public Builder removeDisplayType(int index) {
          if (displayTypeBuilder_ == null) {
            ensureDisplayTypeIsMutable();
            displayType_.remove(index);
            onChanged();
          } else {
            displayTypeBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder getDisplayTypeBuilder(
            int index) {
          return getDisplayTypeFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder getDisplayTypeOrBuilder(
            int index) {
          if (displayTypeBuilder_ == null) {
            return displayType_.get(index);  } else {
            return displayTypeBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder> 
             getDisplayTypeOrBuilderList() {
          if (displayTypeBuilder_ != null) {
            return displayTypeBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(displayType_);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder addDisplayTypeBuilder() {
          return getDisplayTypeFieldBuilder().addBuilder(
              com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder addDisplayTypeBuilder(
            int index) {
          return getDisplayTypeFieldBuilder().addBuilder(
              index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Request.Impression.DisplayType display_type = 15;</code>
         *
         * <pre>
         *播放形式类型（仅免审核模式才有本字段，rtb时列举所有可用的播放形式，pd&amp;pdb时只有一个预定的播放形式）      
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder> 
             getDisplayTypeBuilderList() {
          return getDisplayTypeFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder> 
            getDisplayTypeFieldBuilder() {
          if (displayTypeBuilder_ == null) {
            displayTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayType.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Impression.DisplayTypeOrBuilder>(
                    displayType_,
                    ((bitField0_ & 0x00004000) == 0x00004000),
                    getParentForChildren(),
                    isClean());
            displayType_ = null;
          }
          return displayTypeBuilder_;
        }

        private com.google.protobuf.LazyStringList dealids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureDealidsIsMutable() {
          if (!((bitField0_ & 0x00008000) == 0x00008000)) {
            dealids_ = new com.google.protobuf.LazyStringArrayList(dealids_);
            bitField0_ |= 0x00008000;
           }
        }
        /**
         * <code>repeated string dealids = 16;</code>
         *
         * <pre>
         *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getDealidsList() {
          return dealids_.getUnmodifiableView();
        }
        /**
         * <code>repeated string dealids = 16;</code>
         *
         * <pre>
         *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
         * </pre>
         */
        public int getDealidsCount() {
          return dealids_.size();
        }
        /**
         * <code>repeated string dealids = 16;</code>
         *
         * <pre>
         *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
         * </pre>
         */
        public java.lang.String getDealids(int index) {
          return dealids_.get(index);
        }
        /**
         * <code>repeated string dealids = 16;</code>
         *
         * <pre>
         *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDealidsBytes(int index) {
          return dealids_.getByteString(index);
        }
        /**
         * <code>repeated string dealids = 16;</code>
         *
         * <pre>
         *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
         * </pre>
         */
        public Builder setDealids(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureDealidsIsMutable();
          dealids_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string dealids = 16;</code>
         *
         * <pre>
         *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
         * </pre>
         */
        public Builder addDealids(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureDealidsIsMutable();
          dealids_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string dealids = 16;</code>
         *
         * <pre>
         *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
         * </pre>
         */
        public Builder addAllDealids(
            java.lang.Iterable<java.lang.String> values) {
          ensureDealidsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dealids_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string dealids = 16;</code>
         *
         * <pre>
         *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
         * </pre>
         */
        public Builder clearDealids() {
          dealids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string dealids = 16;</code>
         *
         * <pre>
         *[无效字段]本次曝光的备选资源id（可选）（仅pd&amp;pdb）
         * </pre>
         */
        public Builder addDealidsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureDealidsIsMutable();
          dealids_.add(value);
          onChanged();
          return this;
        }

        private int maxOrderCount_ ;
        /**
         * <code>optional uint32 max_order_count = 17;</code>
         *
         * <pre>
         *允许对这个imp回复的最大订单数（仅rtb）
         * </pre>
         */
        public boolean hasMaxOrderCount() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional uint32 max_order_count = 17;</code>
         *
         * <pre>
         *允许对这个imp回复的最大订单数（仅rtb）
         * </pre>
         */
        public int getMaxOrderCount() {
          return maxOrderCount_;
        }
        /**
         * <code>optional uint32 max_order_count = 17;</code>
         *
         * <pre>
         *允许对这个imp回复的最大订单数（仅rtb）
         * </pre>
         */
        public Builder setMaxOrderCount(int value) {
          bitField0_ |= 0x00010000;
          maxOrderCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 max_order_count = 17;</code>
         *
         * <pre>
         *允许对这个imp回复的最大订单数（仅rtb）
         * </pre>
         */
        public Builder clearMaxOrderCount() {
          bitField0_ = (bitField0_ & ~0x00010000);
          maxOrderCount_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.Impression)
      }

      static {
        defaultInstance = new Impression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.Impression)
    }

    public interface SiteOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.Site)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *网站名称
       * </pre>
       */
      boolean hasName();
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *网站名称
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *网站名称
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string page = 2;</code>
       *
       * <pre>
       *当前页面url
       * </pre>
       */
      boolean hasPage();
      /**
       * <code>optional string page = 2;</code>
       *
       * <pre>
       *当前页面url
       * </pre>
       */
      java.lang.String getPage();
      /**
       * <code>optional string page = 2;</code>
       *
       * <pre>
       *当前页面url
       * </pre>
       */
      com.google.protobuf.ByteString
          getPageBytes();

      /**
       * <code>optional string ref = 3;</code>
       *
       * <pre>
       *referrer url
       * </pre>
       */
      boolean hasRef();
      /**
       * <code>optional string ref = 3;</code>
       *
       * <pre>
       *referrer url
       * </pre>
       */
      java.lang.String getRef();
      /**
       * <code>optional string ref = 3;</code>
       *
       * <pre>
       *referrer url
       * </pre>
       */
      com.google.protobuf.ByteString
          getRefBytes();

      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       *频道号   无效字段
       * </pre>
       */
      boolean hasChannel();
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       *频道号   无效字段
       * </pre>
       */
      java.lang.String getChannel();
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       *频道号   无效字段
       * </pre>
       */
      com.google.protobuf.ByteString
          getChannelBytes();
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Request.Site}
     */
    public static final class Site extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.Site)
        SiteOrBuilder {
      // Use Site.newBuilder() to construct.
      private Site(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Site(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Site defaultInstance;
      public static Site getDefaultInstance() {
        return defaultInstance;
      }

      public Site getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Site(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                page_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                ref_ = bs;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                channel_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Site_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Site_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Request.Site.class, com.madhouse.media.tencent.GPBForDSP.Request.Site.Builder.class);
      }

      public static com.google.protobuf.Parser<Site> PARSER =
          new com.google.protobuf.AbstractParser<Site>() {
        public Site parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Site(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Site> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *网站名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *网站名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *网站名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PAGE_FIELD_NUMBER = 2;
      private java.lang.Object page_;
      /**
       * <code>optional string page = 2;</code>
       *
       * <pre>
       *当前页面url
       * </pre>
       */
      public boolean hasPage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string page = 2;</code>
       *
       * <pre>
       *当前页面url
       * </pre>
       */
      public java.lang.String getPage() {
        java.lang.Object ref = page_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            page_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string page = 2;</code>
       *
       * <pre>
       *当前页面url
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPageBytes() {
        java.lang.Object ref = page_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          page_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int REF_FIELD_NUMBER = 3;
      private java.lang.Object ref_;
      /**
       * <code>optional string ref = 3;</code>
       *
       * <pre>
       *referrer url
       * </pre>
       */
      public boolean hasRef() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ref = 3;</code>
       *
       * <pre>
       *referrer url
       * </pre>
       */
      public java.lang.String getRef() {
        java.lang.Object ref = ref_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ref_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string ref = 3;</code>
       *
       * <pre>
       *referrer url
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRefBytes() {
        java.lang.Object ref = ref_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ref_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CHANNEL_FIELD_NUMBER = 4;
      private java.lang.Object channel_;
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       *频道号   无效字段
       * </pre>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       *频道号   无效字段
       * </pre>
       */
      public java.lang.String getChannel() {
        java.lang.Object ref = channel_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channel_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       *频道号   无效字段
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChannelBytes() {
        java.lang.Object ref = channel_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        name_ = "";
        page_ = "";
        ref_ = "";
        channel_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getPageBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getRefBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getChannelBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getPageBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getRefBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getChannelBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Site parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.Site prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.Site}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.Site)
          com.madhouse.media.tencent.GPBForDSP.Request.SiteOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Site_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Site_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.Site.class, com.madhouse.media.tencent.GPBForDSP.Request.Site.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Request.Site.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          page_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          ref_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          channel_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Site_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.Site getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Request.Site.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.Site build() {
          com.madhouse.media.tencent.GPBForDSP.Request.Site result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.Site buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Request.Site result = new com.madhouse.media.tencent.GPBForDSP.Request.Site(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.page_ = page_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.ref_ = ref_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.channel_ = channel_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.Site) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.Site)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.Site other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Request.Site.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasPage()) {
            bitField0_ |= 0x00000002;
            page_ = other.page_;
            onChanged();
          }
          if (other.hasRef()) {
            bitField0_ |= 0x00000004;
            ref_ = other.ref_;
            onChanged();
          }
          if (other.hasChannel()) {
            bitField0_ |= 0x00000008;
            channel_ = other.channel_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Request.Site parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.Site) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         *网站名称
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         *网站名称
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         *网站名称
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         *网站名称
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         *网站名称
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         *网站名称
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object page_ = "";
        /**
         * <code>optional string page = 2;</code>
         *
         * <pre>
         *当前页面url
         * </pre>
         */
        public boolean hasPage() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string page = 2;</code>
         *
         * <pre>
         *当前页面url
         * </pre>
         */
        public java.lang.String getPage() {
          java.lang.Object ref = page_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              page_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string page = 2;</code>
         *
         * <pre>
         *当前页面url
         * </pre>
         */
        public com.google.protobuf.ByteString
            getPageBytes() {
          java.lang.Object ref = page_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            page_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string page = 2;</code>
         *
         * <pre>
         *当前页面url
         * </pre>
         */
        public Builder setPage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          page_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string page = 2;</code>
         *
         * <pre>
         *当前页面url
         * </pre>
         */
        public Builder clearPage() {
          bitField0_ = (bitField0_ & ~0x00000002);
          page_ = getDefaultInstance().getPage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string page = 2;</code>
         *
         * <pre>
         *当前页面url
         * </pre>
         */
        public Builder setPageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          page_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object ref_ = "";
        /**
         * <code>optional string ref = 3;</code>
         *
         * <pre>
         *referrer url
         * </pre>
         */
        public boolean hasRef() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string ref = 3;</code>
         *
         * <pre>
         *referrer url
         * </pre>
         */
        public java.lang.String getRef() {
          java.lang.Object ref = ref_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              ref_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ref = 3;</code>
         *
         * <pre>
         *referrer url
         * </pre>
         */
        public com.google.protobuf.ByteString
            getRefBytes() {
          java.lang.Object ref = ref_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ref_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ref = 3;</code>
         *
         * <pre>
         *referrer url
         * </pre>
         */
        public Builder setRef(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          ref_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ref = 3;</code>
         *
         * <pre>
         *referrer url
         * </pre>
         */
        public Builder clearRef() {
          bitField0_ = (bitField0_ & ~0x00000004);
          ref_ = getDefaultInstance().getRef();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ref = 3;</code>
         *
         * <pre>
         *referrer url
         * </pre>
         */
        public Builder setRefBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          ref_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object channel_ = "";
        /**
         * <code>optional string channel = 4;</code>
         *
         * <pre>
         *频道号   无效字段
         * </pre>
         */
        public boolean hasChannel() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string channel = 4;</code>
         *
         * <pre>
         *频道号   无效字段
         * </pre>
         */
        public java.lang.String getChannel() {
          java.lang.Object ref = channel_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              channel_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string channel = 4;</code>
         *
         * <pre>
         *频道号   无效字段
         * </pre>
         */
        public com.google.protobuf.ByteString
            getChannelBytes() {
          java.lang.Object ref = channel_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            channel_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string channel = 4;</code>
         *
         * <pre>
         *频道号   无效字段
         * </pre>
         */
        public Builder setChannel(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          channel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string channel = 4;</code>
         *
         * <pre>
         *频道号   无效字段
         * </pre>
         */
        public Builder clearChannel() {
          bitField0_ = (bitField0_ & ~0x00000008);
          channel_ = getDefaultInstance().getChannel();
          onChanged();
          return this;
        }
        /**
         * <code>optional string channel = 4;</code>
         *
         * <pre>
         *频道号   无效字段
         * </pre>
         */
        public Builder setChannelBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          channel_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.Site)
      }

      static {
        defaultInstance = new Site(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.Site)
    }

    public interface DeviceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.Device)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string ip = 1;</code>
       *
       * <pre>
       *用户ip
       * </pre>
       */
      boolean hasIp();
      /**
       * <code>optional string ip = 1;</code>
       *
       * <pre>
       *用户ip
       * </pre>
       */
      java.lang.String getIp();
      /**
       * <code>optional string ip = 1;</code>
       *
       * <pre>
       *用户ip
       * </pre>
       */
      com.google.protobuf.ByteString
          getIpBytes();

      /**
       * <code>optional string ua = 2;</code>
       *
       * <pre>
       *设备user-agent
       * </pre>
       */
      boolean hasUa();
      /**
       * <code>optional string ua = 2;</code>
       *
       * <pre>
       *设备user-agent
       * </pre>
       */
      java.lang.String getUa();
      /**
       * <code>optional string ua = 2;</code>
       *
       * <pre>
       *设备user-agent
       * </pre>
       */
      com.google.protobuf.ByteString
          getUaBytes();

      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
       *
       * <pre>
       *[无效字段] 地理位置信息，只提供一定精度模糊值
       * </pre>
       */
      boolean hasGeo();
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
       *
       * <pre>
       *[无效字段] 地理位置信息，只提供一定精度模糊值
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo getGeo();
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
       *
       * <pre>
       *[无效字段] 地理位置信息，只提供一定精度模糊值
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Request.Device.GeoOrBuilder getGeoOrBuilder();

      /**
       * <code>optional string idfa = 4;</code>
       *
       * <pre>
       *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
       * </pre>
       */
      boolean hasIdfa();
      /**
       * <code>optional string idfa = 4;</code>
       *
       * <pre>
       *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
       * </pre>
       */
      java.lang.String getIdfa();
      /**
       * <code>optional string idfa = 4;</code>
       *
       * <pre>
       *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
       * </pre>
       */
      com.google.protobuf.ByteString
          getIdfaBytes();

      /**
       * <code>optional uint32 idfa_enc = 5;</code>
       *
       * <pre>
       *0: 明文，1 ：MD5(idfa)转大写, 2:SHA1 表示idfa是否加密,默认填0表示不加密，若无idfa则本字段为空
       * </pre>
       */
      boolean hasIdfaEnc();
      /**
       * <code>optional uint32 idfa_enc = 5;</code>
       *
       * <pre>
       *0: 明文，1 ：MD5(idfa)转大写, 2:SHA1 表示idfa是否加密,默认填0表示不加密，若无idfa则本字段为空
       * </pre>
       */
      int getIdfaEnc();

      /**
       * <code>optional string openudid = 6;</code>
       *
       * <pre>
       *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
       * </pre>
       */
      boolean hasOpenudid();
      /**
       * <code>optional string openudid = 6;</code>
       *
       * <pre>
       *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
       * </pre>
       */
      java.lang.String getOpenudid();
      /**
       * <code>optional string openudid = 6;</code>
       *
       * <pre>
       *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
       * </pre>
       */
      com.google.protobuf.ByteString
          getOpenudidBytes();

      /**
       * <code>optional uint32 carrier = 7;</code>
       *
       * <pre>
       *运营商标识，生成规则是MCC+MNC，见 https://en.wikipedia.org/wiki/Mobile_country_code#China_-_CN
       * </pre>
       */
      boolean hasCarrier();
      /**
       * <code>optional uint32 carrier = 7;</code>
       *
       * <pre>
       *运营商标识，生成规则是MCC+MNC，见 https://en.wikipedia.org/wiki/Mobile_country_code#China_-_CN
       * </pre>
       */
      int getCarrier();

      /**
       * <code>optional string make = 8;</code>
       *
       * <pre>
       *[无效字段]设备品牌，如"Apple"，
       * </pre>
       */
      boolean hasMake();
      /**
       * <code>optional string make = 8;</code>
       *
       * <pre>
       *[无效字段]设备品牌，如"Apple"，
       * </pre>
       */
      java.lang.String getMake();
      /**
       * <code>optional string make = 8;</code>
       *
       * <pre>
       *[无效字段]设备品牌，如"Apple"，
       * </pre>
       */
      com.google.protobuf.ByteString
          getMakeBytes();

      /**
       * <code>optional string model = 9;</code>
       *
       * <pre>
       *[无效字段]设备型号，如"iPhone" 
       * </pre>
       */
      boolean hasModel();
      /**
       * <code>optional string model = 9;</code>
       *
       * <pre>
       *[无效字段]设备型号，如"iPhone" 
       * </pre>
       */
      java.lang.String getModel();
      /**
       * <code>optional string model = 9;</code>
       *
       * <pre>
       *[无效字段]设备型号，如"iPhone" 
       * </pre>
       */
      com.google.protobuf.ByteString
          getModelBytes();

      /**
       * <code>optional string os = 10;</code>
       *
       * <pre>
       *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
       * </pre>
       */
      boolean hasOs();
      /**
       * <code>optional string os = 10;</code>
       *
       * <pre>
       *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
       * </pre>
       */
      java.lang.String getOs();
      /**
       * <code>optional string os = 10;</code>
       *
       * <pre>
       *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
       * </pre>
       */
      com.google.protobuf.ByteString
          getOsBytes();

      /**
       * <code>optional string Osv = 11;</code>
       *
       * <pre>
       *[无效字段]设备操作系统版本，如"3.1.2"
       * </pre>
       */
      boolean hasOsv();
      /**
       * <code>optional string Osv = 11;</code>
       *
       * <pre>
       *[无效字段]设备操作系统版本，如"3.1.2"
       * </pre>
       */
      java.lang.String getOsv();
      /**
       * <code>optional string Osv = 11;</code>
       *
       * <pre>
       *[无效字段]设备操作系统版本，如"3.1.2"
       * </pre>
       */
      com.google.protobuf.ByteString
          getOsvBytes();

      /**
       * <code>optional uint32 Js = 12;</code>
       *
       * <pre>
       *[无效字段]是否支持javascript 1:支持JavaScript; 0:不支持，
       * </pre>
       */
      boolean hasJs();
      /**
       * <code>optional uint32 Js = 12;</code>
       *
       * <pre>
       *[无效字段]是否支持javascript 1:支持JavaScript; 0:不支持，
       * </pre>
       */
      int getJs();

      /**
       * <code>optional uint32 connectiontype = 13;</code>
       *
       * <pre>
       *连接类型，0：未知; 1：以太网; 2：Wifi; 3：移动数据-未知; 4：2G; 5：3G; 6：4G
       * </pre>
       */
      boolean hasConnectiontype();
      /**
       * <code>optional uint32 connectiontype = 13;</code>
       *
       * <pre>
       *连接类型，0：未知; 1：以太网; 2：Wifi; 3：移动数据-未知; 4：2G; 5：3G; 6：4G
       * </pre>
       */
      int getConnectiontype();

      /**
       * <code>optional uint32 devicetype = 14;</code>
       *
       * <pre>
       *[无效字段]设备类型 1：手机/平板  2：个人电脑  3：TV 
       * </pre>
       */
      boolean hasDevicetype();
      /**
       * <code>optional uint32 devicetype = 14;</code>
       *
       * <pre>
       *[无效字段]设备类型 1：手机/平板  2：个人电脑  3：TV 
       * </pre>
       */
      int getDevicetype();

      /**
       * <code>optional string mac = 15;</code>
       *
       * <pre>
       *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
       * </pre>
       */
      boolean hasMac();
      /**
       * <code>optional string mac = 15;</code>
       *
       * <pre>
       *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
       * </pre>
       */
      java.lang.String getMac();
      /**
       * <code>optional string mac = 15;</code>
       *
       * <pre>
       *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
       * </pre>
       */
      com.google.protobuf.ByteString
          getMacBytes();

      /**
       * <code>optional string imei = 16;</code>
       *
       * <pre>
       *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      boolean hasImei();
      /**
       * <code>optional string imei = 16;</code>
       *
       * <pre>
       *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      java.lang.String getImei();
      /**
       * <code>optional string imei = 16;</code>
       *
       * <pre>
       *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      com.google.protobuf.ByteString
          getImeiBytes();

      /**
       * <code>optional string androidid = 17;</code>
       *
       * <pre>
       *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      boolean hasAndroidid();
      /**
       * <code>optional string androidid = 17;</code>
       *
       * <pre>
       *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      java.lang.String getAndroidid();
      /**
       * <code>optional string androidid = 17;</code>
       *
       * <pre>
       *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      com.google.protobuf.ByteString
          getAndroididBytes();
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Request.Device}
     */
    public static final class Device extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.Device)
        DeviceOrBuilder {
      // Use Device.newBuilder() to construct.
      private Device(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Device(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Device defaultInstance;
      public static Device getDefaultInstance() {
        return defaultInstance;
      }

      public Device getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Device(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                ip_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                ua_ = bs;
                break;
              }
              case 26: {
                com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = geo_.toBuilder();
                }
                geo_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(geo_);
                  geo_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                idfa_ = bs;
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                idfaEnc_ = input.readUInt32();
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                openudid_ = bs;
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                carrier_ = input.readUInt32();
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                make_ = bs;
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000100;
                model_ = bs;
                break;
              }
              case 82: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000200;
                os_ = bs;
                break;
              }
              case 90: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000400;
                osv_ = bs;
                break;
              }
              case 96: {
                bitField0_ |= 0x00000800;
                js_ = input.readUInt32();
                break;
              }
              case 104: {
                bitField0_ |= 0x00001000;
                connectiontype_ = input.readUInt32();
                break;
              }
              case 112: {
                bitField0_ |= 0x00002000;
                devicetype_ = input.readUInt32();
                break;
              }
              case 122: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00004000;
                mac_ = bs;
                break;
              }
              case 130: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00008000;
                imei_ = bs;
                break;
              }
              case 138: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00010000;
                androidid_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Request.Device.class, com.madhouse.media.tencent.GPBForDSP.Request.Device.Builder.class);
      }

      public static com.google.protobuf.Parser<Device> PARSER =
          new com.google.protobuf.AbstractParser<Device>() {
        public Device parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Device(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Device> getParserForType() {
        return PARSER;
      }

      public interface GeoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.Device.Geo)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional float latitude = 1;</code>
         *
         * <pre>
         *纬度，取值从-90到90，南为负值
         * </pre>
         */
        boolean hasLatitude();
        /**
         * <code>optional float latitude = 1;</code>
         *
         * <pre>
         *纬度，取值从-90到90，南为负值
         * </pre>
         */
        float getLatitude();

        /**
         * <code>optional float longitude = 2;</code>
         *
         * <pre>
         *经度，取值从-180到180，西为负值
         * </pre>
         */
        boolean hasLongitude();
        /**
         * <code>optional float longitude = 2;</code>
         *
         * <pre>
         *经度，取值从-180到180，西为负值
         * </pre>
         */
        float getLongitude();
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.Device.Geo}
       */
      public static final class Geo extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.Device.Geo)
          GeoOrBuilder {
        // Use Geo.newBuilder() to construct.
        private Geo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Geo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Geo defaultInstance;
        public static Geo getDefaultInstance() {
          return defaultInstance;
        }

        public Geo getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Geo(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {
                  bitField0_ |= 0x00000001;
                  latitude_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  longitude_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_Geo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_Geo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.class, com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.Builder.class);
        }

        public static com.google.protobuf.Parser<Geo> PARSER =
            new com.google.protobuf.AbstractParser<Geo>() {
          public Geo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Geo(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Geo> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int LATITUDE_FIELD_NUMBER = 1;
        private float latitude_;
        /**
         * <code>optional float latitude = 1;</code>
         *
         * <pre>
         *纬度，取值从-90到90，南为负值
         * </pre>
         */
        public boolean hasLatitude() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional float latitude = 1;</code>
         *
         * <pre>
         *纬度，取值从-90到90，南为负值
         * </pre>
         */
        public float getLatitude() {
          return latitude_;
        }

        public static final int LONGITUDE_FIELD_NUMBER = 2;
        private float longitude_;
        /**
         * <code>optional float longitude = 2;</code>
         *
         * <pre>
         *经度，取值从-180到180，西为负值
         * </pre>
         */
        public boolean hasLongitude() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float longitude = 2;</code>
         *
         * <pre>
         *经度，取值从-180到180，西为负值
         * </pre>
         */
        public float getLongitude() {
          return longitude_;
        }

        private void initFields() {
          latitude_ = 0F;
          longitude_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeFloat(1, latitude_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, longitude_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, latitude_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, longitude_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.madhouse.media.tencent.Request.Device.Geo}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.Device.Geo)
            com.madhouse.media.tencent.GPBForDSP.Request.Device.GeoOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_Geo_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_Geo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.class, com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.Builder.class);
          }

          // Construct using com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            latitude_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            longitude_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_Geo_descriptor;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo getDefaultInstanceForType() {
            return com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.getDefaultInstance();
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo build() {
            com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo buildPartial() {
            com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo result = new com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.latitude_ = latitude_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.longitude_ = longitude_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo) {
              return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo other) {
            if (other == com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.getDefaultInstance()) return this;
            if (other.hasLatitude()) {
              setLatitude(other.getLatitude());
            }
            if (other.hasLongitude()) {
              setLongitude(other.getLongitude());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private float latitude_ ;
          /**
           * <code>optional float latitude = 1;</code>
           *
           * <pre>
           *纬度，取值从-90到90，南为负值
           * </pre>
           */
          public boolean hasLatitude() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional float latitude = 1;</code>
           *
           * <pre>
           *纬度，取值从-90到90，南为负值
           * </pre>
           */
          public float getLatitude() {
            return latitude_;
          }
          /**
           * <code>optional float latitude = 1;</code>
           *
           * <pre>
           *纬度，取值从-90到90，南为负值
           * </pre>
           */
          public Builder setLatitude(float value) {
            bitField0_ |= 0x00000001;
            latitude_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float latitude = 1;</code>
           *
           * <pre>
           *纬度，取值从-90到90，南为负值
           * </pre>
           */
          public Builder clearLatitude() {
            bitField0_ = (bitField0_ & ~0x00000001);
            latitude_ = 0F;
            onChanged();
            return this;
          }

          private float longitude_ ;
          /**
           * <code>optional float longitude = 2;</code>
           *
           * <pre>
           *经度，取值从-180到180，西为负值
           * </pre>
           */
          public boolean hasLongitude() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional float longitude = 2;</code>
           *
           * <pre>
           *经度，取值从-180到180，西为负值
           * </pre>
           */
          public float getLongitude() {
            return longitude_;
          }
          /**
           * <code>optional float longitude = 2;</code>
           *
           * <pre>
           *经度，取值从-180到180，西为负值
           * </pre>
           */
          public Builder setLongitude(float value) {
            bitField0_ |= 0x00000002;
            longitude_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float longitude = 2;</code>
           *
           * <pre>
           *经度，取值从-180到180，西为负值
           * </pre>
           */
          public Builder clearLongitude() {
            bitField0_ = (bitField0_ & ~0x00000002);
            longitude_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.Device.Geo)
        }

        static {
          defaultInstance = new Geo(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.Device.Geo)
      }

      private int bitField0_;
      public static final int IP_FIELD_NUMBER = 1;
      private java.lang.Object ip_;
      /**
       * <code>optional string ip = 1;</code>
       *
       * <pre>
       *用户ip
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string ip = 1;</code>
       *
       * <pre>
       *用户ip
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ip_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string ip = 1;</code>
       *
       * <pre>
       *用户ip
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int UA_FIELD_NUMBER = 2;
      private java.lang.Object ua_;
      /**
       * <code>optional string ua = 2;</code>
       *
       * <pre>
       *设备user-agent
       * </pre>
       */
      public boolean hasUa() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ua = 2;</code>
       *
       * <pre>
       *设备user-agent
       * </pre>
       */
      public java.lang.String getUa() {
        java.lang.Object ref = ua_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ua_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string ua = 2;</code>
       *
       * <pre>
       *设备user-agent
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUaBytes() {
        java.lang.Object ref = ua_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ua_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int GEO_FIELD_NUMBER = 3;
      private com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo geo_;
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
       *
       * <pre>
       *[无效字段] 地理位置信息，只提供一定精度模糊值
       * </pre>
       */
      public boolean hasGeo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
       *
       * <pre>
       *[无效字段] 地理位置信息，只提供一定精度模糊值
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo getGeo() {
        return geo_;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
       *
       * <pre>
       *[无效字段] 地理位置信息，只提供一定精度模糊值
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Device.GeoOrBuilder getGeoOrBuilder() {
        return geo_;
      }

      public static final int IDFA_FIELD_NUMBER = 4;
      private java.lang.Object idfa_;
      /**
       * <code>optional string idfa = 4;</code>
       *
       * <pre>
       *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
       * </pre>
       */
      public boolean hasIdfa() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string idfa = 4;</code>
       *
       * <pre>
       *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
       * </pre>
       */
      public java.lang.String getIdfa() {
        java.lang.Object ref = idfa_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            idfa_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string idfa = 4;</code>
       *
       * <pre>
       *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdfaBytes() {
        java.lang.Object ref = idfa_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          idfa_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IDFA_ENC_FIELD_NUMBER = 5;
      private int idfaEnc_;
      /**
       * <code>optional uint32 idfa_enc = 5;</code>
       *
       * <pre>
       *0: 明文，1 ：MD5(idfa)转大写, 2:SHA1 表示idfa是否加密,默认填0表示不加密，若无idfa则本字段为空
       * </pre>
       */
      public boolean hasIdfaEnc() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 idfa_enc = 5;</code>
       *
       * <pre>
       *0: 明文，1 ：MD5(idfa)转大写, 2:SHA1 表示idfa是否加密,默认填0表示不加密，若无idfa则本字段为空
       * </pre>
       */
      public int getIdfaEnc() {
        return idfaEnc_;
      }

      public static final int OPENUDID_FIELD_NUMBER = 6;
      private java.lang.Object openudid_;
      /**
       * <code>optional string openudid = 6;</code>
       *
       * <pre>
       *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
       * </pre>
       */
      public boolean hasOpenudid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string openudid = 6;</code>
       *
       * <pre>
       *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
       * </pre>
       */
      public java.lang.String getOpenudid() {
        java.lang.Object ref = openudid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            openudid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string openudid = 6;</code>
       *
       * <pre>
       *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOpenudidBytes() {
        java.lang.Object ref = openudid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          openudid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CARRIER_FIELD_NUMBER = 7;
      private int carrier_;
      /**
       * <code>optional uint32 carrier = 7;</code>
       *
       * <pre>
       *运营商标识，生成规则是MCC+MNC，见 https://en.wikipedia.org/wiki/Mobile_country_code#China_-_CN
       * </pre>
       */
      public boolean hasCarrier() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 carrier = 7;</code>
       *
       * <pre>
       *运营商标识，生成规则是MCC+MNC，见 https://en.wikipedia.org/wiki/Mobile_country_code#China_-_CN
       * </pre>
       */
      public int getCarrier() {
        return carrier_;
      }

      public static final int MAKE_FIELD_NUMBER = 8;
      private java.lang.Object make_;
      /**
       * <code>optional string make = 8;</code>
       *
       * <pre>
       *[无效字段]设备品牌，如"Apple"，
       * </pre>
       */
      public boolean hasMake() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string make = 8;</code>
       *
       * <pre>
       *[无效字段]设备品牌，如"Apple"，
       * </pre>
       */
      public java.lang.String getMake() {
        java.lang.Object ref = make_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            make_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string make = 8;</code>
       *
       * <pre>
       *[无效字段]设备品牌，如"Apple"，
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMakeBytes() {
        java.lang.Object ref = make_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          make_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MODEL_FIELD_NUMBER = 9;
      private java.lang.Object model_;
      /**
       * <code>optional string model = 9;</code>
       *
       * <pre>
       *[无效字段]设备型号，如"iPhone" 
       * </pre>
       */
      public boolean hasModel() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string model = 9;</code>
       *
       * <pre>
       *[无效字段]设备型号，如"iPhone" 
       * </pre>
       */
      public java.lang.String getModel() {
        java.lang.Object ref = model_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            model_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string model = 9;</code>
       *
       * <pre>
       *[无效字段]设备型号，如"iPhone" 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getModelBytes() {
        java.lang.Object ref = model_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          model_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int OS_FIELD_NUMBER = 10;
      private java.lang.Object os_;
      /**
       * <code>optional string os = 10;</code>
       *
       * <pre>
       *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
       * </pre>
       */
      public boolean hasOs() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string os = 10;</code>
       *
       * <pre>
       *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
       * </pre>
       */
      public java.lang.String getOs() {
        java.lang.Object ref = os_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            os_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string os = 10;</code>
       *
       * <pre>
       *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOsBytes() {
        java.lang.Object ref = os_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          os_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int OSV_FIELD_NUMBER = 11;
      private java.lang.Object osv_;
      /**
       * <code>optional string Osv = 11;</code>
       *
       * <pre>
       *[无效字段]设备操作系统版本，如"3.1.2"
       * </pre>
       */
      public boolean hasOsv() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string Osv = 11;</code>
       *
       * <pre>
       *[无效字段]设备操作系统版本，如"3.1.2"
       * </pre>
       */
      public java.lang.String getOsv() {
        java.lang.Object ref = osv_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            osv_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string Osv = 11;</code>
       *
       * <pre>
       *[无效字段]设备操作系统版本，如"3.1.2"
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOsvBytes() {
        java.lang.Object ref = osv_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          osv_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int JS_FIELD_NUMBER = 12;
      private int js_;
      /**
       * <code>optional uint32 Js = 12;</code>
       *
       * <pre>
       *[无效字段]是否支持javascript 1:支持JavaScript; 0:不支持，
       * </pre>
       */
      public boolean hasJs() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 Js = 12;</code>
       *
       * <pre>
       *[无效字段]是否支持javascript 1:支持JavaScript; 0:不支持，
       * </pre>
       */
      public int getJs() {
        return js_;
      }

      public static final int CONNECTIONTYPE_FIELD_NUMBER = 13;
      private int connectiontype_;
      /**
       * <code>optional uint32 connectiontype = 13;</code>
       *
       * <pre>
       *连接类型，0：未知; 1：以太网; 2：Wifi; 3：移动数据-未知; 4：2G; 5：3G; 6：4G
       * </pre>
       */
      public boolean hasConnectiontype() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 connectiontype = 13;</code>
       *
       * <pre>
       *连接类型，0：未知; 1：以太网; 2：Wifi; 3：移动数据-未知; 4：2G; 5：3G; 6：4G
       * </pre>
       */
      public int getConnectiontype() {
        return connectiontype_;
      }

      public static final int DEVICETYPE_FIELD_NUMBER = 14;
      private int devicetype_;
      /**
       * <code>optional uint32 devicetype = 14;</code>
       *
       * <pre>
       *[无效字段]设备类型 1：手机/平板  2：个人电脑  3：TV 
       * </pre>
       */
      public boolean hasDevicetype() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 devicetype = 14;</code>
       *
       * <pre>
       *[无效字段]设备类型 1：手机/平板  2：个人电脑  3：TV 
       * </pre>
       */
      public int getDevicetype() {
        return devicetype_;
      }

      public static final int MAC_FIELD_NUMBER = 15;
      private java.lang.Object mac_;
      /**
       * <code>optional string mac = 15;</code>
       *
       * <pre>
       *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
       * </pre>
       */
      public boolean hasMac() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string mac = 15;</code>
       *
       * <pre>
       *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
       * </pre>
       */
      public java.lang.String getMac() {
        java.lang.Object ref = mac_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mac_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string mac = 15;</code>
       *
       * <pre>
       *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMacBytes() {
        java.lang.Object ref = mac_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IMEI_FIELD_NUMBER = 16;
      private java.lang.Object imei_;
      /**
       * <code>optional string imei = 16;</code>
       *
       * <pre>
       *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      public boolean hasImei() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string imei = 16;</code>
       *
       * <pre>
       *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      public java.lang.String getImei() {
        java.lang.Object ref = imei_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            imei_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string imei = 16;</code>
       *
       * <pre>
       *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      public com.google.protobuf.ByteString
          getImeiBytes() {
        java.lang.Object ref = imei_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          imei_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ANDROIDID_FIELD_NUMBER = 17;
      private java.lang.Object androidid_;
      /**
       * <code>optional string androidid = 17;</code>
       *
       * <pre>
       *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      public boolean hasAndroidid() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string androidid = 17;</code>
       *
       * <pre>
       *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      public java.lang.String getAndroidid() {
        java.lang.Object ref = androidid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            androidid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string androidid = 17;</code>
       *
       * <pre>
       *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAndroididBytes() {
        java.lang.Object ref = androidid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          androidid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        ip_ = "";
        ua_ = "";
        geo_ = com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.getDefaultInstance();
        idfa_ = "";
        idfaEnc_ = 0;
        openudid_ = "";
        carrier_ = 0;
        make_ = "";
        model_ = "";
        os_ = "";
        osv_ = "";
        js_ = 0;
        connectiontype_ = 0;
        devicetype_ = 0;
        mac_ = "";
        imei_ = "";
        androidid_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getIpBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getUaBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, geo_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getIdfaBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, idfaEnc_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBytes(6, getOpenudidBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, carrier_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(8, getMakeBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBytes(9, getModelBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBytes(10, getOsBytes());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBytes(11, getOsvBytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeUInt32(12, js_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeUInt32(13, connectiontype_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeUInt32(14, devicetype_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          output.writeBytes(15, getMacBytes());
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          output.writeBytes(16, getImeiBytes());
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          output.writeBytes(17, getAndroididBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getIpBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getUaBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, geo_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getIdfaBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, idfaEnc_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getOpenudidBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, carrier_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(8, getMakeBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getModelBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(10, getOsBytes());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(11, getOsvBytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, js_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(13, connectiontype_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(14, devicetype_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(15, getMacBytes());
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(16, getImeiBytes());
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(17, getAndroididBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.Device parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.Device prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.Device}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.Device)
          com.madhouse.media.tencent.GPBForDSP.Request.DeviceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.Device.class, com.madhouse.media.tencent.GPBForDSP.Request.Device.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Request.Device.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getGeoFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          ip_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          ua_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (geoBuilder_ == null) {
            geo_ = com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.getDefaultInstance();
          } else {
            geoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          idfa_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          idfaEnc_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          openudid_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          carrier_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          make_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          model_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          os_ = "";
          bitField0_ = (bitField0_ & ~0x00000200);
          osv_ = "";
          bitField0_ = (bitField0_ & ~0x00000400);
          js_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          connectiontype_ = 0;
          bitField0_ = (bitField0_ & ~0x00001000);
          devicetype_ = 0;
          bitField0_ = (bitField0_ & ~0x00002000);
          mac_ = "";
          bitField0_ = (bitField0_ & ~0x00004000);
          imei_ = "";
          bitField0_ = (bitField0_ & ~0x00008000);
          androidid_ = "";
          bitField0_ = (bitField0_ & ~0x00010000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_Device_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.Device getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Request.Device.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.Device build() {
          com.madhouse.media.tencent.GPBForDSP.Request.Device result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.Device buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Request.Device result = new com.madhouse.media.tencent.GPBForDSP.Request.Device(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ip_ = ip_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.ua_ = ua_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (geoBuilder_ == null) {
            result.geo_ = geo_;
          } else {
            result.geo_ = geoBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.idfa_ = idfa_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.idfaEnc_ = idfaEnc_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.openudid_ = openudid_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.carrier_ = carrier_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.make_ = make_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.model_ = model_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.os_ = os_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.osv_ = osv_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.js_ = js_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.connectiontype_ = connectiontype_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.devicetype_ = devicetype_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00004000;
          }
          result.mac_ = mac_;
          if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
            to_bitField0_ |= 0x00008000;
          }
          result.imei_ = imei_;
          if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
            to_bitField0_ |= 0x00010000;
          }
          result.androidid_ = androidid_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.Device) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.Device)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.Device other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Request.Device.getDefaultInstance()) return this;
          if (other.hasIp()) {
            bitField0_ |= 0x00000001;
            ip_ = other.ip_;
            onChanged();
          }
          if (other.hasUa()) {
            bitField0_ |= 0x00000002;
            ua_ = other.ua_;
            onChanged();
          }
          if (other.hasGeo()) {
            mergeGeo(other.getGeo());
          }
          if (other.hasIdfa()) {
            bitField0_ |= 0x00000008;
            idfa_ = other.idfa_;
            onChanged();
          }
          if (other.hasIdfaEnc()) {
            setIdfaEnc(other.getIdfaEnc());
          }
          if (other.hasOpenudid()) {
            bitField0_ |= 0x00000020;
            openudid_ = other.openudid_;
            onChanged();
          }
          if (other.hasCarrier()) {
            setCarrier(other.getCarrier());
          }
          if (other.hasMake()) {
            bitField0_ |= 0x00000080;
            make_ = other.make_;
            onChanged();
          }
          if (other.hasModel()) {
            bitField0_ |= 0x00000100;
            model_ = other.model_;
            onChanged();
          }
          if (other.hasOs()) {
            bitField0_ |= 0x00000200;
            os_ = other.os_;
            onChanged();
          }
          if (other.hasOsv()) {
            bitField0_ |= 0x00000400;
            osv_ = other.osv_;
            onChanged();
          }
          if (other.hasJs()) {
            setJs(other.getJs());
          }
          if (other.hasConnectiontype()) {
            setConnectiontype(other.getConnectiontype());
          }
          if (other.hasDevicetype()) {
            setDevicetype(other.getDevicetype());
          }
          if (other.hasMac()) {
            bitField0_ |= 0x00004000;
            mac_ = other.mac_;
            onChanged();
          }
          if (other.hasImei()) {
            bitField0_ |= 0x00008000;
            imei_ = other.imei_;
            onChanged();
          }
          if (other.hasAndroidid()) {
            bitField0_ |= 0x00010000;
            androidid_ = other.androidid_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Request.Device parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.Device) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object ip_ = "";
        /**
         * <code>optional string ip = 1;</code>
         *
         * <pre>
         *用户ip
         * </pre>
         */
        public boolean hasIp() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string ip = 1;</code>
         *
         * <pre>
         *用户ip
         * </pre>
         */
        public java.lang.String getIp() {
          java.lang.Object ref = ip_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              ip_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ip = 1;</code>
         *
         * <pre>
         *用户ip
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIpBytes() {
          java.lang.Object ref = ip_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ip_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ip = 1;</code>
         *
         * <pre>
         *用户ip
         * </pre>
         */
        public Builder setIp(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          ip_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ip = 1;</code>
         *
         * <pre>
         *用户ip
         * </pre>
         */
        public Builder clearIp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ip_ = getDefaultInstance().getIp();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ip = 1;</code>
         *
         * <pre>
         *用户ip
         * </pre>
         */
        public Builder setIpBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          ip_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object ua_ = "";
        /**
         * <code>optional string ua = 2;</code>
         *
         * <pre>
         *设备user-agent
         * </pre>
         */
        public boolean hasUa() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string ua = 2;</code>
         *
         * <pre>
         *设备user-agent
         * </pre>
         */
        public java.lang.String getUa() {
          java.lang.Object ref = ua_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              ua_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ua = 2;</code>
         *
         * <pre>
         *设备user-agent
         * </pre>
         */
        public com.google.protobuf.ByteString
            getUaBytes() {
          java.lang.Object ref = ua_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ua_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ua = 2;</code>
         *
         * <pre>
         *设备user-agent
         * </pre>
         */
        public Builder setUa(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          ua_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ua = 2;</code>
         *
         * <pre>
         *设备user-agent
         * </pre>
         */
        public Builder clearUa() {
          bitField0_ = (bitField0_ & ~0x00000002);
          ua_ = getDefaultInstance().getUa();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ua = 2;</code>
         *
         * <pre>
         *设备user-agent
         * </pre>
         */
        public Builder setUaBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          ua_ = value;
          onChanged();
          return this;
        }

        private com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo geo_ = com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo, com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Device.GeoOrBuilder> geoBuilder_;
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
         *
         * <pre>
         *[无效字段] 地理位置信息，只提供一定精度模糊值
         * </pre>
         */
        public boolean hasGeo() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
         *
         * <pre>
         *[无效字段] 地理位置信息，只提供一定精度模糊值
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo getGeo() {
          if (geoBuilder_ == null) {
            return geo_;
          } else {
            return geoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
         *
         * <pre>
         *[无效字段] 地理位置信息，只提供一定精度模糊值
         * </pre>
         */
        public Builder setGeo(com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo value) {
          if (geoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            geo_ = value;
            onChanged();
          } else {
            geoBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
         *
         * <pre>
         *[无效字段] 地理位置信息，只提供一定精度模糊值
         * </pre>
         */
        public Builder setGeo(
            com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.Builder builderForValue) {
          if (geoBuilder_ == null) {
            geo_ = builderForValue.build();
            onChanged();
          } else {
            geoBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
         *
         * <pre>
         *[无效字段] 地理位置信息，只提供一定精度模糊值
         * </pre>
         */
        public Builder mergeGeo(com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo value) {
          if (geoBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                geo_ != com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.getDefaultInstance()) {
              geo_ =
                com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.newBuilder(geo_).mergeFrom(value).buildPartial();
            } else {
              geo_ = value;
            }
            onChanged();
          } else {
            geoBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
         *
         * <pre>
         *[无效字段] 地理位置信息，只提供一定精度模糊值
         * </pre>
         */
        public Builder clearGeo() {
          if (geoBuilder_ == null) {
            geo_ = com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.getDefaultInstance();
            onChanged();
          } else {
            geoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
         *
         * <pre>
         *[无效字段] 地理位置信息，只提供一定精度模糊值
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.Builder getGeoBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getGeoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
         *
         * <pre>
         *[无效字段] 地理位置信息，只提供一定精度模糊值
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Request.Device.GeoOrBuilder getGeoOrBuilder() {
          if (geoBuilder_ != null) {
            return geoBuilder_.getMessageOrBuilder();
          } else {
            return geo_;
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Request.Device.Geo geo = 3;</code>
         *
         * <pre>
         *[无效字段] 地理位置信息，只提供一定精度模糊值
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo, com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Device.GeoOrBuilder> 
            getGeoFieldBuilder() {
          if (geoBuilder_ == null) {
            geoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo, com.madhouse.media.tencent.GPBForDSP.Request.Device.Geo.Builder, com.madhouse.media.tencent.GPBForDSP.Request.Device.GeoOrBuilder>(
                    getGeo(),
                    getParentForChildren(),
                    isClean());
            geo_ = null;
          }
          return geoBuilder_;
        }

        private java.lang.Object idfa_ = "";
        /**
         * <code>optional string idfa = 4;</code>
         *
         * <pre>
         *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
         * </pre>
         */
        public boolean hasIdfa() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string idfa = 4;</code>
         *
         * <pre>
         *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
         * </pre>
         */
        public java.lang.String getIdfa() {
          java.lang.Object ref = idfa_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              idfa_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string idfa = 4;</code>
         *
         * <pre>
         *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIdfaBytes() {
          java.lang.Object ref = idfa_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            idfa_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string idfa = 4;</code>
         *
         * <pre>
         *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
         * </pre>
         */
        public Builder setIdfa(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          idfa_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string idfa = 4;</code>
         *
         * <pre>
         *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
         * </pre>
         */
        public Builder clearIdfa() {
          bitField0_ = (bitField0_ & ~0x00000008);
          idfa_ = getDefaultInstance().getIdfa();
          onChanged();
          return this;
        }
        /**
         * <code>optional string idfa = 4;</code>
         *
         * <pre>
         *IDFA,默认不加密,用户设备如果为ios系统且未关闭idfa，本字段会填写原始idfa，否则为空
         * </pre>
         */
        public Builder setIdfaBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          idfa_ = value;
          onChanged();
          return this;
        }

        private int idfaEnc_ ;
        /**
         * <code>optional uint32 idfa_enc = 5;</code>
         *
         * <pre>
         *0: 明文，1 ：MD5(idfa)转大写, 2:SHA1 表示idfa是否加密,默认填0表示不加密，若无idfa则本字段为空
         * </pre>
         */
        public boolean hasIdfaEnc() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 idfa_enc = 5;</code>
         *
         * <pre>
         *0: 明文，1 ：MD5(idfa)转大写, 2:SHA1 表示idfa是否加密,默认填0表示不加密，若无idfa则本字段为空
         * </pre>
         */
        public int getIdfaEnc() {
          return idfaEnc_;
        }
        /**
         * <code>optional uint32 idfa_enc = 5;</code>
         *
         * <pre>
         *0: 明文，1 ：MD5(idfa)转大写, 2:SHA1 表示idfa是否加密,默认填0表示不加密，若无idfa则本字段为空
         * </pre>
         */
        public Builder setIdfaEnc(int value) {
          bitField0_ |= 0x00000010;
          idfaEnc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 idfa_enc = 5;</code>
         *
         * <pre>
         *0: 明文，1 ：MD5(idfa)转大写, 2:SHA1 表示idfa是否加密,默认填0表示不加密，若无idfa则本字段为空
         * </pre>
         */
        public Builder clearIdfaEnc() {
          bitField0_ = (bitField0_ & ~0x00000010);
          idfaEnc_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object openudid_ = "";
        /**
         * <code>optional string openudid = 6;</code>
         *
         * <pre>
         *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
         * </pre>
         */
        public boolean hasOpenudid() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string openudid = 6;</code>
         *
         * <pre>
         *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
         * </pre>
         */
        public java.lang.String getOpenudid() {
          java.lang.Object ref = openudid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              openudid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string openudid = 6;</code>
         *
         * <pre>
         *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
         * </pre>
         */
        public com.google.protobuf.ByteString
            getOpenudidBytes() {
          java.lang.Object ref = openudid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            openudid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string openudid = 6;</code>
         *
         * <pre>
         *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
         * </pre>
         */
        public Builder setOpenudid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          openudid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string openudid = 6;</code>
         *
         * <pre>
         *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
         * </pre>
         */
        public Builder clearOpenudid() {
          bitField0_ = (bitField0_ & ~0x00000020);
          openudid_ = getDefaultInstance().getOpenudid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string openudid = 6;</code>
         *
         * <pre>
         *Openudid, 默认不加密，用户设备如果为ios或android，本字段会填写原始openudid，否则为空
         * </pre>
         */
        public Builder setOpenudidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          openudid_ = value;
          onChanged();
          return this;
        }

        private int carrier_ ;
        /**
         * <code>optional uint32 carrier = 7;</code>
         *
         * <pre>
         *运营商标识，生成规则是MCC+MNC，见 https://en.wikipedia.org/wiki/Mobile_country_code#China_-_CN
         * </pre>
         */
        public boolean hasCarrier() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 carrier = 7;</code>
         *
         * <pre>
         *运营商标识，生成规则是MCC+MNC，见 https://en.wikipedia.org/wiki/Mobile_country_code#China_-_CN
         * </pre>
         */
        public int getCarrier() {
          return carrier_;
        }
        /**
         * <code>optional uint32 carrier = 7;</code>
         *
         * <pre>
         *运营商标识，生成规则是MCC+MNC，见 https://en.wikipedia.org/wiki/Mobile_country_code#China_-_CN
         * </pre>
         */
        public Builder setCarrier(int value) {
          bitField0_ |= 0x00000040;
          carrier_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 carrier = 7;</code>
         *
         * <pre>
         *运营商标识，生成规则是MCC+MNC，见 https://en.wikipedia.org/wiki/Mobile_country_code#China_-_CN
         * </pre>
         */
        public Builder clearCarrier() {
          bitField0_ = (bitField0_ & ~0x00000040);
          carrier_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object make_ = "";
        /**
         * <code>optional string make = 8;</code>
         *
         * <pre>
         *[无效字段]设备品牌，如"Apple"，
         * </pre>
         */
        public boolean hasMake() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string make = 8;</code>
         *
         * <pre>
         *[无效字段]设备品牌，如"Apple"，
         * </pre>
         */
        public java.lang.String getMake() {
          java.lang.Object ref = make_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              make_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string make = 8;</code>
         *
         * <pre>
         *[无效字段]设备品牌，如"Apple"，
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMakeBytes() {
          java.lang.Object ref = make_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            make_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string make = 8;</code>
         *
         * <pre>
         *[无效字段]设备品牌，如"Apple"，
         * </pre>
         */
        public Builder setMake(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          make_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string make = 8;</code>
         *
         * <pre>
         *[无效字段]设备品牌，如"Apple"，
         * </pre>
         */
        public Builder clearMake() {
          bitField0_ = (bitField0_ & ~0x00000080);
          make_ = getDefaultInstance().getMake();
          onChanged();
          return this;
        }
        /**
         * <code>optional string make = 8;</code>
         *
         * <pre>
         *[无效字段]设备品牌，如"Apple"，
         * </pre>
         */
        public Builder setMakeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          make_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object model_ = "";
        /**
         * <code>optional string model = 9;</code>
         *
         * <pre>
         *[无效字段]设备型号，如"iPhone" 
         * </pre>
         */
        public boolean hasModel() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string model = 9;</code>
         *
         * <pre>
         *[无效字段]设备型号，如"iPhone" 
         * </pre>
         */
        public java.lang.String getModel() {
          java.lang.Object ref = model_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              model_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string model = 9;</code>
         *
         * <pre>
         *[无效字段]设备型号，如"iPhone" 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getModelBytes() {
          java.lang.Object ref = model_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            model_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string model = 9;</code>
         *
         * <pre>
         *[无效字段]设备型号，如"iPhone" 
         * </pre>
         */
        public Builder setModel(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          model_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string model = 9;</code>
         *
         * <pre>
         *[无效字段]设备型号，如"iPhone" 
         * </pre>
         */
        public Builder clearModel() {
          bitField0_ = (bitField0_ & ~0x00000100);
          model_ = getDefaultInstance().getModel();
          onChanged();
          return this;
        }
        /**
         * <code>optional string model = 9;</code>
         *
         * <pre>
         *[无效字段]设备型号，如"iPhone" 
         * </pre>
         */
        public Builder setModelBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          model_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object os_ = "";
        /**
         * <code>optional string os = 10;</code>
         *
         * <pre>
         *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
         * </pre>
         */
        public boolean hasOs() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional string os = 10;</code>
         *
         * <pre>
         *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
         * </pre>
         */
        public java.lang.String getOs() {
          java.lang.Object ref = os_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              os_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string os = 10;</code>
         *
         * <pre>
         *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
         * </pre>
         */
        public com.google.protobuf.ByteString
            getOsBytes() {
          java.lang.Object ref = os_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            os_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string os = 10;</code>
         *
         * <pre>
         *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
         * </pre>
         */
        public Builder setOs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          os_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string os = 10;</code>
         *
         * <pre>
         *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
         * </pre>
         */
        public Builder clearOs() {
          bitField0_ = (bitField0_ & ~0x00000200);
          os_ = getDefaultInstance().getOs();
          onChanged();
          return this;
        }
        /**
         * <code>optional string os = 10;</code>
         *
         * <pre>
         *设备操作系统，如"iPhone.OS.9.3.2" "Android 5.0.2"
         * </pre>
         */
        public Builder setOsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          os_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object osv_ = "";
        /**
         * <code>optional string Osv = 11;</code>
         *
         * <pre>
         *[无效字段]设备操作系统版本，如"3.1.2"
         * </pre>
         */
        public boolean hasOsv() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional string Osv = 11;</code>
         *
         * <pre>
         *[无效字段]设备操作系统版本，如"3.1.2"
         * </pre>
         */
        public java.lang.String getOsv() {
          java.lang.Object ref = osv_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              osv_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string Osv = 11;</code>
         *
         * <pre>
         *[无效字段]设备操作系统版本，如"3.1.2"
         * </pre>
         */
        public com.google.protobuf.ByteString
            getOsvBytes() {
          java.lang.Object ref = osv_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            osv_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string Osv = 11;</code>
         *
         * <pre>
         *[无效字段]设备操作系统版本，如"3.1.2"
         * </pre>
         */
        public Builder setOsv(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
          osv_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string Osv = 11;</code>
         *
         * <pre>
         *[无效字段]设备操作系统版本，如"3.1.2"
         * </pre>
         */
        public Builder clearOsv() {
          bitField0_ = (bitField0_ & ~0x00000400);
          osv_ = getDefaultInstance().getOsv();
          onChanged();
          return this;
        }
        /**
         * <code>optional string Osv = 11;</code>
         *
         * <pre>
         *[无效字段]设备操作系统版本，如"3.1.2"
         * </pre>
         */
        public Builder setOsvBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
          osv_ = value;
          onChanged();
          return this;
        }

        private int js_ ;
        /**
         * <code>optional uint32 Js = 12;</code>
         *
         * <pre>
         *[无效字段]是否支持javascript 1:支持JavaScript; 0:不支持，
         * </pre>
         */
        public boolean hasJs() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional uint32 Js = 12;</code>
         *
         * <pre>
         *[无效字段]是否支持javascript 1:支持JavaScript; 0:不支持，
         * </pre>
         */
        public int getJs() {
          return js_;
        }
        /**
         * <code>optional uint32 Js = 12;</code>
         *
         * <pre>
         *[无效字段]是否支持javascript 1:支持JavaScript; 0:不支持，
         * </pre>
         */
        public Builder setJs(int value) {
          bitField0_ |= 0x00000800;
          js_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 Js = 12;</code>
         *
         * <pre>
         *[无效字段]是否支持javascript 1:支持JavaScript; 0:不支持，
         * </pre>
         */
        public Builder clearJs() {
          bitField0_ = (bitField0_ & ~0x00000800);
          js_ = 0;
          onChanged();
          return this;
        }

        private int connectiontype_ ;
        /**
         * <code>optional uint32 connectiontype = 13;</code>
         *
         * <pre>
         *连接类型，0：未知; 1：以太网; 2：Wifi; 3：移动数据-未知; 4：2G; 5：3G; 6：4G
         * </pre>
         */
        public boolean hasConnectiontype() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional uint32 connectiontype = 13;</code>
         *
         * <pre>
         *连接类型，0：未知; 1：以太网; 2：Wifi; 3：移动数据-未知; 4：2G; 5：3G; 6：4G
         * </pre>
         */
        public int getConnectiontype() {
          return connectiontype_;
        }
        /**
         * <code>optional uint32 connectiontype = 13;</code>
         *
         * <pre>
         *连接类型，0：未知; 1：以太网; 2：Wifi; 3：移动数据-未知; 4：2G; 5：3G; 6：4G
         * </pre>
         */
        public Builder setConnectiontype(int value) {
          bitField0_ |= 0x00001000;
          connectiontype_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 connectiontype = 13;</code>
         *
         * <pre>
         *连接类型，0：未知; 1：以太网; 2：Wifi; 3：移动数据-未知; 4：2G; 5：3G; 6：4G
         * </pre>
         */
        public Builder clearConnectiontype() {
          bitField0_ = (bitField0_ & ~0x00001000);
          connectiontype_ = 0;
          onChanged();
          return this;
        }

        private int devicetype_ ;
        /**
         * <code>optional uint32 devicetype = 14;</code>
         *
         * <pre>
         *[无效字段]设备类型 1：手机/平板  2：个人电脑  3：TV 
         * </pre>
         */
        public boolean hasDevicetype() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional uint32 devicetype = 14;</code>
         *
         * <pre>
         *[无效字段]设备类型 1：手机/平板  2：个人电脑  3：TV 
         * </pre>
         */
        public int getDevicetype() {
          return devicetype_;
        }
        /**
         * <code>optional uint32 devicetype = 14;</code>
         *
         * <pre>
         *[无效字段]设备类型 1：手机/平板  2：个人电脑  3：TV 
         * </pre>
         */
        public Builder setDevicetype(int value) {
          bitField0_ |= 0x00002000;
          devicetype_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 devicetype = 14;</code>
         *
         * <pre>
         *[无效字段]设备类型 1：手机/平板  2：个人电脑  3：TV 
         * </pre>
         */
        public Builder clearDevicetype() {
          bitField0_ = (bitField0_ & ~0x00002000);
          devicetype_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object mac_ = "";
        /**
         * <code>optional string mac = 15;</code>
         *
         * <pre>
         *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
         * </pre>
         */
        public boolean hasMac() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional string mac = 15;</code>
         *
         * <pre>
         *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
         * </pre>
         */
        public java.lang.String getMac() {
          java.lang.Object ref = mac_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mac_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string mac = 15;</code>
         *
         * <pre>
         *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMacBytes() {
          java.lang.Object ref = mac_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mac_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string mac = 15;</code>
         *
         * <pre>
         *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
         * </pre>
         */
        public Builder setMac(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
          mac_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string mac = 15;</code>
         *
         * <pre>
         *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
         * </pre>
         */
        public Builder clearMac() {
          bitField0_ = (bitField0_ & ~0x00004000);
          mac_ = getDefaultInstance().getMac();
          onChanged();
          return this;
        }
        /**
         * <code>optional string mac = 15;</code>
         *
         * <pre>
         *加密后的mac, MD5(MAC)转大写    加密前先进行格式转换（去除分隔符‘:’-&gt;转大写），仅android设备会填写本字段，否则为空
         * </pre>
         */
        public Builder setMacBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
          mac_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object imei_ = "";
        /**
         * <code>optional string imei = 16;</code>
         *
         * <pre>
         *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public boolean hasImei() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional string imei = 16;</code>
         *
         * <pre>
         *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public java.lang.String getImei() {
          java.lang.Object ref = imei_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              imei_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string imei = 16;</code>
         *
         * <pre>
         *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public com.google.protobuf.ByteString
            getImeiBytes() {
          java.lang.Object ref = imei_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            imei_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string imei = 16;</code>
         *
         * <pre>
         *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public Builder setImei(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
          imei_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string imei = 16;</code>
         *
         * <pre>
         *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public Builder clearImei() {
          bitField0_ = (bitField0_ & ~0x00008000);
          imei_ = getDefaultInstance().getImei();
          onChanged();
          return this;
        }
        /**
         * <code>optional string imei = 16;</code>
         *
         * <pre>
         *加密后的imei, MD5(imei)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public Builder setImeiBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
          imei_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object androidid_ = "";
        /**
         * <code>optional string androidid = 17;</code>
         *
         * <pre>
         *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public boolean hasAndroidid() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional string androidid = 17;</code>
         *
         * <pre>
         *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public java.lang.String getAndroidid() {
          java.lang.Object ref = androidid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              androidid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string androidid = 17;</code>
         *
         * <pre>
         *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAndroididBytes() {
          java.lang.Object ref = androidid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            androidid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string androidid = 17;</code>
         *
         * <pre>
         *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public Builder setAndroidid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
          androidid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string androidid = 17;</code>
         *
         * <pre>
         *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public Builder clearAndroidid() {
          bitField0_ = (bitField0_ & ~0x00010000);
          androidid_ = getDefaultInstance().getAndroidid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string androidid = 17;</code>
         *
         * <pre>
         *加密后的androidid, MD5(androidid)转大写  对原始值加密，仅android设备会填写本字段，否则为空
         * </pre>
         */
        public Builder setAndroididBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
          androidid_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.Device)
      }

      static {
        defaultInstance = new Device(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.Device)
    }

    public interface UserOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.User)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
       * </pre>
       */
      java.lang.String getId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
       * </pre>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <code>optional string buyerid = 2;</code>
       *
       * <pre>
       *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
       * </pre>
       */
      boolean hasBuyerid();
      /**
       * <code>optional string buyerid = 2;</code>
       *
       * <pre>
       *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
       * </pre>
       */
      java.lang.String getBuyerid();
      /**
       * <code>optional string buyerid = 2;</code>
       *
       * <pre>
       *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
       * </pre>
       */
      com.google.protobuf.ByteString
          getBuyeridBytes();

      /**
       * <code>optional string gender = 3;</code>
       *
       * <pre>
       *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
       * </pre>
       */
      boolean hasGender();
      /**
       * <code>optional string gender = 3;</code>
       *
       * <pre>
       *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
       * </pre>
       */
      java.lang.String getGender();
      /**
       * <code>optional string gender = 3;</code>
       *
       * <pre>
       *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
       * </pre>
       */
      com.google.protobuf.ByteString
          getGenderBytes();

      /**
       * <code>optional uint32 age = 4;</code>
       *
       * <pre>
       *[无效字段] 年龄（0-20（0）、21-30（1）、31-40（2）、41-50(3)、51-60(4)、60+(5)这几个分段）不填代表未知 [无效字段]
       * </pre>
       */
      boolean hasAge();
      /**
       * <code>optional uint32 age = 4;</code>
       *
       * <pre>
       *[无效字段] 年龄（0-20（0）、21-30（1）、31-40（2）、41-50(3)、51-60(4)、60+(5)这几个分段）不填代表未知 [无效字段]
       * </pre>
       */
      int getAge();

      /**
       * <code>repeated string tag_id = 5;</code>
       *
       * <pre>
       * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getTagIdList();
      /**
       * <code>repeated string tag_id = 5;</code>
       *
       * <pre>
       * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
       * </pre>
       */
      int getTagIdCount();
      /**
       * <code>repeated string tag_id = 5;</code>
       *
       * <pre>
       * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
       * </pre>
       */
      java.lang.String getTagId(int index);
      /**
       * <code>repeated string tag_id = 5;</code>
       *
       * <pre>
       * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
       * </pre>
       */
      com.google.protobuf.ByteString
          getTagIdBytes(int index);
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Request.User}
     */
    public static final class User extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.User)
        UserOrBuilder {
      // Use User.newBuilder() to construct.
      private User(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private User(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final User defaultInstance;
      public static User getDefaultInstance() {
        return defaultInstance;
      }

      public User getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private User(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                id_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                buyerid_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                gender_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                age_ = input.readUInt32();
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  tagId_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000010;
                }
                tagId_.add(bs);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            tagId_ = tagId_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_User_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Request.User.class, com.madhouse.media.tencent.GPBForDSP.Request.User.Builder.class);
      }

      public static com.google.protobuf.Parser<User> PARSER =
          new com.google.protobuf.AbstractParser<User>() {
        public User parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new User(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<User> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private java.lang.Object id_;
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BUYERID_FIELD_NUMBER = 2;
      private java.lang.Object buyerid_;
      /**
       * <code>optional string buyerid = 2;</code>
       *
       * <pre>
       *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
       * </pre>
       */
      public boolean hasBuyerid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string buyerid = 2;</code>
       *
       * <pre>
       *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
       * </pre>
       */
      public java.lang.String getBuyerid() {
        java.lang.Object ref = buyerid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            buyerid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string buyerid = 2;</code>
       *
       * <pre>
       *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBuyeridBytes() {
        java.lang.Object ref = buyerid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          buyerid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int GENDER_FIELD_NUMBER = 3;
      private java.lang.Object gender_;
      /**
       * <code>optional string gender = 3;</code>
       *
       * <pre>
       *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
       * </pre>
       */
      public boolean hasGender() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string gender = 3;</code>
       *
       * <pre>
       *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
       * </pre>
       */
      public java.lang.String getGender() {
        java.lang.Object ref = gender_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gender_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string gender = 3;</code>
       *
       * <pre>
       *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGenderBytes() {
        java.lang.Object ref = gender_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gender_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int AGE_FIELD_NUMBER = 4;
      private int age_;
      /**
       * <code>optional uint32 age = 4;</code>
       *
       * <pre>
       *[无效字段] 年龄（0-20（0）、21-30（1）、31-40（2）、41-50(3)、51-60(4)、60+(5)这几个分段）不填代表未知 [无效字段]
       * </pre>
       */
      public boolean hasAge() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 age = 4;</code>
       *
       * <pre>
       *[无效字段] 年龄（0-20（0）、21-30（1）、31-40（2）、41-50(3)、51-60(4)、60+(5)这几个分段）不填代表未知 [无效字段]
       * </pre>
       */
      public int getAge() {
        return age_;
      }

      public static final int TAG_ID_FIELD_NUMBER = 5;
      private com.google.protobuf.LazyStringList tagId_;
      /**
       * <code>repeated string tag_id = 5;</code>
       *
       * <pre>
       * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getTagIdList() {
        return tagId_;
      }
      /**
       * <code>repeated string tag_id = 5;</code>
       *
       * <pre>
       * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
       * </pre>
       */
      public int getTagIdCount() {
        return tagId_.size();
      }
      /**
       * <code>repeated string tag_id = 5;</code>
       *
       * <pre>
       * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
       * </pre>
       */
      public java.lang.String getTagId(int index) {
        return tagId_.get(index);
      }
      /**
       * <code>repeated string tag_id = 5;</code>
       *
       * <pre>
       * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTagIdBytes(int index) {
        return tagId_.getByteString(index);
      }

      private void initFields() {
        id_ = "";
        buyerid_ = "";
        gender_ = "";
        age_ = 0;
        tagId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getBuyeridBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getGenderBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, age_);
        }
        for (int i = 0; i < tagId_.size(); i++) {
          output.writeBytes(5, tagId_.getByteString(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getBuyeridBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getGenderBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, age_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < tagId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(tagId_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getTagIdList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.User parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.User prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.User}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.User)
          com.madhouse.media.tencent.GPBForDSP.Request.UserOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_User_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_User_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.User.class, com.madhouse.media.tencent.GPBForDSP.Request.User.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Request.User.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          buyerid_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          gender_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          age_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          tagId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_User_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.User getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Request.User.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.User build() {
          com.madhouse.media.tencent.GPBForDSP.Request.User result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.User buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Request.User result = new com.madhouse.media.tencent.GPBForDSP.Request.User(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.buyerid_ = buyerid_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.gender_ = gender_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.age_ = age_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            tagId_ = tagId_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.tagId_ = tagId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.User) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.User)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.User other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Request.User.getDefaultInstance()) return this;
          if (other.hasId()) {
            bitField0_ |= 0x00000001;
            id_ = other.id_;
            onChanged();
          }
          if (other.hasBuyerid()) {
            bitField0_ |= 0x00000002;
            buyerid_ = other.buyerid_;
            onChanged();
          }
          if (other.hasGender()) {
            bitField0_ |= 0x00000004;
            gender_ = other.gender_;
            onChanged();
          }
          if (other.hasAge()) {
            setAge(other.getAge());
          }
          if (!other.tagId_.isEmpty()) {
            if (tagId_.isEmpty()) {
              tagId_ = other.tagId_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTagIdIsMutable();
              tagId_.addAll(other.tagId_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Request.User parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.User) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object id_ = "";
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
         * </pre>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
         * </pre>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *tuid   dsp与腾讯进行cookieMapping后产生的腾讯侧用户标识tuid（不推荐使用）
         * </pre>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object buyerid_ = "";
        /**
         * <code>optional string buyerid = 2;</code>
         *
         * <pre>
         *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
         * </pre>
         */
        public boolean hasBuyerid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string buyerid = 2;</code>
         *
         * <pre>
         *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
         * </pre>
         */
        public java.lang.String getBuyerid() {
          java.lang.Object ref = buyerid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              buyerid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string buyerid = 2;</code>
         *
         * <pre>
         *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getBuyeridBytes() {
          java.lang.Object ref = buyerid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            buyerid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string buyerid = 2;</code>
         *
         * <pre>
         *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
         * </pre>
         */
        public Builder setBuyerid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          buyerid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string buyerid = 2;</code>
         *
         * <pre>
         *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
         * </pre>
         */
        public Builder clearBuyerid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          buyerid_ = getDefaultInstance().getBuyerid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string buyerid = 2;</code>
         *
         * <pre>
         *dsp user id  dsp与腾讯进行cookieMapping后保存的dsp侧的用户标识（推荐dsp使用本字段识别用户）
         * </pre>
         */
        public Builder setBuyeridBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          buyerid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object gender_ = "";
        /**
         * <code>optional string gender = 3;</code>
         *
         * <pre>
         *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
         * </pre>
         */
        public boolean hasGender() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string gender = 3;</code>
         *
         * <pre>
         *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
         * </pre>
         */
        public java.lang.String getGender() {
          java.lang.Object ref = gender_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              gender_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string gender = 3;</code>
         *
         * <pre>
         *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
         * </pre>
         */
        public com.google.protobuf.ByteString
            getGenderBytes() {
          java.lang.Object ref = gender_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            gender_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string gender = 3;</code>
         *
         * <pre>
         *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
         * </pre>
         */
        public Builder setGender(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          gender_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string gender = 3;</code>
         *
         * <pre>
         *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
         * </pre>
         */
        public Builder clearGender() {
          bitField0_ = (bitField0_ & ~0x00000004);
          gender_ = getDefaultInstance().getGender();
          onChanged();
          return this;
        }
        /**
         * <code>optional string gender = 3;</code>
         *
         * <pre>
         *[无效字段] 性别 M 代表男 F 代表女 不填代表未知
         * </pre>
         */
        public Builder setGenderBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          gender_ = value;
          onChanged();
          return this;
        }

        private int age_ ;
        /**
         * <code>optional uint32 age = 4;</code>
         *
         * <pre>
         *[无效字段] 年龄（0-20（0）、21-30（1）、31-40（2）、41-50(3)、51-60(4)、60+(5)这几个分段）不填代表未知 [无效字段]
         * </pre>
         */
        public boolean hasAge() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 age = 4;</code>
         *
         * <pre>
         *[无效字段] 年龄（0-20（0）、21-30（1）、31-40（2）、41-50(3)、51-60(4)、60+(5)这几个分段）不填代表未知 [无效字段]
         * </pre>
         */
        public int getAge() {
          return age_;
        }
        /**
         * <code>optional uint32 age = 4;</code>
         *
         * <pre>
         *[无效字段] 年龄（0-20（0）、21-30（1）、31-40（2）、41-50(3)、51-60(4)、60+(5)这几个分段）不填代表未知 [无效字段]
         * </pre>
         */
        public Builder setAge(int value) {
          bitField0_ |= 0x00000008;
          age_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 age = 4;</code>
         *
         * <pre>
         *[无效字段] 年龄（0-20（0）、21-30（1）、31-40（2）、41-50(3)、51-60(4)、60+(5)这几个分段）不填代表未知 [无效字段]
         * </pre>
         */
        public Builder clearAge() {
          bitField0_ = (bitField0_ & ~0x00000008);
          age_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList tagId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureTagIdIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            tagId_ = new com.google.protobuf.LazyStringArrayList(tagId_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated string tag_id = 5;</code>
         *
         * <pre>
         * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getTagIdList() {
          return tagId_.getUnmodifiableView();
        }
        /**
         * <code>repeated string tag_id = 5;</code>
         *
         * <pre>
         * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
         * </pre>
         */
        public int getTagIdCount() {
          return tagId_.size();
        }
        /**
         * <code>repeated string tag_id = 5;</code>
         *
         * <pre>
         * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
         * </pre>
         */
        public java.lang.String getTagId(int index) {
          return tagId_.get(index);
        }
        /**
         * <code>repeated string tag_id = 5;</code>
         *
         * <pre>
         * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTagIdBytes(int index) {
          return tagId_.getByteString(index);
        }
        /**
         * <code>repeated string tag_id = 5;</code>
         *
         * <pre>
         * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
         * </pre>
         */
        public Builder setTagId(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTagIdIsMutable();
          tagId_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tag_id = 5;</code>
         *
         * <pre>
         * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
         * </pre>
         */
        public Builder addTagId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTagIdIsMutable();
          tagId_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tag_id = 5;</code>
         *
         * <pre>
         * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
         * </pre>
         */
        public Builder addAllTagId(
            java.lang.Iterable<java.lang.String> values) {
          ensureTagIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tagId_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tag_id = 5;</code>
         *
         * <pre>
         * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
         * </pre>
         */
        public Builder clearTagId() {
          tagId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tag_id = 5;</code>
         *
         * <pre>
         * 人群包信息 （非用户隐私数据，仅合作方dsp使用）
         * </pre>
         */
        public Builder addTagIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTagIdIsMutable();
          tagId_.add(value);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.User)
      }

      static {
        defaultInstance = new User(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.User)
    }

    public interface AppOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.App)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
       * </pre>
       */
      java.lang.String getId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
       * </pre>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
       * </pre>
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string domain = 3;</code>
       *
       * <pre>
       *[无效字段]应用程序域名。
       * </pre>
       */
      boolean hasDomain();
      /**
       * <code>optional string domain = 3;</code>
       *
       * <pre>
       *[无效字段]应用程序域名。
       * </pre>
       */
      java.lang.String getDomain();
      /**
       * <code>optional string domain = 3;</code>
       *
       * <pre>
       *[无效字段]应用程序域名。
       * </pre>
       */
      com.google.protobuf.ByteString
          getDomainBytes();

      /**
       * <code>repeated string cat = 4;</code>
       *
       * <pre>
       *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getCatList();
      /**
       * <code>repeated string cat = 4;</code>
       *
       * <pre>
       *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
       * </pre>
       */
      int getCatCount();
      /**
       * <code>repeated string cat = 4;</code>
       *
       * <pre>
       *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
       * </pre>
       */
      java.lang.String getCat(int index);
      /**
       * <code>repeated string cat = 4;</code>
       *
       * <pre>
       *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
       * </pre>
       */
      com.google.protobuf.ByteString
          getCatBytes(int index);

      /**
       * <code>repeated string sectioncat = 5;</code>
       *
       * <pre>
       *[无效字段]子分类。
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getSectioncatList();
      /**
       * <code>repeated string sectioncat = 5;</code>
       *
       * <pre>
       *[无效字段]子分类。
       * </pre>
       */
      int getSectioncatCount();
      /**
       * <code>repeated string sectioncat = 5;</code>
       *
       * <pre>
       *[无效字段]子分类。
       * </pre>
       */
      java.lang.String getSectioncat(int index);
      /**
       * <code>repeated string sectioncat = 5;</code>
       *
       * <pre>
       *[无效字段]子分类。
       * </pre>
       */
      com.google.protobuf.ByteString
          getSectioncatBytes(int index);
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Request.App}
     */
    public static final class App extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.App)
        AppOrBuilder {
      // Use App.newBuilder() to construct.
      private App(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private App(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final App defaultInstance;
      public static App getDefaultInstance() {
        return defaultInstance;
      }

      public App getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private App(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                id_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                name_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                domain_ = bs;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  cat_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000008;
                }
                cat_.add(bs);
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  sectioncat_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000010;
                }
                sectioncat_.add(bs);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            cat_ = cat_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            sectioncat_ = sectioncat_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_App_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_App_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Request.App.class, com.madhouse.media.tencent.GPBForDSP.Request.App.Builder.class);
      }

      public static com.google.protobuf.Parser<App> PARSER =
          new com.google.protobuf.AbstractParser<App>() {
        public App parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new App(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<App> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private java.lang.Object id_;
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int NAME_FIELD_NUMBER = 2;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DOMAIN_FIELD_NUMBER = 3;
      private java.lang.Object domain_;
      /**
       * <code>optional string domain = 3;</code>
       *
       * <pre>
       *[无效字段]应用程序域名。
       * </pre>
       */
      public boolean hasDomain() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string domain = 3;</code>
       *
       * <pre>
       *[无效字段]应用程序域名。
       * </pre>
       */
      public java.lang.String getDomain() {
        java.lang.Object ref = domain_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            domain_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string domain = 3;</code>
       *
       * <pre>
       *[无效字段]应用程序域名。
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDomainBytes() {
        java.lang.Object ref = domain_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          domain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CAT_FIELD_NUMBER = 4;
      private com.google.protobuf.LazyStringList cat_;
      /**
       * <code>repeated string cat = 4;</code>
       *
       * <pre>
       *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getCatList() {
        return cat_;
      }
      /**
       * <code>repeated string cat = 4;</code>
       *
       * <pre>
       *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
       * </pre>
       */
      public int getCatCount() {
        return cat_.size();
      }
      /**
       * <code>repeated string cat = 4;</code>
       *
       * <pre>
       *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
       * </pre>
       */
      public java.lang.String getCat(int index) {
        return cat_.get(index);
      }
      /**
       * <code>repeated string cat = 4;</code>
       *
       * <pre>
       *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCatBytes(int index) {
        return cat_.getByteString(index);
      }

      public static final int SECTIONCAT_FIELD_NUMBER = 5;
      private com.google.protobuf.LazyStringList sectioncat_;
      /**
       * <code>repeated string sectioncat = 5;</code>
       *
       * <pre>
       *[无效字段]子分类。
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getSectioncatList() {
        return sectioncat_;
      }
      /**
       * <code>repeated string sectioncat = 5;</code>
       *
       * <pre>
       *[无效字段]子分类。
       * </pre>
       */
      public int getSectioncatCount() {
        return sectioncat_.size();
      }
      /**
       * <code>repeated string sectioncat = 5;</code>
       *
       * <pre>
       *[无效字段]子分类。
       * </pre>
       */
      public java.lang.String getSectioncat(int index) {
        return sectioncat_.get(index);
      }
      /**
       * <code>repeated string sectioncat = 5;</code>
       *
       * <pre>
       *[无效字段]子分类。
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSectioncatBytes(int index) {
        return sectioncat_.getByteString(index);
      }

      private void initFields() {
        id_ = "";
        name_ = "";
        domain_ = "";
        cat_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        sectioncat_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getDomainBytes());
        }
        for (int i = 0; i < cat_.size(); i++) {
          output.writeBytes(4, cat_.getByteString(i));
        }
        for (int i = 0; i < sectioncat_.size(); i++) {
          output.writeBytes(5, sectioncat_.getByteString(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getDomainBytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < cat_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(cat_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getCatList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < sectioncat_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(sectioncat_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getSectioncatList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.App parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.App prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.App}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.App)
          com.madhouse.media.tencent.GPBForDSP.Request.AppOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_App_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_App_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.App.class, com.madhouse.media.tencent.GPBForDSP.Request.App.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Request.App.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          domain_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          cat_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          sectioncat_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_App_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.App getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Request.App.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.App build() {
          com.madhouse.media.tencent.GPBForDSP.Request.App result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.App buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Request.App result = new com.madhouse.media.tencent.GPBForDSP.Request.App(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.domain_ = domain_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cat_ = cat_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cat_ = cat_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            sectioncat_ = sectioncat_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.sectioncat_ = sectioncat_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.App) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.App)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.App other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Request.App.getDefaultInstance()) return this;
          if (other.hasId()) {
            bitField0_ |= 0x00000001;
            id_ = other.id_;
            onChanged();
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000002;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasDomain()) {
            bitField0_ |= 0x00000004;
            domain_ = other.domain_;
            onChanged();
          }
          if (!other.cat_.isEmpty()) {
            if (cat_.isEmpty()) {
              cat_ = other.cat_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCatIsMutable();
              cat_.addAll(other.cat_);
            }
            onChanged();
          }
          if (!other.sectioncat_.isEmpty()) {
            if (sectioncat_.isEmpty()) {
              sectioncat_ = other.sectioncat_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSectioncatIsMutable();
              sectioncat_.addAll(other.sectioncat_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Request.App parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.App) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object id_ = "";
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
         * </pre>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
         * </pre>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *[无效字段]应用程序ID，Android 上表现为程序的包名, 例如：com.rovio.angrybirds，iOS 上表现为AppStore 上的ID，例如：327860。
         * </pre>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         *应用程序名称 如“腾讯视频 4.7.0.9924” “腾讯新闻 4.9.1”
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object domain_ = "";
        /**
         * <code>optional string domain = 3;</code>
         *
         * <pre>
         *[无效字段]应用程序域名。
         * </pre>
         */
        public boolean hasDomain() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string domain = 3;</code>
         *
         * <pre>
         *[无效字段]应用程序域名。
         * </pre>
         */
        public java.lang.String getDomain() {
          java.lang.Object ref = domain_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              domain_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string domain = 3;</code>
         *
         * <pre>
         *[无效字段]应用程序域名。
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDomainBytes() {
          java.lang.Object ref = domain_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            domain_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string domain = 3;</code>
         *
         * <pre>
         *[无效字段]应用程序域名。
         * </pre>
         */
        public Builder setDomain(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          domain_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string domain = 3;</code>
         *
         * <pre>
         *[无效字段]应用程序域名。
         * </pre>
         */
        public Builder clearDomain() {
          bitField0_ = (bitField0_ & ~0x00000004);
          domain_ = getDefaultInstance().getDomain();
          onChanged();
          return this;
        }
        /**
         * <code>optional string domain = 3;</code>
         *
         * <pre>
         *[无效字段]应用程序域名。
         * </pre>
         */
        public Builder setDomainBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          domain_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList cat_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureCatIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            cat_ = new com.google.protobuf.LazyStringArrayList(cat_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated string cat = 4;</code>
         *
         * <pre>
         *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getCatList() {
          return cat_.getUnmodifiableView();
        }
        /**
         * <code>repeated string cat = 4;</code>
         *
         * <pre>
         *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
         * </pre>
         */
        public int getCatCount() {
          return cat_.size();
        }
        /**
         * <code>repeated string cat = 4;</code>
         *
         * <pre>
         *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
         * </pre>
         */
        public java.lang.String getCat(int index) {
          return cat_.get(index);
        }
        /**
         * <code>repeated string cat = 4;</code>
         *
         * <pre>
         *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
         * </pre>
         */
        public com.google.protobuf.ByteString
            getCatBytes(int index) {
          return cat_.getByteString(index);
        }
        /**
         * <code>repeated string cat = 4;</code>
         *
         * <pre>
         *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
         * </pre>
         */
        public Builder setCat(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCatIsMutable();
          cat_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string cat = 4;</code>
         *
         * <pre>
         *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
         * </pre>
         */
        public Builder addCat(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCatIsMutable();
          cat_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string cat = 4;</code>
         *
         * <pre>
         *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
         * </pre>
         */
        public Builder addAllCat(
            java.lang.Iterable<java.lang.String> values) {
          ensureCatIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cat_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string cat = 4;</code>
         *
         * <pre>
         *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
         * </pre>
         */
        public Builder clearCat() {
          cat_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string cat = 4;</code>
         *
         * <pre>
         *[无效字段]应用在AppStore 或者GooglePlay 或者其他应用市场的的分类信息。
         * </pre>
         */
        public Builder addCatBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureCatIsMutable();
          cat_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList sectioncat_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureSectioncatIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            sectioncat_ = new com.google.protobuf.LazyStringArrayList(sectioncat_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated string sectioncat = 5;</code>
         *
         * <pre>
         *[无效字段]子分类。
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getSectioncatList() {
          return sectioncat_.getUnmodifiableView();
        }
        /**
         * <code>repeated string sectioncat = 5;</code>
         *
         * <pre>
         *[无效字段]子分类。
         * </pre>
         */
        public int getSectioncatCount() {
          return sectioncat_.size();
        }
        /**
         * <code>repeated string sectioncat = 5;</code>
         *
         * <pre>
         *[无效字段]子分类。
         * </pre>
         */
        public java.lang.String getSectioncat(int index) {
          return sectioncat_.get(index);
        }
        /**
         * <code>repeated string sectioncat = 5;</code>
         *
         * <pre>
         *[无效字段]子分类。
         * </pre>
         */
        public com.google.protobuf.ByteString
            getSectioncatBytes(int index) {
          return sectioncat_.getByteString(index);
        }
        /**
         * <code>repeated string sectioncat = 5;</code>
         *
         * <pre>
         *[无效字段]子分类。
         * </pre>
         */
        public Builder setSectioncat(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSectioncatIsMutable();
          sectioncat_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string sectioncat = 5;</code>
         *
         * <pre>
         *[无效字段]子分类。
         * </pre>
         */
        public Builder addSectioncat(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSectioncatIsMutable();
          sectioncat_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string sectioncat = 5;</code>
         *
         * <pre>
         *[无效字段]子分类。
         * </pre>
         */
        public Builder addAllSectioncat(
            java.lang.Iterable<java.lang.String> values) {
          ensureSectioncatIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sectioncat_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string sectioncat = 5;</code>
         *
         * <pre>
         *[无效字段]子分类。
         * </pre>
         */
        public Builder clearSectioncat() {
          sectioncat_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string sectioncat = 5;</code>
         *
         * <pre>
         *[无效字段]子分类。
         * </pre>
         */
        public Builder addSectioncatBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSectioncatIsMutable();
          sectioncat_.add(value);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.App)
      }

      static {
        defaultInstance = new App(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.App)
    }

    public interface PlayOrderOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.PlayOrder)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string oid = 1;</code>
       *
       * <pre>
       *订单号
       * </pre>
       */
      boolean hasOid();
      /**
       * <code>optional string oid = 1;</code>
       *
       * <pre>
       *订单号
       * </pre>
       */
      java.lang.String getOid();
      /**
       * <code>optional string oid = 1;</code>
       *
       * <pre>
       *订单号
       * </pre>
       */
      com.google.protobuf.ByteString
          getOidBytes();

      /**
       * <code>optional uint32 index = 2;</code>
       *
       * <pre>
       *订单相对位置（新闻客户端才会填）
       * </pre>
       */
      boolean hasIndex();
      /**
       * <code>optional uint32 index = 2;</code>
       *
       * <pre>
       *订单相对位置（新闻客户端才会填）
       * </pre>
       */
      int getIndex();
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Request.PlayOrder}
     */
    public static final class PlayOrder extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.PlayOrder)
        PlayOrderOrBuilder {
      // Use PlayOrder.newBuilder() to construct.
      private PlayOrder(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PlayOrder(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PlayOrder defaultInstance;
      public static PlayOrder getDefaultInstance() {
        return defaultInstance;
      }

      public PlayOrder getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PlayOrder(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                oid_ = bs;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                index_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_PlayOrder_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_PlayOrder_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.class, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder.class);
      }

      public static com.google.protobuf.Parser<PlayOrder> PARSER =
          new com.google.protobuf.AbstractParser<PlayOrder>() {
        public PlayOrder parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayOrder(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PlayOrder> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int OID_FIELD_NUMBER = 1;
      private java.lang.Object oid_;
      /**
       * <code>optional string oid = 1;</code>
       *
       * <pre>
       *订单号
       * </pre>
       */
      public boolean hasOid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string oid = 1;</code>
       *
       * <pre>
       *订单号
       * </pre>
       */
      public java.lang.String getOid() {
        java.lang.Object ref = oid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            oid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string oid = 1;</code>
       *
       * <pre>
       *订单号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOidBytes() {
        java.lang.Object ref = oid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          oid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int INDEX_FIELD_NUMBER = 2;
      private int index_;
      /**
       * <code>optional uint32 index = 2;</code>
       *
       * <pre>
       *订单相对位置（新闻客户端才会填）
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 index = 2;</code>
       *
       * <pre>
       *订单相对位置（新闻客户端才会填）
       * </pre>
       */
      public int getIndex() {
        return index_;
      }

      private void initFields() {
        oid_ = "";
        index_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getOidBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, index_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getOidBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, index_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.PlayOrder}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.PlayOrder)
          com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_PlayOrder_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_PlayOrder_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.class, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          oid_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          index_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_PlayOrder_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder build() {
          com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder result = new com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.oid_ = oid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.index_ = index_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.getDefaultInstance()) return this;
          if (other.hasOid()) {
            bitField0_ |= 0x00000001;
            oid_ = other.oid_;
            onChanged();
          }
          if (other.hasIndex()) {
            setIndex(other.getIndex());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object oid_ = "";
        /**
         * <code>optional string oid = 1;</code>
         *
         * <pre>
         *订单号
         * </pre>
         */
        public boolean hasOid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string oid = 1;</code>
         *
         * <pre>
         *订单号
         * </pre>
         */
        public java.lang.String getOid() {
          java.lang.Object ref = oid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              oid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string oid = 1;</code>
         *
         * <pre>
         *订单号
         * </pre>
         */
        public com.google.protobuf.ByteString
            getOidBytes() {
          java.lang.Object ref = oid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            oid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string oid = 1;</code>
         *
         * <pre>
         *订单号
         * </pre>
         */
        public Builder setOid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          oid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string oid = 1;</code>
         *
         * <pre>
         *订单号
         * </pre>
         */
        public Builder clearOid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          oid_ = getDefaultInstance().getOid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string oid = 1;</code>
         *
         * <pre>
         *订单号
         * </pre>
         */
        public Builder setOidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          oid_ = value;
          onChanged();
          return this;
        }

        private int index_ ;
        /**
         * <code>optional uint32 index = 2;</code>
         *
         * <pre>
         *订单相对位置（新闻客户端才会填）
         * </pre>
         */
        public boolean hasIndex() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 index = 2;</code>
         *
         * <pre>
         *订单相对位置（新闻客户端才会填）
         * </pre>
         */
        public int getIndex() {
          return index_;
        }
        /**
         * <code>optional uint32 index = 2;</code>
         *
         * <pre>
         *订单相对位置（新闻客户端才会填）
         * </pre>
         */
        public Builder setIndex(int value) {
          bitField0_ |= 0x00000002;
          index_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 index = 2;</code>
         *
         * <pre>
         *订单相对位置（新闻客户端才会填）
         * </pre>
         */
        public Builder clearIndex() {
          bitField0_ = (bitField0_ & ~0x00000002);
          index_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.PlayOrder)
      }

      static {
        defaultInstance = new PlayOrder(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.PlayOrder)
    }

    public interface ChannelBlackOrdersOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Request.ChannelBlackOrders)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 channel_id = 1;</code>
       */
      boolean hasChannelId();
      /**
       * <code>optional uint32 channel_id = 1;</code>
       */
      int getChannelId();

      /**
       * <code>repeated string black_orders = 2;</code>
       *
       * <pre>
       *频道内不允许出现的订单
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getBlackOrdersList();
      /**
       * <code>repeated string black_orders = 2;</code>
       *
       * <pre>
       *频道内不允许出现的订单
       * </pre>
       */
      int getBlackOrdersCount();
      /**
       * <code>repeated string black_orders = 2;</code>
       *
       * <pre>
       *频道内不允许出现的订单
       * </pre>
       */
      java.lang.String getBlackOrders(int index);
      /**
       * <code>repeated string black_orders = 2;</code>
       *
       * <pre>
       *频道内不允许出现的订单
       * </pre>
       */
      com.google.protobuf.ByteString
          getBlackOrdersBytes(int index);
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Request.ChannelBlackOrders}
     */
    public static final class ChannelBlackOrders extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Request.ChannelBlackOrders)
        ChannelBlackOrdersOrBuilder {
      // Use ChannelBlackOrders.newBuilder() to construct.
      private ChannelBlackOrders(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ChannelBlackOrders(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ChannelBlackOrders defaultInstance;
      public static ChannelBlackOrders getDefaultInstance() {
        return defaultInstance;
      }

      public ChannelBlackOrders getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ChannelBlackOrders(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                channelId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  blackOrders_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000002;
                }
                blackOrders_.add(bs);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            blackOrders_ = blackOrders_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.class, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder.class);
      }

      public static com.google.protobuf.Parser<ChannelBlackOrders> PARSER =
          new com.google.protobuf.AbstractParser<ChannelBlackOrders>() {
        public ChannelBlackOrders parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChannelBlackOrders(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ChannelBlackOrders> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CHANNEL_ID_FIELD_NUMBER = 1;
      private int channelId_;
      /**
       * <code>optional uint32 channel_id = 1;</code>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       */
      public int getChannelId() {
        return channelId_;
      }

      public static final int BLACK_ORDERS_FIELD_NUMBER = 2;
      private com.google.protobuf.LazyStringList blackOrders_;
      /**
       * <code>repeated string black_orders = 2;</code>
       *
       * <pre>
       *频道内不允许出现的订单
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getBlackOrdersList() {
        return blackOrders_;
      }
      /**
       * <code>repeated string black_orders = 2;</code>
       *
       * <pre>
       *频道内不允许出现的订单
       * </pre>
       */
      public int getBlackOrdersCount() {
        return blackOrders_.size();
      }
      /**
       * <code>repeated string black_orders = 2;</code>
       *
       * <pre>
       *频道内不允许出现的订单
       * </pre>
       */
      public java.lang.String getBlackOrders(int index) {
        return blackOrders_.get(index);
      }
      /**
       * <code>repeated string black_orders = 2;</code>
       *
       * <pre>
       *频道内不允许出现的订单
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBlackOrdersBytes(int index) {
        return blackOrders_.getByteString(index);
      }

      private void initFields() {
        channelId_ = 0;
        blackOrders_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, channelId_);
        }
        for (int i = 0; i < blackOrders_.size(); i++) {
          output.writeBytes(2, blackOrders_.getByteString(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, channelId_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < blackOrders_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(blackOrders_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getBlackOrdersList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Request.ChannelBlackOrders}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request.ChannelBlackOrders)
          com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.class, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          channelId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          blackOrders_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders build() {
          com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders result = new com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.channelId_ = channelId_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            blackOrders_ = blackOrders_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.blackOrders_ = blackOrders_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.getDefaultInstance()) return this;
          if (other.hasChannelId()) {
            setChannelId(other.getChannelId());
          }
          if (!other.blackOrders_.isEmpty()) {
            if (blackOrders_.isEmpty()) {
              blackOrders_ = other.blackOrders_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBlackOrdersIsMutable();
              blackOrders_.addAll(other.blackOrders_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int channelId_ ;
        /**
         * <code>optional uint32 channel_id = 1;</code>
         */
        public boolean hasChannelId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 channel_id = 1;</code>
         */
        public int getChannelId() {
          return channelId_;
        }
        /**
         * <code>optional uint32 channel_id = 1;</code>
         */
        public Builder setChannelId(int value) {
          bitField0_ |= 0x00000001;
          channelId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 channel_id = 1;</code>
         */
        public Builder clearChannelId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          channelId_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList blackOrders_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureBlackOrdersIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            blackOrders_ = new com.google.protobuf.LazyStringArrayList(blackOrders_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated string black_orders = 2;</code>
         *
         * <pre>
         *频道内不允许出现的订单
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getBlackOrdersList() {
          return blackOrders_.getUnmodifiableView();
        }
        /**
         * <code>repeated string black_orders = 2;</code>
         *
         * <pre>
         *频道内不允许出现的订单
         * </pre>
         */
        public int getBlackOrdersCount() {
          return blackOrders_.size();
        }
        /**
         * <code>repeated string black_orders = 2;</code>
         *
         * <pre>
         *频道内不允许出现的订单
         * </pre>
         */
        public java.lang.String getBlackOrders(int index) {
          return blackOrders_.get(index);
        }
        /**
         * <code>repeated string black_orders = 2;</code>
         *
         * <pre>
         *频道内不允许出现的订单
         * </pre>
         */
        public com.google.protobuf.ByteString
            getBlackOrdersBytes(int index) {
          return blackOrders_.getByteString(index);
        }
        /**
         * <code>repeated string black_orders = 2;</code>
         *
         * <pre>
         *频道内不允许出现的订单
         * </pre>
         */
        public Builder setBlackOrders(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBlackOrdersIsMutable();
          blackOrders_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string black_orders = 2;</code>
         *
         * <pre>
         *频道内不允许出现的订单
         * </pre>
         */
        public Builder addBlackOrders(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBlackOrdersIsMutable();
          blackOrders_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string black_orders = 2;</code>
         *
         * <pre>
         *频道内不允许出现的订单
         * </pre>
         */
        public Builder addAllBlackOrders(
            java.lang.Iterable<java.lang.String> values) {
          ensureBlackOrdersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, blackOrders_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string black_orders = 2;</code>
         *
         * <pre>
         *频道内不允许出现的订单
         * </pre>
         */
        public Builder clearBlackOrders() {
          blackOrders_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string black_orders = 2;</code>
         *
         * <pre>
         *频道内不允许出现的订单
         * </pre>
         */
        public Builder addBlackOrdersBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBlackOrdersIsMutable();
          blackOrders_.add(value);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request.ChannelBlackOrders)
      }

      static {
        defaultInstance = new ChannelBlackOrders(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request.ChannelBlackOrders)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AT_FIELD_NUMBER = 2;
    private int at_;
    /**
     * <code>optional uint32 at = 2;</code>
     *
     * <pre>
     *用于区分是第一高价竞价（值为1）还是第二高价竞价（值为2），腾讯采用第二高价竞价本字段填固定值2，dsp可以只处理at值为2的请求（仅rtb）
     * </pre>
     */
    public boolean hasAt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 at = 2;</code>
     *
     * <pre>
     *用于区分是第一高价竞价（值为1）还是第二高价竞价（值为2），腾讯采用第二高价竞价本字段填固定值2，dsp可以只处理at值为2的请求（仅rtb）
     * </pre>
     */
    public int getAt() {
      return at_;
    }

    public static final int SITE_FIELD_NUMBER = 3;
    private com.madhouse.media.tencent.GPBForDSP.Request.Site site_;
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
     *
     * <pre>
     *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
     * </pre>
     */
    public boolean hasSite() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
     *
     * <pre>
     *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.Site getSite() {
      return site_;
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
     *
     * <pre>
     *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.SiteOrBuilder getSiteOrBuilder() {
      return site_;
    }

    public static final int DEVICE_FIELD_NUMBER = 4;
    private com.madhouse.media.tencent.GPBForDSP.Request.Device device_;
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
     *
     * <pre>
     *设备信息 通过本结构可获取用户的设备id
     * </pre>
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
     *
     * <pre>
     *设备信息 通过本结构可获取用户的设备id
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.Device getDevice() {
      return device_;
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
     *
     * <pre>
     *设备信息 通过本结构可获取用户的设备id
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.DeviceOrBuilder getDeviceOrBuilder() {
      return device_;
    }

    public static final int USER_FIELD_NUMBER = 5;
    private com.madhouse.media.tencent.GPBForDSP.Request.User user_;
    /**
     * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
     *
     * <pre>
     *用户信息
     * </pre>
     */
    public boolean hasUser() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
     *
     * <pre>
     *用户信息
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.User getUser() {
      return user_;
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
     *
     * <pre>
     *用户信息
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.UserOrBuilder getUserOrBuilder() {
      return user_;
    }

    public static final int IMPRESSION_FIELD_NUMBER = 6;
    private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression> impression_;
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression> getImpressionList() {
      return impression_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder> 
        getImpressionOrBuilderList() {
      return impression_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    public int getImpressionCount() {
      return impression_.size();
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.Impression getImpression(int index) {
      return impression_.get(index);
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
     *
     * <pre>
     *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder getImpressionOrBuilder(
        int index) {
      return impression_.get(index);
    }

    public static final int INNER_INFO_FIELD_NUMBER = 7;
    private java.lang.Object innerInfo_;
    /**
     * <code>optional string inner_info = 7;</code>
     *
     * <pre>
     *[无效字段]内部使用
     * </pre>
     */
    public boolean hasInnerInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string inner_info = 7;</code>
     *
     * <pre>
     *[无效字段]内部使用
     * </pre>
     */
    public java.lang.String getInnerInfo() {
      java.lang.Object ref = innerInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          innerInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string inner_info = 7;</code>
     *
     * <pre>
     *[无效字段]内部使用
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInnerInfoBytes() {
      java.lang.Object ref = innerInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        innerInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APP_FIELD_NUMBER = 8;
    private com.madhouse.media.tencent.GPBForDSP.Request.App app_;
    /**
     * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
     *
     * <pre>
     *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
     * </pre>
     */
    public boolean hasApp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
     *
     * <pre>
     *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.App getApp() {
      return app_;
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
     *
     * <pre>
     *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.AppOrBuilder getAppOrBuilder() {
      return app_;
    }

    public static final int UNLIKE_ORDER_LIST_FIELD_NUMBER = 9;
    private com.google.protobuf.LazyStringList unlikeOrderList_;
    /**
     * <code>repeated string unlike_order_list = 9;</code>
     *
     * <pre>
     *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getUnlikeOrderListList() {
      return unlikeOrderList_;
    }
    /**
     * <code>repeated string unlike_order_list = 9;</code>
     *
     * <pre>
     *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public int getUnlikeOrderListCount() {
      return unlikeOrderList_.size();
    }
    /**
     * <code>repeated string unlike_order_list = 9;</code>
     *
     * <pre>
     *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public java.lang.String getUnlikeOrderList(int index) {
      return unlikeOrderList_.get(index);
    }
    /**
     * <code>repeated string unlike_order_list = 9;</code>
     *
     * <pre>
     *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUnlikeOrderListBytes(int index) {
      return unlikeOrderList_.getByteString(index);
    }

    public static final int OIDS_FIELD_NUMBER = 10;
    private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder> oids_;
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder> getOidsList() {
      return oids_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder> 
        getOidsOrBuilderList() {
      return oids_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public int getOidsCount() {
      return oids_.size();
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder getOids(int index) {
      return oids_.get(index);
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
     *
     * <pre>
     *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder getOidsOrBuilder(
        int index) {
      return oids_.get(index);
    }

    public static final int REQUEST_BLACK_ORDERS_FIELD_NUMBER = 11;
    private com.google.protobuf.LazyStringList requestBlackOrders_;
    /**
     * <code>repeated string request_black_orders = 11;</code>
     *
     * <pre>
     *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getRequestBlackOrdersList() {
      return requestBlackOrders_;
    }
    /**
     * <code>repeated string request_black_orders = 11;</code>
     *
     * <pre>
     *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public int getRequestBlackOrdersCount() {
      return requestBlackOrders_.size();
    }
    /**
     * <code>repeated string request_black_orders = 11;</code>
     *
     * <pre>
     *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public java.lang.String getRequestBlackOrders(int index) {
      return requestBlackOrders_.get(index);
    }
    /**
     * <code>repeated string request_black_orders = 11;</code>
     *
     * <pre>
     *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRequestBlackOrdersBytes(int index) {
      return requestBlackOrders_.getByteString(index);
    }

    public static final int CHANNEL_BLACK_ORDERS_FIELD_NUMBER = 12;
    private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders> channelBlackOrders_;
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders> getChannelBlackOrdersList() {
      return channelBlackOrders_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder> 
        getChannelBlackOrdersOrBuilderList() {
      return channelBlackOrders_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public int getChannelBlackOrdersCount() {
      return channelBlackOrders_.size();
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders getChannelBlackOrders(int index) {
      return channelBlackOrders_.get(index);
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
     *
     * <pre>
     *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder getChannelBlackOrdersOrBuilder(
        int index) {
      return channelBlackOrders_.get(index);
    }

    public static final int IS_ORDER_CACHE_FIELD_NUMBER = 13;
    private boolean isOrderCache_;
    /**
     * <code>optional bool is_order_cache = 13;</code>
     *
     * <pre>
     *是否是订单池请求 新闻客户端订单池，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public boolean hasIsOrderCache() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool is_order_cache = 13;</code>
     *
     * <pre>
     *是否是订单池请求 新闻客户端订单池，dsp不能再出相同订单（仅rtb）
     * </pre>
     */
    public boolean getIsOrderCache() {
      return isOrderCache_;
    }

    public static final int IS_FIRST_TIME_FIELD_NUMBER = 14;
    private boolean isFirstTime_;
    /**
     * <code>optional bool is_first_time = 14;</code>
     *
     * <pre>
     *[无效字段]是否冷启动，第一次打开APP
     * </pre>
     */
    public boolean hasIsFirstTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool is_first_time = 14;</code>
     *
     * <pre>
     *[无效字段]是否冷启动，第一次打开APP
     * </pre>
     */
    public boolean getIsFirstTime() {
      return isFirstTime_;
    }

    private void initFields() {
      id_ = "";
      at_ = 0;
      site_ = com.madhouse.media.tencent.GPBForDSP.Request.Site.getDefaultInstance();
      device_ = com.madhouse.media.tencent.GPBForDSP.Request.Device.getDefaultInstance();
      user_ = com.madhouse.media.tencent.GPBForDSP.Request.User.getDefaultInstance();
      impression_ = java.util.Collections.emptyList();
      innerInfo_ = "";
      app_ = com.madhouse.media.tencent.GPBForDSP.Request.App.getDefaultInstance();
      unlikeOrderList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      oids_ = java.util.Collections.emptyList();
      requestBlackOrders_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      channelBlackOrders_ = java.util.Collections.emptyList();
      isOrderCache_ = false;
      isFirstTime_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, at_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, site_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, device_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, user_);
      }
      for (int i = 0; i < impression_.size(); i++) {
        output.writeMessage(6, impression_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, getInnerInfoBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, app_);
      }
      for (int i = 0; i < unlikeOrderList_.size(); i++) {
        output.writeBytes(9, unlikeOrderList_.getByteString(i));
      }
      for (int i = 0; i < oids_.size(); i++) {
        output.writeMessage(10, oids_.get(i));
      }
      for (int i = 0; i < requestBlackOrders_.size(); i++) {
        output.writeBytes(11, requestBlackOrders_.getByteString(i));
      }
      for (int i = 0; i < channelBlackOrders_.size(); i++) {
        output.writeMessage(12, channelBlackOrders_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(13, isOrderCache_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(14, isFirstTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, at_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, site_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, device_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, user_);
      }
      for (int i = 0; i < impression_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, impression_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getInnerInfoBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, app_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < unlikeOrderList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(unlikeOrderList_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getUnlikeOrderListList().size();
      }
      for (int i = 0; i < oids_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, oids_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requestBlackOrders_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(requestBlackOrders_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getRequestBlackOrdersList().size();
      }
      for (int i = 0; i < channelBlackOrders_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, channelBlackOrders_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, isOrderCache_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, isFirstTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.madhouse.media.tencent.GPBForDSP.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Request)
        com.madhouse.media.tencent.GPBForDSP.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Request.class, com.madhouse.media.tencent.GPBForDSP.Request.Builder.class);
      }

      // Construct using com.madhouse.media.tencent.GPBForDSP.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSiteFieldBuilder();
          getDeviceFieldBuilder();
          getUserFieldBuilder();
          getImpressionFieldBuilder();
          getAppFieldBuilder();
          getOidsFieldBuilder();
          getChannelBlackOrdersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        at_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (siteBuilder_ == null) {
          site_ = com.madhouse.media.tencent.GPBForDSP.Request.Site.getDefaultInstance();
        } else {
          siteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (deviceBuilder_ == null) {
          device_ = com.madhouse.media.tencent.GPBForDSP.Request.Device.getDefaultInstance();
        } else {
          deviceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (userBuilder_ == null) {
          user_ = com.madhouse.media.tencent.GPBForDSP.Request.User.getDefaultInstance();
        } else {
          userBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (impressionBuilder_ == null) {
          impression_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          impressionBuilder_.clear();
        }
        innerInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        if (appBuilder_ == null) {
          app_ = com.madhouse.media.tencent.GPBForDSP.Request.App.getDefaultInstance();
        } else {
          appBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        unlikeOrderList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (oidsBuilder_ == null) {
          oids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          oidsBuilder_.clear();
        }
        requestBlackOrders_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (channelBlackOrdersBuilder_ == null) {
          channelBlackOrders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          channelBlackOrdersBuilder_.clear();
        }
        isOrderCache_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        isFirstTime_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Request_descriptor;
      }

      public com.madhouse.media.tencent.GPBForDSP.Request getDefaultInstanceForType() {
        return com.madhouse.media.tencent.GPBForDSP.Request.getDefaultInstance();
      }

      public com.madhouse.media.tencent.GPBForDSP.Request build() {
        com.madhouse.media.tencent.GPBForDSP.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.madhouse.media.tencent.GPBForDSP.Request buildPartial() {
        com.madhouse.media.tencent.GPBForDSP.Request result = new com.madhouse.media.tencent.GPBForDSP.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.at_ = at_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (siteBuilder_ == null) {
          result.site_ = site_;
        } else {
          result.site_ = siteBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (deviceBuilder_ == null) {
          result.device_ = device_;
        } else {
          result.device_ = deviceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (userBuilder_ == null) {
          result.user_ = user_;
        } else {
          result.user_ = userBuilder_.build();
        }
        if (impressionBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            impression_ = java.util.Collections.unmodifiableList(impression_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.impression_ = impression_;
        } else {
          result.impression_ = impressionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.innerInfo_ = innerInfo_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (appBuilder_ == null) {
          result.app_ = app_;
        } else {
          result.app_ = appBuilder_.build();
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          unlikeOrderList_ = unlikeOrderList_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.unlikeOrderList_ = unlikeOrderList_;
        if (oidsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            oids_ = java.util.Collections.unmodifiableList(oids_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.oids_ = oids_;
        } else {
          result.oids_ = oidsBuilder_.build();
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          requestBlackOrders_ = requestBlackOrders_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.requestBlackOrders_ = requestBlackOrders_;
        if (channelBlackOrdersBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            channelBlackOrders_ = java.util.Collections.unmodifiableList(channelBlackOrders_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.channelBlackOrders_ = channelBlackOrders_;
        } else {
          result.channelBlackOrders_ = channelBlackOrdersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isOrderCache_ = isOrderCache_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isFirstTime_ = isFirstTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.madhouse.media.tencent.GPBForDSP.Request) {
          return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Request other) {
        if (other == com.madhouse.media.tencent.GPBForDSP.Request.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasAt()) {
          setAt(other.getAt());
        }
        if (other.hasSite()) {
          mergeSite(other.getSite());
        }
        if (other.hasDevice()) {
          mergeDevice(other.getDevice());
        }
        if (other.hasUser()) {
          mergeUser(other.getUser());
        }
        if (impressionBuilder_ == null) {
          if (!other.impression_.isEmpty()) {
            if (impression_.isEmpty()) {
              impression_ = other.impression_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureImpressionIsMutable();
              impression_.addAll(other.impression_);
            }
            onChanged();
          }
        } else {
          if (!other.impression_.isEmpty()) {
            if (impressionBuilder_.isEmpty()) {
              impressionBuilder_.dispose();
              impressionBuilder_ = null;
              impression_ = other.impression_;
              bitField0_ = (bitField0_ & ~0x00000020);
              impressionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getImpressionFieldBuilder() : null;
            } else {
              impressionBuilder_.addAllMessages(other.impression_);
            }
          }
        }
        if (other.hasInnerInfo()) {
          bitField0_ |= 0x00000040;
          innerInfo_ = other.innerInfo_;
          onChanged();
        }
        if (other.hasApp()) {
          mergeApp(other.getApp());
        }
        if (!other.unlikeOrderList_.isEmpty()) {
          if (unlikeOrderList_.isEmpty()) {
            unlikeOrderList_ = other.unlikeOrderList_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureUnlikeOrderListIsMutable();
            unlikeOrderList_.addAll(other.unlikeOrderList_);
          }
          onChanged();
        }
        if (oidsBuilder_ == null) {
          if (!other.oids_.isEmpty()) {
            if (oids_.isEmpty()) {
              oids_ = other.oids_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureOidsIsMutable();
              oids_.addAll(other.oids_);
            }
            onChanged();
          }
        } else {
          if (!other.oids_.isEmpty()) {
            if (oidsBuilder_.isEmpty()) {
              oidsBuilder_.dispose();
              oidsBuilder_ = null;
              oids_ = other.oids_;
              bitField0_ = (bitField0_ & ~0x00000200);
              oidsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOidsFieldBuilder() : null;
            } else {
              oidsBuilder_.addAllMessages(other.oids_);
            }
          }
        }
        if (!other.requestBlackOrders_.isEmpty()) {
          if (requestBlackOrders_.isEmpty()) {
            requestBlackOrders_ = other.requestBlackOrders_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureRequestBlackOrdersIsMutable();
            requestBlackOrders_.addAll(other.requestBlackOrders_);
          }
          onChanged();
        }
        if (channelBlackOrdersBuilder_ == null) {
          if (!other.channelBlackOrders_.isEmpty()) {
            if (channelBlackOrders_.isEmpty()) {
              channelBlackOrders_ = other.channelBlackOrders_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureChannelBlackOrdersIsMutable();
              channelBlackOrders_.addAll(other.channelBlackOrders_);
            }
            onChanged();
          }
        } else {
          if (!other.channelBlackOrders_.isEmpty()) {
            if (channelBlackOrdersBuilder_.isEmpty()) {
              channelBlackOrdersBuilder_.dispose();
              channelBlackOrdersBuilder_ = null;
              channelBlackOrders_ = other.channelBlackOrders_;
              bitField0_ = (bitField0_ & ~0x00000800);
              channelBlackOrdersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChannelBlackOrdersFieldBuilder() : null;
            } else {
              channelBlackOrdersBuilder_.addAllMessages(other.channelBlackOrders_);
            }
          }
        }
        if (other.hasIsOrderCache()) {
          setIsOrderCache(other.getIsOrderCache());
        }
        if (other.hasIsFirstTime()) {
          setIsFirstTime(other.getIsFirstTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.madhouse.media.tencent.GPBForDSP.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *用于标识一次请求的请求id，dsp需要在回复时在Response.id字段中填写该字段，带回给腾讯adx
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private int at_ ;
      /**
       * <code>optional uint32 at = 2;</code>
       *
       * <pre>
       *用于区分是第一高价竞价（值为1）还是第二高价竞价（值为2），腾讯采用第二高价竞价本字段填固定值2，dsp可以只处理at值为2的请求（仅rtb）
       * </pre>
       */
      public boolean hasAt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 at = 2;</code>
       *
       * <pre>
       *用于区分是第一高价竞价（值为1）还是第二高价竞价（值为2），腾讯采用第二高价竞价本字段填固定值2，dsp可以只处理at值为2的请求（仅rtb）
       * </pre>
       */
      public int getAt() {
        return at_;
      }
      /**
       * <code>optional uint32 at = 2;</code>
       *
       * <pre>
       *用于区分是第一高价竞价（值为1）还是第二高价竞价（值为2），腾讯采用第二高价竞价本字段填固定值2，dsp可以只处理at值为2的请求（仅rtb）
       * </pre>
       */
      public Builder setAt(int value) {
        bitField0_ |= 0x00000002;
        at_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 at = 2;</code>
       *
       * <pre>
       *用于区分是第一高价竞价（值为1）还是第二高价竞价（值为2），腾讯采用第二高价竞价本字段填固定值2，dsp可以只处理at值为2的请求（仅rtb）
       * </pre>
       */
      public Builder clearAt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        at_ = 0;
        onChanged();
        return this;
      }

      private com.madhouse.media.tencent.GPBForDSP.Request.Site site_ = com.madhouse.media.tencent.GPBForDSP.Request.Site.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.Site, com.madhouse.media.tencent.GPBForDSP.Request.Site.Builder, com.madhouse.media.tencent.GPBForDSP.Request.SiteOrBuilder> siteBuilder_;
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
       *
       * <pre>
       *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
       * </pre>
       */
      public boolean hasSite() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
       *
       * <pre>
       *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Site getSite() {
        if (siteBuilder_ == null) {
          return site_;
        } else {
          return siteBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
       *
       * <pre>
       *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
       * </pre>
       */
      public Builder setSite(com.madhouse.media.tencent.GPBForDSP.Request.Site value) {
        if (siteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          site_ = value;
          onChanged();
        } else {
          siteBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
       *
       * <pre>
       *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
       * </pre>
       */
      public Builder setSite(
          com.madhouse.media.tencent.GPBForDSP.Request.Site.Builder builderForValue) {
        if (siteBuilder_ == null) {
          site_ = builderForValue.build();
          onChanged();
        } else {
          siteBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
       *
       * <pre>
       *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
       * </pre>
       */
      public Builder mergeSite(com.madhouse.media.tencent.GPBForDSP.Request.Site value) {
        if (siteBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              site_ != com.madhouse.media.tencent.GPBForDSP.Request.Site.getDefaultInstance()) {
            site_ =
              com.madhouse.media.tencent.GPBForDSP.Request.Site.newBuilder(site_).mergeFrom(value).buildPartial();
          } else {
            site_ = value;
          }
          onChanged();
        } else {
          siteBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
       *
       * <pre>
       *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
       * </pre>
       */
      public Builder clearSite() {
        if (siteBuilder_ == null) {
          site_ = com.madhouse.media.tencent.GPBForDSP.Request.Site.getDefaultInstance();
          onChanged();
        } else {
          siteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
       *
       * <pre>
       *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Site.Builder getSiteBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSiteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
       *
       * <pre>
       *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.SiteOrBuilder getSiteOrBuilder() {
        if (siteBuilder_ != null) {
          return siteBuilder_.getMessageOrBuilder();
        } else {
          return site_;
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Site site = 3;</code>
       *
       * <pre>
       *媒体站点信息（老的pc资源会填写，大部分资源都不填写本结构内的字段，dsp可以忽略本字段不处理）
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.Site, com.madhouse.media.tencent.GPBForDSP.Request.Site.Builder, com.madhouse.media.tencent.GPBForDSP.Request.SiteOrBuilder> 
          getSiteFieldBuilder() {
        if (siteBuilder_ == null) {
          siteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Request.Site, com.madhouse.media.tencent.GPBForDSP.Request.Site.Builder, com.madhouse.media.tencent.GPBForDSP.Request.SiteOrBuilder>(
                  getSite(),
                  getParentForChildren(),
                  isClean());
          site_ = null;
        }
        return siteBuilder_;
      }

      private com.madhouse.media.tencent.GPBForDSP.Request.Device device_ = com.madhouse.media.tencent.GPBForDSP.Request.Device.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.Device, com.madhouse.media.tencent.GPBForDSP.Request.Device.Builder, com.madhouse.media.tencent.GPBForDSP.Request.DeviceOrBuilder> deviceBuilder_;
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
       *
       * <pre>
       *设备信息 通过本结构可获取用户的设备id
       * </pre>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
       *
       * <pre>
       *设备信息 通过本结构可获取用户的设备id
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Device getDevice() {
        if (deviceBuilder_ == null) {
          return device_;
        } else {
          return deviceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
       *
       * <pre>
       *设备信息 通过本结构可获取用户的设备id
       * </pre>
       */
      public Builder setDevice(com.madhouse.media.tencent.GPBForDSP.Request.Device value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          device_ = value;
          onChanged();
        } else {
          deviceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
       *
       * <pre>
       *设备信息 通过本结构可获取用户的设备id
       * </pre>
       */
      public Builder setDevice(
          com.madhouse.media.tencent.GPBForDSP.Request.Device.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          device_ = builderForValue.build();
          onChanged();
        } else {
          deviceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
       *
       * <pre>
       *设备信息 通过本结构可获取用户的设备id
       * </pre>
       */
      public Builder mergeDevice(com.madhouse.media.tencent.GPBForDSP.Request.Device value) {
        if (deviceBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              device_ != com.madhouse.media.tencent.GPBForDSP.Request.Device.getDefaultInstance()) {
            device_ =
              com.madhouse.media.tencent.GPBForDSP.Request.Device.newBuilder(device_).mergeFrom(value).buildPartial();
          } else {
            device_ = value;
          }
          onChanged();
        } else {
          deviceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
       *
       * <pre>
       *设备信息 通过本结构可获取用户的设备id
       * </pre>
       */
      public Builder clearDevice() {
        if (deviceBuilder_ == null) {
          device_ = com.madhouse.media.tencent.GPBForDSP.Request.Device.getDefaultInstance();
          onChanged();
        } else {
          deviceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
       *
       * <pre>
       *设备信息 通过本结构可获取用户的设备id
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Device.Builder getDeviceBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDeviceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
       *
       * <pre>
       *设备信息 通过本结构可获取用户的设备id
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.DeviceOrBuilder getDeviceOrBuilder() {
        if (deviceBuilder_ != null) {
          return deviceBuilder_.getMessageOrBuilder();
        } else {
          return device_;
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.Device device = 4;</code>
       *
       * <pre>
       *设备信息 通过本结构可获取用户的设备id
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.Device, com.madhouse.media.tencent.GPBForDSP.Request.Device.Builder, com.madhouse.media.tencent.GPBForDSP.Request.DeviceOrBuilder> 
          getDeviceFieldBuilder() {
        if (deviceBuilder_ == null) {
          deviceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Request.Device, com.madhouse.media.tencent.GPBForDSP.Request.Device.Builder, com.madhouse.media.tencent.GPBForDSP.Request.DeviceOrBuilder>(
                  getDevice(),
                  getParentForChildren(),
                  isClean());
          device_ = null;
        }
        return deviceBuilder_;
      }

      private com.madhouse.media.tencent.GPBForDSP.Request.User user_ = com.madhouse.media.tencent.GPBForDSP.Request.User.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.User, com.madhouse.media.tencent.GPBForDSP.Request.User.Builder, com.madhouse.media.tencent.GPBForDSP.Request.UserOrBuilder> userBuilder_;
      /**
       * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
       *
       * <pre>
       *用户信息
       * </pre>
       */
      public boolean hasUser() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
       *
       * <pre>
       *用户信息
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.User getUser() {
        if (userBuilder_ == null) {
          return user_;
        } else {
          return userBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
       *
       * <pre>
       *用户信息
       * </pre>
       */
      public Builder setUser(com.madhouse.media.tencent.GPBForDSP.Request.User value) {
        if (userBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          user_ = value;
          onChanged();
        } else {
          userBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
       *
       * <pre>
       *用户信息
       * </pre>
       */
      public Builder setUser(
          com.madhouse.media.tencent.GPBForDSP.Request.User.Builder builderForValue) {
        if (userBuilder_ == null) {
          user_ = builderForValue.build();
          onChanged();
        } else {
          userBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
       *
       * <pre>
       *用户信息
       * </pre>
       */
      public Builder mergeUser(com.madhouse.media.tencent.GPBForDSP.Request.User value) {
        if (userBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              user_ != com.madhouse.media.tencent.GPBForDSP.Request.User.getDefaultInstance()) {
            user_ =
              com.madhouse.media.tencent.GPBForDSP.Request.User.newBuilder(user_).mergeFrom(value).buildPartial();
          } else {
            user_ = value;
          }
          onChanged();
        } else {
          userBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
       *
       * <pre>
       *用户信息
       * </pre>
       */
      public Builder clearUser() {
        if (userBuilder_ == null) {
          user_ = com.madhouse.media.tencent.GPBForDSP.Request.User.getDefaultInstance();
          onChanged();
        } else {
          userBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
       *
       * <pre>
       *用户信息
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.User.Builder getUserBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getUserFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
       *
       * <pre>
       *用户信息
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.UserOrBuilder getUserOrBuilder() {
        if (userBuilder_ != null) {
          return userBuilder_.getMessageOrBuilder();
        } else {
          return user_;
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.User user = 5;</code>
       *
       * <pre>
       *用户信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.User, com.madhouse.media.tencent.GPBForDSP.Request.User.Builder, com.madhouse.media.tencent.GPBForDSP.Request.UserOrBuilder> 
          getUserFieldBuilder() {
        if (userBuilder_ == null) {
          userBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Request.User, com.madhouse.media.tencent.GPBForDSP.Request.User.Builder, com.madhouse.media.tencent.GPBForDSP.Request.UserOrBuilder>(
                  getUser(),
                  getParentForChildren(),
                  isClean());
          user_ = null;
        }
        return userBuilder_;
      }

      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression> impression_ =
        java.util.Collections.emptyList();
      private void ensureImpressionIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          impression_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.Impression>(impression_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.Impression, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder, com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder> impressionBuilder_;

      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression> getImpressionList() {
        if (impressionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(impression_);
        } else {
          return impressionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public int getImpressionCount() {
        if (impressionBuilder_ == null) {
          return impression_.size();
        } else {
          return impressionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression getImpression(int index) {
        if (impressionBuilder_ == null) {
          return impression_.get(index);
        } else {
          return impressionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public Builder setImpression(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression value) {
        if (impressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpressionIsMutable();
          impression_.set(index, value);
          onChanged();
        } else {
          impressionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public Builder setImpression(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder builderForValue) {
        if (impressionBuilder_ == null) {
          ensureImpressionIsMutable();
          impression_.set(index, builderForValue.build());
          onChanged();
        } else {
          impressionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public Builder addImpression(com.madhouse.media.tencent.GPBForDSP.Request.Impression value) {
        if (impressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpressionIsMutable();
          impression_.add(value);
          onChanged();
        } else {
          impressionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public Builder addImpression(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression value) {
        if (impressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImpressionIsMutable();
          impression_.add(index, value);
          onChanged();
        } else {
          impressionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public Builder addImpression(
          com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder builderForValue) {
        if (impressionBuilder_ == null) {
          ensureImpressionIsMutable();
          impression_.add(builderForValue.build());
          onChanged();
        } else {
          impressionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public Builder addImpression(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder builderForValue) {
        if (impressionBuilder_ == null) {
          ensureImpressionIsMutable();
          impression_.add(index, builderForValue.build());
          onChanged();
        } else {
          impressionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public Builder addAllImpression(
          java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Request.Impression> values) {
        if (impressionBuilder_ == null) {
          ensureImpressionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, impression_);
          onChanged();
        } else {
          impressionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public Builder clearImpression() {
        if (impressionBuilder_ == null) {
          impression_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          impressionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public Builder removeImpression(int index) {
        if (impressionBuilder_ == null) {
          ensureImpressionIsMutable();
          impression_.remove(index);
          onChanged();
        } else {
          impressionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder getImpressionBuilder(
          int index) {
        return getImpressionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder getImpressionOrBuilder(
          int index) {
        if (impressionBuilder_ == null) {
          return impression_.get(index);  } else {
          return impressionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder> 
           getImpressionOrBuilderList() {
        if (impressionBuilder_ != null) {
          return impressionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(impression_);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder addImpressionBuilder() {
        return getImpressionFieldBuilder().addBuilder(
            com.madhouse.media.tencent.GPBForDSP.Request.Impression.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder addImpressionBuilder(
          int index) {
        return getImpressionFieldBuilder().addBuilder(
            index, com.madhouse.media.tencent.GPBForDSP.Request.Impression.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.Impression impression = 6;</code>
       *
       * <pre>
       *曝光机会，一次请求可含多个广告位，每个广告位为一次曝光机会
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder> 
           getImpressionBuilderList() {
        return getImpressionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.Impression, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder, com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder> 
          getImpressionFieldBuilder() {
        if (impressionBuilder_ == null) {
          impressionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Request.Impression, com.madhouse.media.tencent.GPBForDSP.Request.Impression.Builder, com.madhouse.media.tencent.GPBForDSP.Request.ImpressionOrBuilder>(
                  impression_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          impression_ = null;
        }
        return impressionBuilder_;
      }

      private java.lang.Object innerInfo_ = "";
      /**
       * <code>optional string inner_info = 7;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      public boolean hasInnerInfo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string inner_info = 7;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      public java.lang.String getInnerInfo() {
        java.lang.Object ref = innerInfo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            innerInfo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string inner_info = 7;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInnerInfoBytes() {
        java.lang.Object ref = innerInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          innerInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string inner_info = 7;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      public Builder setInnerInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        innerInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string inner_info = 7;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      public Builder clearInnerInfo() {
        bitField0_ = (bitField0_ & ~0x00000040);
        innerInfo_ = getDefaultInstance().getInnerInfo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string inner_info = 7;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      public Builder setInnerInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        innerInfo_ = value;
        onChanged();
        return this;
      }

      private com.madhouse.media.tencent.GPBForDSP.Request.App app_ = com.madhouse.media.tencent.GPBForDSP.Request.App.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.App, com.madhouse.media.tencent.GPBForDSP.Request.App.Builder, com.madhouse.media.tencent.GPBForDSP.Request.AppOrBuilder> appBuilder_;
      /**
       * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
       *
       * <pre>
       *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
       * </pre>
       */
      public boolean hasApp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
       *
       * <pre>
       *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.App getApp() {
        if (appBuilder_ == null) {
          return app_;
        } else {
          return appBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
       *
       * <pre>
       *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
       * </pre>
       */
      public Builder setApp(com.madhouse.media.tencent.GPBForDSP.Request.App value) {
        if (appBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          app_ = value;
          onChanged();
        } else {
          appBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
       *
       * <pre>
       *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
       * </pre>
       */
      public Builder setApp(
          com.madhouse.media.tencent.GPBForDSP.Request.App.Builder builderForValue) {
        if (appBuilder_ == null) {
          app_ = builderForValue.build();
          onChanged();
        } else {
          appBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
       *
       * <pre>
       *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
       * </pre>
       */
      public Builder mergeApp(com.madhouse.media.tencent.GPBForDSP.Request.App value) {
        if (appBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              app_ != com.madhouse.media.tencent.GPBForDSP.Request.App.getDefaultInstance()) {
            app_ =
              com.madhouse.media.tencent.GPBForDSP.Request.App.newBuilder(app_).mergeFrom(value).buildPartial();
          } else {
            app_ = value;
          }
          onChanged();
        } else {
          appBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
       *
       * <pre>
       *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
       * </pre>
       */
      public Builder clearApp() {
        if (appBuilder_ == null) {
          app_ = com.madhouse.media.tencent.GPBForDSP.Request.App.getDefaultInstance();
          onChanged();
        } else {
          appBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
       *
       * <pre>
       *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.App.Builder getAppBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getAppFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
       *
       * <pre>
       *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.AppOrBuilder getAppOrBuilder() {
        if (appBuilder_ != null) {
          return appBuilder_.getMessageOrBuilder();
        } else {
          return app_;
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Request.App app = 8;</code>
       *
       * <pre>
       *移动app信息 内部包括app的名称(仅移动端资源才有本字段，否则为空)
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.App, com.madhouse.media.tencent.GPBForDSP.Request.App.Builder, com.madhouse.media.tencent.GPBForDSP.Request.AppOrBuilder> 
          getAppFieldBuilder() {
        if (appBuilder_ == null) {
          appBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Request.App, com.madhouse.media.tencent.GPBForDSP.Request.App.Builder, com.madhouse.media.tencent.GPBForDSP.Request.AppOrBuilder>(
                  getApp(),
                  getParentForChildren(),
                  isClean());
          app_ = null;
        }
        return appBuilder_;
      }

      private com.google.protobuf.LazyStringList unlikeOrderList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUnlikeOrderListIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          unlikeOrderList_ = new com.google.protobuf.LazyStringArrayList(unlikeOrderList_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated string unlike_order_list = 9;</code>
       *
       * <pre>
       *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getUnlikeOrderListList() {
        return unlikeOrderList_.getUnmodifiableView();
      }
      /**
       * <code>repeated string unlike_order_list = 9;</code>
       *
       * <pre>
       *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public int getUnlikeOrderListCount() {
        return unlikeOrderList_.size();
      }
      /**
       * <code>repeated string unlike_order_list = 9;</code>
       *
       * <pre>
       *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public java.lang.String getUnlikeOrderList(int index) {
        return unlikeOrderList_.get(index);
      }
      /**
       * <code>repeated string unlike_order_list = 9;</code>
       *
       * <pre>
       *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUnlikeOrderListBytes(int index) {
        return unlikeOrderList_.getByteString(index);
      }
      /**
       * <code>repeated string unlike_order_list = 9;</code>
       *
       * <pre>
       *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder setUnlikeOrderList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUnlikeOrderListIsMutable();
        unlikeOrderList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string unlike_order_list = 9;</code>
       *
       * <pre>
       *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addUnlikeOrderList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUnlikeOrderListIsMutable();
        unlikeOrderList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string unlike_order_list = 9;</code>
       *
       * <pre>
       *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addAllUnlikeOrderList(
          java.lang.Iterable<java.lang.String> values) {
        ensureUnlikeOrderListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unlikeOrderList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string unlike_order_list = 9;</code>
       *
       * <pre>
       *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder clearUnlikeOrderList() {
        unlikeOrderList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string unlike_order_list = 9;</code>
       *
       * <pre>
       *用户不喜欢订单列表 dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addUnlikeOrderListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUnlikeOrderListIsMutable();
        unlikeOrderList_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder> oids_ =
        java.util.Collections.emptyList();
      private void ensureOidsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          oids_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder>(oids_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder> oidsBuilder_;

      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder> getOidsList() {
        if (oidsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(oids_);
        } else {
          return oidsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public int getOidsCount() {
        if (oidsBuilder_ == null) {
          return oids_.size();
        } else {
          return oidsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder getOids(int index) {
        if (oidsBuilder_ == null) {
          return oids_.get(index);
        } else {
          return oidsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder setOids(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder value) {
        if (oidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOidsIsMutable();
          oids_.set(index, value);
          onChanged();
        } else {
          oidsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder setOids(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder builderForValue) {
        if (oidsBuilder_ == null) {
          ensureOidsIsMutable();
          oids_.set(index, builderForValue.build());
          onChanged();
        } else {
          oidsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addOids(com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder value) {
        if (oidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOidsIsMutable();
          oids_.add(value);
          onChanged();
        } else {
          oidsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addOids(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder value) {
        if (oidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOidsIsMutable();
          oids_.add(index, value);
          onChanged();
        } else {
          oidsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addOids(
          com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder builderForValue) {
        if (oidsBuilder_ == null) {
          ensureOidsIsMutable();
          oids_.add(builderForValue.build());
          onChanged();
        } else {
          oidsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addOids(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder builderForValue) {
        if (oidsBuilder_ == null) {
          ensureOidsIsMutable();
          oids_.add(index, builderForValue.build());
          onChanged();
        } else {
          oidsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addAllOids(
          java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder> values) {
        if (oidsBuilder_ == null) {
          ensureOidsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, oids_);
          onChanged();
        } else {
          oidsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder clearOids() {
        if (oidsBuilder_ == null) {
          oids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          oidsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder removeOids(int index) {
        if (oidsBuilder_ == null) {
          ensureOidsIsMutable();
          oids_.remove(index);
          onChanged();
        } else {
          oidsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder getOidsBuilder(
          int index) {
        return getOidsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder getOidsOrBuilder(
          int index) {
        if (oidsBuilder_ == null) {
          return oids_.get(index);  } else {
          return oidsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder> 
           getOidsOrBuilderList() {
        if (oidsBuilder_ != null) {
          return oidsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(oids_);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder addOidsBuilder() {
        return getOidsFieldBuilder().addBuilder(
            com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder addOidsBuilder(
          int index) {
        return getOidsFieldBuilder().addBuilder(
            index, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.PlayOrder oids = 10;</code>
       *
       * <pre>
       *新闻客户端当前频道当前已播放订单，透传给dsp用来做去重，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder> 
           getOidsBuilderList() {
        return getOidsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder> 
          getOidsFieldBuilder() {
        if (oidsBuilder_ == null) {
          oidsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrder.Builder, com.madhouse.media.tencent.GPBForDSP.Request.PlayOrderOrBuilder>(
                  oids_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          oids_ = null;
        }
        return oidsBuilder_;
      }

      private com.google.protobuf.LazyStringList requestBlackOrders_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRequestBlackOrdersIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          requestBlackOrders_ = new com.google.protobuf.LazyStringArrayList(requestBlackOrders_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated string request_black_orders = 11;</code>
       *
       * <pre>
       *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getRequestBlackOrdersList() {
        return requestBlackOrders_.getUnmodifiableView();
      }
      /**
       * <code>repeated string request_black_orders = 11;</code>
       *
       * <pre>
       *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public int getRequestBlackOrdersCount() {
        return requestBlackOrders_.size();
      }
      /**
       * <code>repeated string request_black_orders = 11;</code>
       *
       * <pre>
       *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public java.lang.String getRequestBlackOrders(int index) {
        return requestBlackOrders_.get(index);
      }
      /**
       * <code>repeated string request_black_orders = 11;</code>
       *
       * <pre>
       *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRequestBlackOrdersBytes(int index) {
        return requestBlackOrders_.getByteString(index);
      }
      /**
       * <code>repeated string request_black_orders = 11;</code>
       *
       * <pre>
       *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder setRequestBlackOrders(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRequestBlackOrdersIsMutable();
        requestBlackOrders_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string request_black_orders = 11;</code>
       *
       * <pre>
       *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addRequestBlackOrders(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRequestBlackOrdersIsMutable();
        requestBlackOrders_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string request_black_orders = 11;</code>
       *
       * <pre>
       *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addAllRequestBlackOrders(
          java.lang.Iterable<java.lang.String> values) {
        ensureRequestBlackOrdersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, requestBlackOrders_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string request_black_orders = 11;</code>
       *
       * <pre>
       *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder clearRequestBlackOrders() {
        requestBlackOrders_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string request_black_orders = 11;</code>
       *
       * <pre>
       *请求级订单去重(手腾网去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addRequestBlackOrdersBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRequestBlackOrdersIsMutable();
        requestBlackOrders_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders> channelBlackOrders_ =
        java.util.Collections.emptyList();
      private void ensureChannelBlackOrdersIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          channelBlackOrders_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders>(channelBlackOrders_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder> channelBlackOrdersBuilder_;

      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders> getChannelBlackOrdersList() {
        if (channelBlackOrdersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channelBlackOrders_);
        } else {
          return channelBlackOrdersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public int getChannelBlackOrdersCount() {
        if (channelBlackOrdersBuilder_ == null) {
          return channelBlackOrders_.size();
        } else {
          return channelBlackOrdersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders getChannelBlackOrders(int index) {
        if (channelBlackOrdersBuilder_ == null) {
          return channelBlackOrders_.get(index);
        } else {
          return channelBlackOrdersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder setChannelBlackOrders(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders value) {
        if (channelBlackOrdersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelBlackOrdersIsMutable();
          channelBlackOrders_.set(index, value);
          onChanged();
        } else {
          channelBlackOrdersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder setChannelBlackOrders(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder builderForValue) {
        if (channelBlackOrdersBuilder_ == null) {
          ensureChannelBlackOrdersIsMutable();
          channelBlackOrders_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelBlackOrdersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addChannelBlackOrders(com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders value) {
        if (channelBlackOrdersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelBlackOrdersIsMutable();
          channelBlackOrders_.add(value);
          onChanged();
        } else {
          channelBlackOrdersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addChannelBlackOrders(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders value) {
        if (channelBlackOrdersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelBlackOrdersIsMutable();
          channelBlackOrders_.add(index, value);
          onChanged();
        } else {
          channelBlackOrdersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addChannelBlackOrders(
          com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder builderForValue) {
        if (channelBlackOrdersBuilder_ == null) {
          ensureChannelBlackOrdersIsMutable();
          channelBlackOrders_.add(builderForValue.build());
          onChanged();
        } else {
          channelBlackOrdersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addChannelBlackOrders(
          int index, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder builderForValue) {
        if (channelBlackOrdersBuilder_ == null) {
          ensureChannelBlackOrdersIsMutable();
          channelBlackOrders_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelBlackOrdersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder addAllChannelBlackOrders(
          java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders> values) {
        if (channelBlackOrdersBuilder_ == null) {
          ensureChannelBlackOrdersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channelBlackOrders_);
          onChanged();
        } else {
          channelBlackOrdersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder clearChannelBlackOrders() {
        if (channelBlackOrdersBuilder_ == null) {
          channelBlackOrders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          channelBlackOrdersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder removeChannelBlackOrders(int index) {
        if (channelBlackOrdersBuilder_ == null) {
          ensureChannelBlackOrdersIsMutable();
          channelBlackOrders_.remove(index);
          onChanged();
        } else {
          channelBlackOrdersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder getChannelBlackOrdersBuilder(
          int index) {
        return getChannelBlackOrdersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder getChannelBlackOrdersOrBuilder(
          int index) {
        if (channelBlackOrdersBuilder_ == null) {
          return channelBlackOrders_.get(index);  } else {
          return channelBlackOrdersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder> 
           getChannelBlackOrdersOrBuilderList() {
        if (channelBlackOrdersBuilder_ != null) {
          return channelBlackOrdersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channelBlackOrders_);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder addChannelBlackOrdersBuilder() {
        return getChannelBlackOrdersFieldBuilder().addBuilder(
            com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder addChannelBlackOrdersBuilder(
          int index) {
        return getChannelBlackOrdersFieldBuilder().addBuilder(
            index, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Request.ChannelBlackOrders channel_black_orders = 12;</code>
       *
       * <pre>
       *请求级频道内订单去重(快报去重)，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder> 
           getChannelBlackOrdersBuilderList() {
        return getChannelBlackOrdersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder> 
          getChannelBlackOrdersFieldBuilder() {
        if (channelBlackOrdersBuilder_ == null) {
          channelBlackOrdersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrders.Builder, com.madhouse.media.tencent.GPBForDSP.Request.ChannelBlackOrdersOrBuilder>(
                  channelBlackOrders_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          channelBlackOrders_ = null;
        }
        return channelBlackOrdersBuilder_;
      }

      private boolean isOrderCache_ ;
      /**
       * <code>optional bool is_order_cache = 13;</code>
       *
       * <pre>
       *是否是订单池请求 新闻客户端订单池，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public boolean hasIsOrderCache() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool is_order_cache = 13;</code>
       *
       * <pre>
       *是否是订单池请求 新闻客户端订单池，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public boolean getIsOrderCache() {
        return isOrderCache_;
      }
      /**
       * <code>optional bool is_order_cache = 13;</code>
       *
       * <pre>
       *是否是订单池请求 新闻客户端订单池，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder setIsOrderCache(boolean value) {
        bitField0_ |= 0x00001000;
        isOrderCache_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_order_cache = 13;</code>
       *
       * <pre>
       *是否是订单池请求 新闻客户端订单池，dsp不能再出相同订单（仅rtb）
       * </pre>
       */
      public Builder clearIsOrderCache() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isOrderCache_ = false;
        onChanged();
        return this;
      }

      private boolean isFirstTime_ ;
      /**
       * <code>optional bool is_first_time = 14;</code>
       *
       * <pre>
       *[无效字段]是否冷启动，第一次打开APP
       * </pre>
       */
      public boolean hasIsFirstTime() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool is_first_time = 14;</code>
       *
       * <pre>
       *[无效字段]是否冷启动，第一次打开APP
       * </pre>
       */
      public boolean getIsFirstTime() {
        return isFirstTime_;
      }
      /**
       * <code>optional bool is_first_time = 14;</code>
       *
       * <pre>
       *[无效字段]是否冷启动，第一次打开APP
       * </pre>
       */
      public Builder setIsFirstTime(boolean value) {
        bitField0_ |= 0x00002000;
        isFirstTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_first_time = 14;</code>
       *
       * <pre>
       *[无效字段]是否冷启动，第一次打开APP
       * </pre>
       */
      public Builder clearIsFirstTime() {
        bitField0_ = (bitField0_ & ~0x00002000);
        isFirstTime_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Request)
    }

    static {
      defaultInstance = new Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Request)
  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    boolean hasBidid();
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    java.lang.String getBidid();
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    com.google.protobuf.ByteString
        getBididBytes();

    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.SeatBid> 
        getSeatbidList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Response.SeatBid getSeatbid(int index);
    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    int getSeatbidCount();
    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder> 
        getSeatbidOrBuilderList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder getSeatbidOrBuilder(
        int index);

    /**
     * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
     *
     * <pre>
     *附加信息
     * </pre>
     */
    boolean hasExt();
    /**
     * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
     *
     * <pre>
     *附加信息
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt getExt();
    /**
     * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
     *
     * <pre>
     *附加信息
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExtOrBuilder getExtOrBuilder();
  }
  /**
   * Protobuf type {@code com.madhouse.media.tencent.Response}
   *
   * <pre>
   *审核接口
   * </pre>
   */
  public static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }

    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              bidid_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                seatbid_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Response.SeatBid>();
                mutable_bitField0_ |= 0x00000004;
              }
              seatbid_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = ext_.toBuilder();
              }
              ext_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ext_);
                ext_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          seatbid_ = java.util.Collections.unmodifiableList(seatbid_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.madhouse.media.tencent.GPBForDSP.Response.class, com.madhouse.media.tencent.GPBForDSP.Response.Builder.class);
    }

    public static com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public interface BidResponseExtOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Response.BidResponseExt)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string up_version = 1;</code>
       *
       * <pre>
       *升级版本号
       * </pre>
       */
      boolean hasUpVersion();
      /**
       * <code>optional string up_version = 1;</code>
       *
       * <pre>
       *升级版本号
       * </pre>
       */
      java.lang.String getUpVersion();
      /**
       * <code>optional string up_version = 1;</code>
       *
       * <pre>
       *升级版本号
       * </pre>
       */
      com.google.protobuf.ByteString
          getUpVersionBytes();
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Response.BidResponseExt}
     */
    public static final class BidResponseExt extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Response.BidResponseExt)
        BidResponseExtOrBuilder {
      // Use BidResponseExt.newBuilder() to construct.
      private BidResponseExt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BidResponseExt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BidResponseExt defaultInstance;
      public static BidResponseExt getDefaultInstance() {
        return defaultInstance;
      }

      public BidResponseExt getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BidResponseExt(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                upVersion_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_BidResponseExt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_BidResponseExt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.class, com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.Builder.class);
      }

      public static com.google.protobuf.Parser<BidResponseExt> PARSER =
          new com.google.protobuf.AbstractParser<BidResponseExt>() {
        public BidResponseExt parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BidResponseExt(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BidResponseExt> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int UP_VERSION_FIELD_NUMBER = 1;
      private java.lang.Object upVersion_;
      /**
       * <code>optional string up_version = 1;</code>
       *
       * <pre>
       *升级版本号
       * </pre>
       */
      public boolean hasUpVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string up_version = 1;</code>
       *
       * <pre>
       *升级版本号
       * </pre>
       */
      public java.lang.String getUpVersion() {
        java.lang.Object ref = upVersion_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            upVersion_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string up_version = 1;</code>
       *
       * <pre>
       *升级版本号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUpVersionBytes() {
        java.lang.Object ref = upVersion_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          upVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        upVersion_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getUpVersionBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getUpVersionBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Response.BidResponseExt}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Response.BidResponseExt)
          com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExtOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_BidResponseExt_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_BidResponseExt_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.class, com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          upVersion_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_BidResponseExt_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt build() {
          com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt result = new com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.upVersion_ = upVersion_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.getDefaultInstance()) return this;
          if (other.hasUpVersion()) {
            bitField0_ |= 0x00000001;
            upVersion_ = other.upVersion_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object upVersion_ = "";
        /**
         * <code>optional string up_version = 1;</code>
         *
         * <pre>
         *升级版本号
         * </pre>
         */
        public boolean hasUpVersion() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string up_version = 1;</code>
         *
         * <pre>
         *升级版本号
         * </pre>
         */
        public java.lang.String getUpVersion() {
          java.lang.Object ref = upVersion_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              upVersion_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string up_version = 1;</code>
         *
         * <pre>
         *升级版本号
         * </pre>
         */
        public com.google.protobuf.ByteString
            getUpVersionBytes() {
          java.lang.Object ref = upVersion_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            upVersion_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string up_version = 1;</code>
         *
         * <pre>
         *升级版本号
         * </pre>
         */
        public Builder setUpVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          upVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string up_version = 1;</code>
         *
         * <pre>
         *升级版本号
         * </pre>
         */
        public Builder clearUpVersion() {
          bitField0_ = (bitField0_ & ~0x00000001);
          upVersion_ = getDefaultInstance().getUpVersion();
          onChanged();
          return this;
        }
        /**
         * <code>optional string up_version = 1;</code>
         *
         * <pre>
         *升级版本号
         * </pre>
         */
        public Builder setUpVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          upVersion_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Response.BidResponseExt)
      }

      static {
        defaultInstance = new BidResponseExt(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Response.BidResponseExt)
    }

    public interface BidOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Response.Bid)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      java.lang.String getId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *必填，标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      boolean hasImpid();
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *必填，标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      java.lang.String getImpid();
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *必填，标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      com.google.protobuf.ByteString
          getImpidBytes();

      /**
       * <code>optional float price = 3;</code>
       *
       * <pre>
       *dsp对本次曝光的出价，单位千次曝光分 （仅rtb）
       * </pre>
       */
      boolean hasPrice();
      /**
       * <code>optional float price = 3;</code>
       *
       * <pre>
       *dsp对本次曝光的出价，单位千次曝光分 （仅rtb）
       * </pre>
       */
      float getPrice();

      /**
       * <code>optional string adid = 4;</code>
       *
       * <pre>
       *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
       * </pre>
       */
      boolean hasAdid();
      /**
       * <code>optional string adid = 4;</code>
       *
       * <pre>
       *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
       * </pre>
       */
      java.lang.String getAdid();
      /**
       * <code>optional string adid = 4;</code>
       *
       * <pre>
       *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
       * </pre>
       */
      com.google.protobuf.ByteString
          getAdidBytes();

      /**
       * <code>optional string nurl = 5;</code>
       *
       * <pre>
       *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
       * </pre>
       */
      boolean hasNurl();
      /**
       * <code>optional string nurl = 5;</code>
       *
       * <pre>
       *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
       * </pre>
       */
      java.lang.String getNurl();
      /**
       * <code>optional string nurl = 5;</code>
       *
       * <pre>
       *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
       * </pre>
       */
      com.google.protobuf.ByteString
          getNurlBytes();

      /**
       * <code>optional string adm = 6;</code>
       *
       * <pre>
       *[无效字段]目前不使用 url已失效
       * </pre>
       */
      boolean hasAdm();
      /**
       * <code>optional string adm = 6;</code>
       *
       * <pre>
       *[无效字段]目前不使用 url已失效
       * </pre>
       */
      java.lang.String getAdm();
      /**
       * <code>optional string adm = 6;</code>
       *
       * <pre>
       *[无效字段]目前不使用 url已失效
       * </pre>
       */
      com.google.protobuf.ByteString
          getAdmBytes();

      /**
       * <code>optional string ext = 7;</code>
       *
       * <pre>
       *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      boolean hasExt();
      /**
       * <code>optional string ext = 7;</code>
       *
       * <pre>
       *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      java.lang.String getExt();
      /**
       * <code>optional string ext = 7;</code>
       *
       * <pre>
       *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getExtBytes();

      /**
       * <code>optional string adm_para = 8;</code>
       *
       * <pre>
       *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
       * </pre>
       */
      boolean hasAdmPara();
      /**
       * <code>optional string adm_para = 8;</code>
       *
       * <pre>
       *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
       * </pre>
       */
      java.lang.String getAdmPara();
      /**
       * <code>optional string adm_para = 8;</code>
       *
       * <pre>
       *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
       * </pre>
       */
      com.google.protobuf.ByteString
          getAdmParaBytes();

      /**
       * <code>optional string inner_resp = 9;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      boolean hasInnerResp();
      /**
       * <code>optional string inner_resp = 9;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      java.lang.String getInnerResp();
      /**
       * <code>optional string inner_resp = 9;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      com.google.protobuf.ByteString
          getInnerRespBytes();

      /**
       * <code>optional string ext2 = 10;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      boolean hasExt2();
      /**
       * <code>optional string ext2 = 10;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      java.lang.String getExt2();
      /**
       * <code>optional string ext2 = 10;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getExt2Bytes();

      /**
       * <code>repeated string disp_exts = 11;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getDispExtsList();
      /**
       * <code>repeated string disp_exts = 11;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      int getDispExtsCount();
      /**
       * <code>repeated string disp_exts = 11;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      java.lang.String getDispExts(int index);
      /**
       * <code>repeated string disp_exts = 11;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getDispExtsBytes(int index);

      /**
       * <code>repeated string click_exts = 12;</code>
       *
       * <pre>
       * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getClickExtsList();
      /**
       * <code>repeated string click_exts = 12;</code>
       *
       * <pre>
       * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      int getClickExtsCount();
      /**
       * <code>repeated string click_exts = 12;</code>
       *
       * <pre>
       * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      java.lang.String getClickExts(int index);
      /**
       * <code>repeated string click_exts = 12;</code>
       *
       * <pre>
       * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getClickExtsBytes(int index);

      /**
       * <code>optional string ext3 = 13;</code>
       *
       * <pre>
       * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      boolean hasExt3();
      /**
       * <code>optional string ext3 = 13;</code>
       *
       * <pre>
       * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      java.lang.String getExt3();
      /**
       * <code>optional string ext3 = 13;</code>
       *
       * <pre>
       * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getExt3Bytes();

      /**
       * <code>optional uint32 display_type = 14;</code>
       *
       * <pre>
       * [无效字段]选中广告形式 1:信息流大图 2:原生信息流3:信息流三小图 4:组图最后一帧(免审核使用，免审核协议转换到审核协议时填写) （仅rtb）
       * </pre>
       */
      boolean hasDisplayType();
      /**
       * <code>optional uint32 display_type = 14;</code>
       *
       * <pre>
       * [无效字段]选中广告形式 1:信息流大图 2:原生信息流3:信息流三小图 4:组图最后一帧(免审核使用，免审核协议转换到审核协议时填写) （仅rtb）
       * </pre>
       */
      int getDisplayType();

      /**
       * <code>optional uint32 stype = 15;</code>
       *
       * <pre>
       * [无效字段]凤凰网 1：仅图片（默认）2：仅文字；3：图文（信息流）4：三小图
       * </pre>
       */
      boolean hasStype();
      /**
       * <code>optional uint32 stype = 15;</code>
       *
       * <pre>
       * [无效字段]凤凰网 1：仅图片（默认）2：仅文字；3：图文（信息流）4：三小图
       * </pre>
       */
      int getStype();

      /**
       * <code>optional string dealid = 16;</code>
       *
       * <pre>
       * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
       * </pre>
       */
      boolean hasDealid();
      /**
       * <code>optional string dealid = 16;</code>
       *
       * <pre>
       * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
       * </pre>
       */
      java.lang.String getDealid();
      /**
       * <code>optional string dealid = 16;</code>
       *
       * <pre>
       * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
       * </pre>
       */
      com.google.protobuf.ByteString
          getDealidBytes();
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Response.Bid}
     */
    public static final class Bid extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Response.Bid)
        BidOrBuilder {
      // Use Bid.newBuilder() to construct.
      private Bid(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Bid(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Bid defaultInstance;
      public static Bid getDefaultInstance() {
        return defaultInstance;
      }

      public Bid getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Bid(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                id_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                impid_ = bs;
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                price_ = input.readFloat();
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                adid_ = bs;
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                nurl_ = bs;
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                adm_ = bs;
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                ext_ = bs;
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                admPara_ = bs;
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000100;
                innerResp_ = bs;
                break;
              }
              case 82: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000200;
                ext2_ = bs;
                break;
              }
              case 90: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                  dispExts_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000400;
                }
                dispExts_.add(bs);
                break;
              }
              case 98: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                  clickExts_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000800;
                }
                clickExts_.add(bs);
                break;
              }
              case 106: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000400;
                ext3_ = bs;
                break;
              }
              case 112: {
                bitField0_ |= 0x00000800;
                displayType_ = input.readUInt32();
                break;
              }
              case 120: {
                bitField0_ |= 0x00001000;
                stype_ = input.readUInt32();
                break;
              }
              case 130: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00002000;
                dealid_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
            dispExts_ = dispExts_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
            clickExts_ = clickExts_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_Bid_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_Bid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Response.Bid.class, com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder.class);
      }

      public static com.google.protobuf.Parser<Bid> PARSER =
          new com.google.protobuf.AbstractParser<Bid>() {
        public Bid parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Bid(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Bid> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private java.lang.Object id_;
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IMPID_FIELD_NUMBER = 2;
      private java.lang.Object impid_;
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *必填，标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      public boolean hasImpid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *必填，标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      public java.lang.String getImpid() {
        java.lang.Object ref = impid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            impid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *必填，标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getImpidBytes() {
        java.lang.Object ref = impid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          impid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PRICE_FIELD_NUMBER = 3;
      private float price_;
      /**
       * <code>optional float price = 3;</code>
       *
       * <pre>
       *dsp对本次曝光的出价，单位千次曝光分 （仅rtb）
       * </pre>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float price = 3;</code>
       *
       * <pre>
       *dsp对本次曝光的出价，单位千次曝光分 （仅rtb）
       * </pre>
       */
      public float getPrice() {
        return price_;
      }

      public static final int ADID_FIELD_NUMBER = 4;
      private java.lang.Object adid_;
      /**
       * <code>optional string adid = 4;</code>
       *
       * <pre>
       *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
       * </pre>
       */
      public boolean hasAdid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string adid = 4;</code>
       *
       * <pre>
       *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
       * </pre>
       */
      public java.lang.String getAdid() {
        java.lang.Object ref = adid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            adid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string adid = 4;</code>
       *
       * <pre>
       *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAdidBytes() {
        java.lang.Object ref = adid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          adid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int NURL_FIELD_NUMBER = 5;
      private java.lang.Object nurl_;
      /**
       * <code>optional string nurl = 5;</code>
       *
       * <pre>
       *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
       * </pre>
       */
      public boolean hasNurl() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string nurl = 5;</code>
       *
       * <pre>
       *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
       * </pre>
       */
      public java.lang.String getNurl() {
        java.lang.Object ref = nurl_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nurl_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string nurl = 5;</code>
       *
       * <pre>
       *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNurlBytes() {
        java.lang.Object ref = nurl_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nurl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ADM_FIELD_NUMBER = 6;
      private java.lang.Object adm_;
      /**
       * <code>optional string adm = 6;</code>
       *
       * <pre>
       *[无效字段]目前不使用 url已失效
       * </pre>
       */
      public boolean hasAdm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string adm = 6;</code>
       *
       * <pre>
       *[无效字段]目前不使用 url已失效
       * </pre>
       */
      public java.lang.String getAdm() {
        java.lang.Object ref = adm_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            adm_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string adm = 6;</code>
       *
       * <pre>
       *[无效字段]目前不使用 url已失效
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAdmBytes() {
        java.lang.Object ref = adm_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          adm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EXT_FIELD_NUMBER = 7;
      private java.lang.Object ext_;
      /**
       * <code>optional string ext = 7;</code>
       *
       * <pre>
       *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      public boolean hasExt() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string ext = 7;</code>
       *
       * <pre>
       *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      public java.lang.String getExt() {
        java.lang.Object ref = ext_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ext_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string ext = 7;</code>
       *
       * <pre>
       *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes() {
        java.lang.Object ref = ext_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ext_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ADM_PARA_FIELD_NUMBER = 8;
      private java.lang.Object admPara_;
      /**
       * <code>optional string adm_para = 8;</code>
       *
       * <pre>
       *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
       * </pre>
       */
      public boolean hasAdmPara() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string adm_para = 8;</code>
       *
       * <pre>
       *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
       * </pre>
       */
      public java.lang.String getAdmPara() {
        java.lang.Object ref = admPara_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            admPara_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string adm_para = 8;</code>
       *
       * <pre>
       *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAdmParaBytes() {
        java.lang.Object ref = admPara_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          admPara_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int INNER_RESP_FIELD_NUMBER = 9;
      private java.lang.Object innerResp_;
      /**
       * <code>optional string inner_resp = 9;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      public boolean hasInnerResp() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string inner_resp = 9;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      public java.lang.String getInnerResp() {
        java.lang.Object ref = innerResp_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            innerResp_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string inner_resp = 9;</code>
       *
       * <pre>
       *[无效字段]内部使用
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInnerRespBytes() {
        java.lang.Object ref = innerResp_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          innerResp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EXT2_FIELD_NUMBER = 10;
      private java.lang.Object ext2_;
      /**
       * <code>optional string ext2 = 10;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      public boolean hasExt2() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ext2 = 10;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      public java.lang.String getExt2() {
        java.lang.Object ref = ext2_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ext2_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string ext2 = 10;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExt2Bytes() {
        java.lang.Object ref = ext2_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ext2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DISP_EXTS_FIELD_NUMBER = 11;
      private com.google.protobuf.LazyStringList dispExts_;
      /**
       * <code>repeated string disp_exts = 11;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getDispExtsList() {
        return dispExts_;
      }
      /**
       * <code>repeated string disp_exts = 11;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public int getDispExtsCount() {
        return dispExts_.size();
      }
      /**
       * <code>repeated string disp_exts = 11;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public java.lang.String getDispExts(int index) {
        return dispExts_.get(index);
      }
      /**
       * <code>repeated string disp_exts = 11;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDispExtsBytes(int index) {
        return dispExts_.getByteString(index);
      }

      public static final int CLICK_EXTS_FIELD_NUMBER = 12;
      private com.google.protobuf.LazyStringList clickExts_;
      /**
       * <code>repeated string click_exts = 12;</code>
       *
       * <pre>
       * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getClickExtsList() {
        return clickExts_;
      }
      /**
       * <code>repeated string click_exts = 12;</code>
       *
       * <pre>
       * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public int getClickExtsCount() {
        return clickExts_.size();
      }
      /**
       * <code>repeated string click_exts = 12;</code>
       *
       * <pre>
       * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public java.lang.String getClickExts(int index) {
        return clickExts_.get(index);
      }
      /**
       * <code>repeated string click_exts = 12;</code>
       *
       * <pre>
       * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClickExtsBytes(int index) {
        return clickExts_.getByteString(index);
      }

      public static final int EXT3_FIELD_NUMBER = 13;
      private java.lang.Object ext3_;
      /**
       * <code>optional string ext3 = 13;</code>
       *
       * <pre>
       * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public boolean hasExt3() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string ext3 = 13;</code>
       *
       * <pre>
       * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public java.lang.String getExt3() {
        java.lang.Object ref = ext3_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ext3_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string ext3 = 13;</code>
       *
       * <pre>
       * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExt3Bytes() {
        java.lang.Object ref = ext3_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ext3_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DISPLAY_TYPE_FIELD_NUMBER = 14;
      private int displayType_;
      /**
       * <code>optional uint32 display_type = 14;</code>
       *
       * <pre>
       * [无效字段]选中广告形式 1:信息流大图 2:原生信息流3:信息流三小图 4:组图最后一帧(免审核使用，免审核协议转换到审核协议时填写) （仅rtb）
       * </pre>
       */
      public boolean hasDisplayType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 display_type = 14;</code>
       *
       * <pre>
       * [无效字段]选中广告形式 1:信息流大图 2:原生信息流3:信息流三小图 4:组图最后一帧(免审核使用，免审核协议转换到审核协议时填写) （仅rtb）
       * </pre>
       */
      public int getDisplayType() {
        return displayType_;
      }

      public static final int STYPE_FIELD_NUMBER = 15;
      private int stype_;
      /**
       * <code>optional uint32 stype = 15;</code>
       *
       * <pre>
       * [无效字段]凤凰网 1：仅图片（默认）2：仅文字；3：图文（信息流）4：三小图
       * </pre>
       */
      public boolean hasStype() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 stype = 15;</code>
       *
       * <pre>
       * [无效字段]凤凰网 1：仅图片（默认）2：仅文字；3：图文（信息流）4：三小图
       * </pre>
       */
      public int getStype() {
        return stype_;
      }

      public static final int DEALID_FIELD_NUMBER = 16;
      private java.lang.Object dealid_;
      /**
       * <code>optional string dealid = 16;</code>
       *
       * <pre>
       * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
       * </pre>
       */
      public boolean hasDealid() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string dealid = 16;</code>
       *
       * <pre>
       * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
       * </pre>
       */
      public java.lang.String getDealid() {
        java.lang.Object ref = dealid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dealid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string dealid = 16;</code>
       *
       * <pre>
       * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDealidBytes() {
        java.lang.Object ref = dealid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dealid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        id_ = "";
        impid_ = "";
        price_ = 0F;
        adid_ = "";
        nurl_ = "";
        adm_ = "";
        ext_ = "";
        admPara_ = "";
        innerResp_ = "";
        ext2_ = "";
        dispExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        clickExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        ext3_ = "";
        displayType_ = 0;
        stype_ = 0;
        dealid_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getImpidBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, price_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getAdidBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getNurlBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBytes(6, getAdmBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(7, getExtBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(8, getAdmParaBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBytes(9, getInnerRespBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBytes(10, getExt2Bytes());
        }
        for (int i = 0; i < dispExts_.size(); i++) {
          output.writeBytes(11, dispExts_.getByteString(i));
        }
        for (int i = 0; i < clickExts_.size(); i++) {
          output.writeBytes(12, clickExts_.getByteString(i));
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBytes(13, getExt3Bytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeUInt32(14, displayType_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeUInt32(15, stype_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeBytes(16, getDealidBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getImpidBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, price_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getAdidBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getNurlBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getAdmBytes());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getExtBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(8, getAdmParaBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getInnerRespBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(10, getExt2Bytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < dispExts_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(dispExts_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getDispExtsList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < clickExts_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(clickExts_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getClickExtsList().size();
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(13, getExt3Bytes());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(14, displayType_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(15, stype_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(16, getDealidBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.Bid parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Response.Bid prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Response.Bid}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Response.Bid)
          com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_Bid_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_Bid_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Response.Bid.class, com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Response.Bid.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          impid_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          price_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          adid_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          nurl_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          adm_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          ext_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          admPara_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          innerResp_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          ext2_ = "";
          bitField0_ = (bitField0_ & ~0x00000200);
          dispExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000400);
          clickExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000800);
          ext3_ = "";
          bitField0_ = (bitField0_ & ~0x00001000);
          displayType_ = 0;
          bitField0_ = (bitField0_ & ~0x00002000);
          stype_ = 0;
          bitField0_ = (bitField0_ & ~0x00004000);
          dealid_ = "";
          bitField0_ = (bitField0_ & ~0x00008000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_Bid_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Response.Bid getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Response.Bid.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Response.Bid build() {
          com.madhouse.media.tencent.GPBForDSP.Response.Bid result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Response.Bid buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Response.Bid result = new com.madhouse.media.tencent.GPBForDSP.Response.Bid(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.impid_ = impid_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.price_ = price_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.adid_ = adid_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.nurl_ = nurl_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.adm_ = adm_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.ext_ = ext_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.admPara_ = admPara_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.innerResp_ = innerResp_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.ext2_ = ext2_;
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            dispExts_ = dispExts_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.dispExts_ = dispExts_;
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            clickExts_ = clickExts_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.clickExts_ = clickExts_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00000400;
          }
          result.ext3_ = ext3_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00000800;
          }
          result.displayType_ = displayType_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.stype_ = stype_;
          if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.dealid_ = dealid_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Response.Bid) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Response.Bid)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Response.Bid other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Response.Bid.getDefaultInstance()) return this;
          if (other.hasId()) {
            bitField0_ |= 0x00000001;
            id_ = other.id_;
            onChanged();
          }
          if (other.hasImpid()) {
            bitField0_ |= 0x00000002;
            impid_ = other.impid_;
            onChanged();
          }
          if (other.hasPrice()) {
            setPrice(other.getPrice());
          }
          if (other.hasAdid()) {
            bitField0_ |= 0x00000008;
            adid_ = other.adid_;
            onChanged();
          }
          if (other.hasNurl()) {
            bitField0_ |= 0x00000010;
            nurl_ = other.nurl_;
            onChanged();
          }
          if (other.hasAdm()) {
            bitField0_ |= 0x00000020;
            adm_ = other.adm_;
            onChanged();
          }
          if (other.hasExt()) {
            bitField0_ |= 0x00000040;
            ext_ = other.ext_;
            onChanged();
          }
          if (other.hasAdmPara()) {
            bitField0_ |= 0x00000080;
            admPara_ = other.admPara_;
            onChanged();
          }
          if (other.hasInnerResp()) {
            bitField0_ |= 0x00000100;
            innerResp_ = other.innerResp_;
            onChanged();
          }
          if (other.hasExt2()) {
            bitField0_ |= 0x00000200;
            ext2_ = other.ext2_;
            onChanged();
          }
          if (!other.dispExts_.isEmpty()) {
            if (dispExts_.isEmpty()) {
              dispExts_ = other.dispExts_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureDispExtsIsMutable();
              dispExts_.addAll(other.dispExts_);
            }
            onChanged();
          }
          if (!other.clickExts_.isEmpty()) {
            if (clickExts_.isEmpty()) {
              clickExts_ = other.clickExts_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureClickExtsIsMutable();
              clickExts_.addAll(other.clickExts_);
            }
            onChanged();
          }
          if (other.hasExt3()) {
            bitField0_ |= 0x00001000;
            ext3_ = other.ext3_;
            onChanged();
          }
          if (other.hasDisplayType()) {
            setDisplayType(other.getDisplayType());
          }
          if (other.hasStype()) {
            setStype(other.getStype());
          }
          if (other.hasDealid()) {
            bitField0_ |= 0x00008000;
            dealid_ = other.dealid_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Response.Bid parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Response.Bid) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object id_ = "";
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object impid_ = "";
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *必填，标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public boolean hasImpid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *必填，标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public java.lang.String getImpid() {
          java.lang.Object ref = impid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              impid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *必填，标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public com.google.protobuf.ByteString
            getImpidBytes() {
          java.lang.Object ref = impid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            impid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *必填，标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public Builder setImpid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          impid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *必填，标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public Builder clearImpid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          impid_ = getDefaultInstance().getImpid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *必填，标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public Builder setImpidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          impid_ = value;
          onChanged();
          return this;
        }

        private float price_ ;
        /**
         * <code>optional float price = 3;</code>
         *
         * <pre>
         *dsp对本次曝光的出价，单位千次曝光分 （仅rtb）
         * </pre>
         */
        public boolean hasPrice() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float price = 3;</code>
         *
         * <pre>
         *dsp对本次曝光的出价，单位千次曝光分 （仅rtb）
         * </pre>
         */
        public float getPrice() {
          return price_;
        }
        /**
         * <code>optional float price = 3;</code>
         *
         * <pre>
         *dsp对本次曝光的出价，单位千次曝光分 （仅rtb）
         * </pre>
         */
        public Builder setPrice(float value) {
          bitField0_ |= 0x00000004;
          price_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float price = 3;</code>
         *
         * <pre>
         *dsp对本次曝光的出价，单位千次曝光分 （仅rtb）
         * </pre>
         */
        public Builder clearPrice() {
          bitField0_ = (bitField0_ & ~0x00000004);
          price_ = 0F;
          onChanged();
          return this;
        }

        private java.lang.Object adid_ = "";
        /**
         * <code>optional string adid = 4;</code>
         *
         * <pre>
         *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
         * </pre>
         */
        public boolean hasAdid() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string adid = 4;</code>
         *
         * <pre>
         *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
         * </pre>
         */
        public java.lang.String getAdid() {
          java.lang.Object ref = adid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              adid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string adid = 4;</code>
         *
         * <pre>
         *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAdidBytes() {
          java.lang.Object ref = adid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            adid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string adid = 4;</code>
         *
         * <pre>
         *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
         * </pre>
         */
        public Builder setAdid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          adid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string adid = 4;</code>
         *
         * <pre>
         *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
         * </pre>
         */
        public Builder clearAdid() {
          bitField0_ = (bitField0_ & ~0x00000008);
          adid_ = getDefaultInstance().getAdid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string adid = 4;</code>
         *
         * <pre>
         *广告创意ID或订单ID，跟素材上传api中的dsp_order_id相同
         * </pre>
         */
        public Builder setAdidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          adid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object nurl_ = "";
        /**
         * <code>optional string nurl = 5;</code>
         *
         * <pre>
         *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
         * </pre>
         */
        public boolean hasNurl() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string nurl = 5;</code>
         *
         * <pre>
         *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
         * </pre>
         */
        public java.lang.String getNurl() {
          java.lang.Object ref = nurl_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              nurl_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string nurl = 5;</code>
         *
         * <pre>
         *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNurlBytes() {
          java.lang.Object ref = nurl_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            nurl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string nurl = 5;</code>
         *
         * <pre>
         *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
         * </pre>
         */
        public Builder setNurl(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          nurl_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string nurl = 5;</code>
         *
         * <pre>
         *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
         * </pre>
         */
        public Builder clearNurl() {
          bitField0_ = (bitField0_ & ~0x00000010);
          nurl_ = getDefaultInstance().getNurl();
          onChanged();
          return this;
        }
        /**
         * <code>optional string nurl = 5;</code>
         *
         * <pre>
         *[无效字段]win notice url [填充"NoWinNotice"表示不需要winNotice]
         * </pre>
         */
        public Builder setNurlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          nurl_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object adm_ = "";
        /**
         * <code>optional string adm = 6;</code>
         *
         * <pre>
         *[无效字段]目前不使用 url已失效
         * </pre>
         */
        public boolean hasAdm() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string adm = 6;</code>
         *
         * <pre>
         *[无效字段]目前不使用 url已失效
         * </pre>
         */
        public java.lang.String getAdm() {
          java.lang.Object ref = adm_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              adm_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string adm = 6;</code>
         *
         * <pre>
         *[无效字段]目前不使用 url已失效
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAdmBytes() {
          java.lang.Object ref = adm_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            adm_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string adm = 6;</code>
         *
         * <pre>
         *[无效字段]目前不使用 url已失效
         * </pre>
         */
        public Builder setAdm(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          adm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string adm = 6;</code>
         *
         * <pre>
         *[无效字段]目前不使用 url已失效
         * </pre>
         */
        public Builder clearAdm() {
          bitField0_ = (bitField0_ & ~0x00000020);
          adm_ = getDefaultInstance().getAdm();
          onChanged();
          return this;
        }
        /**
         * <code>optional string adm = 6;</code>
         *
         * <pre>
         *[无效字段]目前不使用 url已失效
         * </pre>
         */
        public Builder setAdmBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          adm_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object ext_ = "";
        /**
         * <code>optional string ext = 7;</code>
         *
         * <pre>
         *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public boolean hasExt() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string ext = 7;</code>
         *
         * <pre>
         *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public java.lang.String getExt() {
          java.lang.Object ref = ext_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              ext_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ext = 7;</code>
         *
         * <pre>
         *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getExtBytes() {
          java.lang.Object ref = ext_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ext_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ext = 7;</code>
         *
         * <pre>
         *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public Builder setExt(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          ext_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ext = 7;</code>
         *
         * <pre>
         *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public Builder clearExt() {
          bitField0_ = (bitField0_ & ~0x00000040);
          ext_ = getDefaultInstance().getExt();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ext = 7;</code>
         *
         * <pre>
         *替换曝光监测和点击落地页和点击检测中的宏${EXT}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public Builder setExtBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          ext_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object admPara_ = "";
        /**
         * <code>optional string adm_para = 8;</code>
         *
         * <pre>
         *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
         * </pre>
         */
        public boolean hasAdmPara() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string adm_para = 8;</code>
         *
         * <pre>
         *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
         * </pre>
         */
        public java.lang.String getAdmPara() {
          java.lang.Object ref = admPara_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              admPara_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string adm_para = 8;</code>
         *
         * <pre>
         *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAdmParaBytes() {
          java.lang.Object ref = admPara_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            admPara_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string adm_para = 8;</code>
         *
         * <pre>
         *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
         * </pre>
         */
        public Builder setAdmPara(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          admPara_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string adm_para = 8;</code>
         *
         * <pre>
         *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
         * </pre>
         */
        public Builder clearAdmPara() {
          bitField0_ = (bitField0_ & ~0x00000080);
          admPara_ = getDefaultInstance().getAdmPara();
          onChanged();
          return this;
        }
        /**
         * <code>optional string adm_para = 8;</code>
         *
         * <pre>
         *[无效字段]传递给adm的参数列表字符串,如 http://creative.dsp.mediav.com/aa.html?cid=xxxx&amp;pid=xxxx  该字段填充'?'后的部分,不包括问号，动态素材(html素材)的参数
         * </pre>
         */
        public Builder setAdmParaBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          admPara_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object innerResp_ = "";
        /**
         * <code>optional string inner_resp = 9;</code>
         *
         * <pre>
         *[无效字段]内部使用
         * </pre>
         */
        public boolean hasInnerResp() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string inner_resp = 9;</code>
         *
         * <pre>
         *[无效字段]内部使用
         * </pre>
         */
        public java.lang.String getInnerResp() {
          java.lang.Object ref = innerResp_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              innerResp_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string inner_resp = 9;</code>
         *
         * <pre>
         *[无效字段]内部使用
         * </pre>
         */
        public com.google.protobuf.ByteString
            getInnerRespBytes() {
          java.lang.Object ref = innerResp_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            innerResp_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string inner_resp = 9;</code>
         *
         * <pre>
         *[无效字段]内部使用
         * </pre>
         */
        public Builder setInnerResp(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          innerResp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string inner_resp = 9;</code>
         *
         * <pre>
         *[无效字段]内部使用
         * </pre>
         */
        public Builder clearInnerResp() {
          bitField0_ = (bitField0_ & ~0x00000100);
          innerResp_ = getDefaultInstance().getInnerResp();
          onChanged();
          return this;
        }
        /**
         * <code>optional string inner_resp = 9;</code>
         *
         * <pre>
         *[无效字段]内部使用
         * </pre>
         */
        public Builder setInnerRespBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          innerResp_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object ext2_ = "";
        /**
         * <code>optional string ext2 = 10;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public boolean hasExt2() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional string ext2 = 10;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public java.lang.String getExt2() {
          java.lang.Object ref = ext2_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              ext2_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ext2 = 10;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getExt2Bytes() {
          java.lang.Object ref = ext2_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ext2_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ext2 = 10;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public Builder setExt2(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          ext2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ext2 = 10;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public Builder clearExt2() {
          bitField0_ = (bitField0_ & ~0x00000200);
          ext2_ = getDefaultInstance().getExt2();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ext2 = 10;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT2}。(base64 encoded preferred，512字节以内) （可不填）
         * </pre>
         */
        public Builder setExt2Bytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          ext2_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList dispExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureDispExtsIsMutable() {
          if (!((bitField0_ & 0x00000400) == 0x00000400)) {
            dispExts_ = new com.google.protobuf.LazyStringArrayList(dispExts_);
            bitField0_ |= 0x00000400;
           }
        }
        /**
         * <code>repeated string disp_exts = 11;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getDispExtsList() {
          return dispExts_.getUnmodifiableView();
        }
        /**
         * <code>repeated string disp_exts = 11;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public int getDispExtsCount() {
          return dispExts_.size();
        }
        /**
         * <code>repeated string disp_exts = 11;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public java.lang.String getDispExts(int index) {
          return dispExts_.get(index);
        }
        /**
         * <code>repeated string disp_exts = 11;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDispExtsBytes(int index) {
          return dispExts_.getByteString(index);
        }
        /**
         * <code>repeated string disp_exts = 11;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder setDispExts(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureDispExtsIsMutable();
          dispExts_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string disp_exts = 11;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder addDispExts(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureDispExtsIsMutable();
          dispExts_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string disp_exts = 11;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder addAllDispExts(
            java.lang.Iterable<java.lang.String> values) {
          ensureDispExtsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dispExts_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string disp_exts = 11;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder clearDispExts() {
          dispExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string disp_exts = 11;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}，(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder addDispExtsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureDispExtsIsMutable();
          dispExts_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList clickExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureClickExtsIsMutable() {
          if (!((bitField0_ & 0x00000800) == 0x00000800)) {
            clickExts_ = new com.google.protobuf.LazyStringArrayList(clickExts_);
            bitField0_ |= 0x00000800;
           }
        }
        /**
         * <code>repeated string click_exts = 12;</code>
         *
         * <pre>
         * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getClickExtsList() {
          return clickExts_.getUnmodifiableView();
        }
        /**
         * <code>repeated string click_exts = 12;</code>
         *
         * <pre>
         * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public int getClickExtsCount() {
          return clickExts_.size();
        }
        /**
         * <code>repeated string click_exts = 12;</code>
         *
         * <pre>
         * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public java.lang.String getClickExts(int index) {
          return clickExts_.get(index);
        }
        /**
         * <code>repeated string click_exts = 12;</code>
         *
         * <pre>
         * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getClickExtsBytes(int index) {
          return clickExts_.getByteString(index);
        }
        /**
         * <code>repeated string click_exts = 12;</code>
         *
         * <pre>
         * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder setClickExts(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureClickExtsIsMutable();
          clickExts_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_exts = 12;</code>
         *
         * <pre>
         * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder addClickExts(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureClickExtsIsMutable();
          clickExts_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_exts = 12;</code>
         *
         * <pre>
         * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder addAllClickExts(
            java.lang.Iterable<java.lang.String> values) {
          ensureClickExtsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, clickExts_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_exts = 12;</code>
         *
         * <pre>
         * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder clearClickExts() {
          clickExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_exts = 12;</code>
         *
         * <pre>
         * click monitor exts ${CLICK_EXT1/2/3} 最多3个 每个(base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder addClickExtsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureClickExtsIsMutable();
          clickExts_.add(value);
          onChanged();
          return this;
        }

        private java.lang.Object ext3_ = "";
        /**
         * <code>optional string ext3 = 13;</code>
         *
         * <pre>
         * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public boolean hasExt3() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional string ext3 = 13;</code>
         *
         * <pre>
         * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public java.lang.String getExt3() {
          java.lang.Object ref = ext3_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              ext3_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ext3 = 13;</code>
         *
         * <pre>
         * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getExt3Bytes() {
          java.lang.Object ref = ext3_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ext3_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ext3 = 13;</code>
         *
         * <pre>
         * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder setExt3(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
          ext3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ext3 = 13;</code>
         *
         * <pre>
         * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder clearExt3() {
          bitField0_ = (bitField0_ & ~0x00001000);
          ext3_ = getDefaultInstance().getExt3();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ext3 = 13;</code>
         *
         * <pre>
         * 替换曝光监测、点击落地页和点击监测中的宏${EXT3} (base64 encoded preferred，512字节以内)（可不填）
         * </pre>
         */
        public Builder setExt3Bytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
          ext3_ = value;
          onChanged();
          return this;
        }

        private int displayType_ ;
        /**
         * <code>optional uint32 display_type = 14;</code>
         *
         * <pre>
         * [无效字段]选中广告形式 1:信息流大图 2:原生信息流3:信息流三小图 4:组图最后一帧(免审核使用，免审核协议转换到审核协议时填写) （仅rtb）
         * </pre>
         */
        public boolean hasDisplayType() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional uint32 display_type = 14;</code>
         *
         * <pre>
         * [无效字段]选中广告形式 1:信息流大图 2:原生信息流3:信息流三小图 4:组图最后一帧(免审核使用，免审核协议转换到审核协议时填写) （仅rtb）
         * </pre>
         */
        public int getDisplayType() {
          return displayType_;
        }
        /**
         * <code>optional uint32 display_type = 14;</code>
         *
         * <pre>
         * [无效字段]选中广告形式 1:信息流大图 2:原生信息流3:信息流三小图 4:组图最后一帧(免审核使用，免审核协议转换到审核协议时填写) （仅rtb）
         * </pre>
         */
        public Builder setDisplayType(int value) {
          bitField0_ |= 0x00002000;
          displayType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 display_type = 14;</code>
         *
         * <pre>
         * [无效字段]选中广告形式 1:信息流大图 2:原生信息流3:信息流三小图 4:组图最后一帧(免审核使用，免审核协议转换到审核协议时填写) （仅rtb）
         * </pre>
         */
        public Builder clearDisplayType() {
          bitField0_ = (bitField0_ & ~0x00002000);
          displayType_ = 0;
          onChanged();
          return this;
        }

        private int stype_ ;
        /**
         * <code>optional uint32 stype = 15;</code>
         *
         * <pre>
         * [无效字段]凤凰网 1：仅图片（默认）2：仅文字；3：图文（信息流）4：三小图
         * </pre>
         */
        public boolean hasStype() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional uint32 stype = 15;</code>
         *
         * <pre>
         * [无效字段]凤凰网 1：仅图片（默认）2：仅文字；3：图文（信息流）4：三小图
         * </pre>
         */
        public int getStype() {
          return stype_;
        }
        /**
         * <code>optional uint32 stype = 15;</code>
         *
         * <pre>
         * [无效字段]凤凰网 1：仅图片（默认）2：仅文字；3：图文（信息流）4：三小图
         * </pre>
         */
        public Builder setStype(int value) {
          bitField0_ |= 0x00004000;
          stype_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 stype = 15;</code>
         *
         * <pre>
         * [无效字段]凤凰网 1：仅图片（默认）2：仅文字；3：图文（信息流）4：三小图
         * </pre>
         */
        public Builder clearStype() {
          bitField0_ = (bitField0_ & ~0x00004000);
          stype_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object dealid_ = "";
        /**
         * <code>optional string dealid = 16;</code>
         *
         * <pre>
         * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
         * </pre>
         */
        public boolean hasDealid() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional string dealid = 16;</code>
         *
         * <pre>
         * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
         * </pre>
         */
        public java.lang.String getDealid() {
          java.lang.Object ref = dealid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              dealid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string dealid = 16;</code>
         *
         * <pre>
         * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDealidBytes() {
          java.lang.Object ref = dealid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dealid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string dealid = 16;</code>
         *
         * <pre>
         * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
         * </pre>
         */
        public Builder setDealid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
          dealid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string dealid = 16;</code>
         *
         * <pre>
         * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
         * </pre>
         */
        public Builder clearDealid() {
          bitField0_ = (bitField0_ & ~0x00008000);
          dealid_ = getDefaultInstance().getDealid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string dealid = 16;</code>
         *
         * <pre>
         * [无效字段]指定选中订单，如果为空，则默认为Request中的主选订单（仅pd&amp;pdb）
         * </pre>
         */
        public Builder setDealidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
          dealid_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Response.Bid)
      }

      static {
        defaultInstance = new Bid(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Response.Bid)
    }

    public interface SeatBidOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Response.SeatBid)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.Bid> 
          getBidList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Response.Bid getBid(int index);
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      int getBidCount();
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder> 
          getBidOrBuilderList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder getBidOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Response.SeatBid}
     */
    public static final class SeatBid extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Response.SeatBid)
        SeatBidOrBuilder {
      // Use SeatBid.newBuilder() to construct.
      private SeatBid(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SeatBid(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SeatBid defaultInstance;
      public static SeatBid getDefaultInstance() {
        return defaultInstance;
      }

      public SeatBid getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SeatBid(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  bid_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Response.Bid>();
                  mutable_bitField0_ |= 0x00000001;
                }
                bid_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Response.Bid.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            bid_ = java.util.Collections.unmodifiableList(bid_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_SeatBid_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_SeatBid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.class, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder.class);
      }

      public static com.google.protobuf.Parser<SeatBid> PARSER =
          new com.google.protobuf.AbstractParser<SeatBid>() {
        public SeatBid parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SeatBid(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SeatBid> getParserForType() {
        return PARSER;
      }

      public static final int BID_FIELD_NUMBER = 1;
      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.Bid> bid_;
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.Bid> getBidList() {
        return bid_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder> 
          getBidOrBuilderList() {
        return bid_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public int getBidCount() {
        return bid_.size();
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.Bid getBid(int index) {
        return bid_.get(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder getBidOrBuilder(
          int index) {
        return bid_.get(index);
      }

      private void initFields() {
        bid_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < bid_.size(); i++) {
          output.writeMessage(1, bid_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < bid_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, bid_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Response.SeatBid prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Response.SeatBid}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Response.SeatBid)
          com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_SeatBid_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_SeatBid_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.class, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getBidFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (bidBuilder_ == null) {
            bid_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            bidBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_SeatBid_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Response.SeatBid getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Response.SeatBid build() {
          com.madhouse.media.tencent.GPBForDSP.Response.SeatBid result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Response.SeatBid buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Response.SeatBid result = new com.madhouse.media.tencent.GPBForDSP.Response.SeatBid(this);
          int from_bitField0_ = bitField0_;
          if (bidBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              bid_ = java.util.Collections.unmodifiableList(bid_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.bid_ = bid_;
          } else {
            result.bid_ = bidBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Response.SeatBid) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Response.SeatBid)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Response.SeatBid other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.getDefaultInstance()) return this;
          if (bidBuilder_ == null) {
            if (!other.bid_.isEmpty()) {
              if (bid_.isEmpty()) {
                bid_ = other.bid_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureBidIsMutable();
                bid_.addAll(other.bid_);
              }
              onChanged();
            }
          } else {
            if (!other.bid_.isEmpty()) {
              if (bidBuilder_.isEmpty()) {
                bidBuilder_.dispose();
                bidBuilder_ = null;
                bid_ = other.bid_;
                bitField0_ = (bitField0_ & ~0x00000001);
                bidBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBidFieldBuilder() : null;
              } else {
                bidBuilder_.addAllMessages(other.bid_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Response.SeatBid parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Response.SeatBid) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.Bid> bid_ =
          java.util.Collections.emptyList();
        private void ensureBidIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            bid_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Response.Bid>(bid_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Response.Bid, com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder, com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder> bidBuilder_;

        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.Bid> getBidList() {
          if (bidBuilder_ == null) {
            return java.util.Collections.unmodifiableList(bid_);
          } else {
            return bidBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public int getBidCount() {
          if (bidBuilder_ == null) {
            return bid_.size();
          } else {
            return bidBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Response.Bid getBid(int index) {
          if (bidBuilder_ == null) {
            return bid_.get(index);
          } else {
            return bidBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder setBid(
            int index, com.madhouse.media.tencent.GPBForDSP.Response.Bid value) {
          if (bidBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBidIsMutable();
            bid_.set(index, value);
            onChanged();
          } else {
            bidBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder setBid(
            int index, com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder builderForValue) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            bid_.set(index, builderForValue.build());
            onChanged();
          } else {
            bidBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addBid(com.madhouse.media.tencent.GPBForDSP.Response.Bid value) {
          if (bidBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBidIsMutable();
            bid_.add(value);
            onChanged();
          } else {
            bidBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addBid(
            int index, com.madhouse.media.tencent.GPBForDSP.Response.Bid value) {
          if (bidBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBidIsMutable();
            bid_.add(index, value);
            onChanged();
          } else {
            bidBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addBid(
            com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder builderForValue) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            bid_.add(builderForValue.build());
            onChanged();
          } else {
            bidBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addBid(
            int index, com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder builderForValue) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            bid_.add(index, builderForValue.build());
            onChanged();
          } else {
            bidBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addAllBid(
            java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Response.Bid> values) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, bid_);
            onChanged();
          } else {
            bidBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder clearBid() {
          if (bidBuilder_ == null) {
            bid_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            bidBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder removeBid(int index) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            bid_.remove(index);
            onChanged();
          } else {
            bidBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder getBidBuilder(
            int index) {
          return getBidFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder getBidOrBuilder(
            int index) {
          if (bidBuilder_ == null) {
            return bid_.get(index);  } else {
            return bidBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder> 
             getBidOrBuilderList() {
          if (bidBuilder_ != null) {
            return bidBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(bid_);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder addBidBuilder() {
          return getBidFieldBuilder().addBuilder(
              com.madhouse.media.tencent.GPBForDSP.Response.Bid.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder addBidBuilder(
            int index) {
          return getBidFieldBuilder().addBuilder(
              index, com.madhouse.media.tencent.GPBForDSP.Response.Bid.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder> 
             getBidBuilderList() {
          return getBidFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Response.Bid, com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder, com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder> 
            getBidFieldBuilder() {
          if (bidBuilder_ == null) {
            bidBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Response.Bid, com.madhouse.media.tencent.GPBForDSP.Response.Bid.Builder, com.madhouse.media.tencent.GPBForDSP.Response.BidOrBuilder>(
                    bid_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            bid_ = null;
          }
          return bidBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Response.SeatBid)
      }

      static {
        defaultInstance = new SeatBid(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Response.SeatBid)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BIDID_FIELD_NUMBER = 2;
    private java.lang.Object bidid_;
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    public boolean hasBidid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    public java.lang.String getBidid() {
      java.lang.Object ref = bidid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bidid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBididBytes() {
      java.lang.Object ref = bidid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bidid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEATBID_FIELD_NUMBER = 3;
    private java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.SeatBid> seatbid_;
    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    public java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.SeatBid> getSeatbidList() {
      return seatbid_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder> 
        getSeatbidOrBuilderList() {
      return seatbid_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    public int getSeatbidCount() {
      return seatbid_.size();
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Response.SeatBid getSeatbid(int index) {
      return seatbid_.get(index);
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder getSeatbidOrBuilder(
        int index) {
      return seatbid_.get(index);
    }

    public static final int EXT_FIELD_NUMBER = 4;
    private com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt ext_;
    /**
     * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
     *
     * <pre>
     *附加信息
     * </pre>
     */
    public boolean hasExt() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
     *
     * <pre>
     *附加信息
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt getExt() {
      return ext_;
    }
    /**
     * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
     *
     * <pre>
     *附加信息
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExtOrBuilder getExtOrBuilder() {
      return ext_;
    }

    private void initFields() {
      id_ = "";
      bidid_ = "";
      seatbid_ = java.util.Collections.emptyList();
      ext_ = com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBididBytes());
      }
      for (int i = 0; i < seatbid_.size(); i++) {
        output.writeMessage(3, seatbid_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, ext_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBididBytes());
      }
      for (int i = 0; i < seatbid_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, seatbid_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, ext_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.madhouse.media.tencent.GPBForDSP.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Response}
     *
     * <pre>
     *审核接口
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Response)
        com.madhouse.media.tencent.GPBForDSP.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Response.class, com.madhouse.media.tencent.GPBForDSP.Response.Builder.class);
      }

      // Construct using com.madhouse.media.tencent.GPBForDSP.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSeatbidFieldBuilder();
          getExtFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        bidid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (seatbidBuilder_ == null) {
          seatbid_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          seatbidBuilder_.clear();
        }
        if (extBuilder_ == null) {
          ext_ = com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.getDefaultInstance();
        } else {
          extBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Response_descriptor;
      }

      public com.madhouse.media.tencent.GPBForDSP.Response getDefaultInstanceForType() {
        return com.madhouse.media.tencent.GPBForDSP.Response.getDefaultInstance();
      }

      public com.madhouse.media.tencent.GPBForDSP.Response build() {
        com.madhouse.media.tencent.GPBForDSP.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.madhouse.media.tencent.GPBForDSP.Response buildPartial() {
        com.madhouse.media.tencent.GPBForDSP.Response result = new com.madhouse.media.tencent.GPBForDSP.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bidid_ = bidid_;
        if (seatbidBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            seatbid_ = java.util.Collections.unmodifiableList(seatbid_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.seatbid_ = seatbid_;
        } else {
          result.seatbid_ = seatbidBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (extBuilder_ == null) {
          result.ext_ = ext_;
        } else {
          result.ext_ = extBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.madhouse.media.tencent.GPBForDSP.Response) {
          return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Response other) {
        if (other == com.madhouse.media.tencent.GPBForDSP.Response.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasBidid()) {
          bitField0_ |= 0x00000002;
          bidid_ = other.bidid_;
          onChanged();
        }
        if (seatbidBuilder_ == null) {
          if (!other.seatbid_.isEmpty()) {
            if (seatbid_.isEmpty()) {
              seatbid_ = other.seatbid_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSeatbidIsMutable();
              seatbid_.addAll(other.seatbid_);
            }
            onChanged();
          }
        } else {
          if (!other.seatbid_.isEmpty()) {
            if (seatbidBuilder_.isEmpty()) {
              seatbidBuilder_.dispose();
              seatbidBuilder_ = null;
              seatbid_ = other.seatbid_;
              bitField0_ = (bitField0_ & ~0x00000004);
              seatbidBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSeatbidFieldBuilder() : null;
            } else {
              seatbidBuilder_.addAllMessages(other.seatbid_);
            }
          }
        }
        if (other.hasExt()) {
          mergeExt(other.getExt());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.madhouse.media.tencent.GPBForDSP.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object bidid_ = "";
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public boolean hasBidid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public java.lang.String getBidid() {
        java.lang.Object ref = bidid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            bidid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBididBytes() {
        java.lang.Object ref = bidid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bidid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public Builder setBidid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bidid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public Builder clearBidid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bidid_ = getDefaultInstance().getBidid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public Builder setBididBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bidid_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.SeatBid> seatbid_ =
        java.util.Collections.emptyList();
      private void ensureSeatbidIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          seatbid_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Response.SeatBid>(seatbid_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Response.SeatBid, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder, com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder> seatbidBuilder_;

      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.SeatBid> getSeatbidList() {
        if (seatbidBuilder_ == null) {
          return java.util.Collections.unmodifiableList(seatbid_);
        } else {
          return seatbidBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public int getSeatbidCount() {
        if (seatbidBuilder_ == null) {
          return seatbid_.size();
        } else {
          return seatbidBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.SeatBid getSeatbid(int index) {
        if (seatbidBuilder_ == null) {
          return seatbid_.get(index);
        } else {
          return seatbidBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public Builder setSeatbid(
          int index, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid value) {
        if (seatbidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatbidIsMutable();
          seatbid_.set(index, value);
          onChanged();
        } else {
          seatbidBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public Builder setSeatbid(
          int index, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder builderForValue) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          seatbid_.set(index, builderForValue.build());
          onChanged();
        } else {
          seatbidBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public Builder addSeatbid(com.madhouse.media.tencent.GPBForDSP.Response.SeatBid value) {
        if (seatbidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatbidIsMutable();
          seatbid_.add(value);
          onChanged();
        } else {
          seatbidBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public Builder addSeatbid(
          int index, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid value) {
        if (seatbidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatbidIsMutable();
          seatbid_.add(index, value);
          onChanged();
        } else {
          seatbidBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public Builder addSeatbid(
          com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder builderForValue) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          seatbid_.add(builderForValue.build());
          onChanged();
        } else {
          seatbidBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public Builder addSeatbid(
          int index, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder builderForValue) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          seatbid_.add(index, builderForValue.build());
          onChanged();
        } else {
          seatbidBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public Builder addAllSeatbid(
          java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Response.SeatBid> values) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, seatbid_);
          onChanged();
        } else {
          seatbidBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public Builder clearSeatbid() {
        if (seatbidBuilder_ == null) {
          seatbid_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          seatbidBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public Builder removeSeatbid(int index) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          seatbid_.remove(index);
          onChanged();
        } else {
          seatbidBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder getSeatbidBuilder(
          int index) {
        return getSeatbidFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder getSeatbidOrBuilder(
          int index) {
        if (seatbidBuilder_ == null) {
          return seatbid_.get(index);  } else {
          return seatbidBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder> 
           getSeatbidOrBuilderList() {
        if (seatbidBuilder_ != null) {
          return seatbidBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(seatbid_);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder addSeatbidBuilder() {
        return getSeatbidFieldBuilder().addBuilder(
            com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder addSeatbidBuilder(
          int index) {
        return getSeatbidFieldBuilder().addBuilder(
            index, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息，目前只支持将回复结果设置在seatbid[0]； 这里填写dsp出单的具体内容
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder> 
           getSeatbidBuilderList() {
        return getSeatbidFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Response.SeatBid, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder, com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder> 
          getSeatbidFieldBuilder() {
        if (seatbidBuilder_ == null) {
          seatbidBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Response.SeatBid, com.madhouse.media.tencent.GPBForDSP.Response.SeatBid.Builder, com.madhouse.media.tencent.GPBForDSP.Response.SeatBidOrBuilder>(
                  seatbid_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          seatbid_ = null;
        }
        return seatbidBuilder_;
      }

      private com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt ext_ = com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt, com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.Builder, com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExtOrBuilder> extBuilder_;
      /**
       * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
       *
       * <pre>
       *附加信息
       * </pre>
       */
      public boolean hasExt() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
       *
       * <pre>
       *附加信息
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt getExt() {
        if (extBuilder_ == null) {
          return ext_;
        } else {
          return extBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
       *
       * <pre>
       *附加信息
       * </pre>
       */
      public Builder setExt(com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt value) {
        if (extBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ext_ = value;
          onChanged();
        } else {
          extBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
       *
       * <pre>
       *附加信息
       * </pre>
       */
      public Builder setExt(
          com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.Builder builderForValue) {
        if (extBuilder_ == null) {
          ext_ = builderForValue.build();
          onChanged();
        } else {
          extBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
       *
       * <pre>
       *附加信息
       * </pre>
       */
      public Builder mergeExt(com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt value) {
        if (extBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              ext_ != com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.getDefaultInstance()) {
            ext_ =
              com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.newBuilder(ext_).mergeFrom(value).buildPartial();
          } else {
            ext_ = value;
          }
          onChanged();
        } else {
          extBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
       *
       * <pre>
       *附加信息
       * </pre>
       */
      public Builder clearExt() {
        if (extBuilder_ == null) {
          ext_ = com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.getDefaultInstance();
          onChanged();
        } else {
          extBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
       *
       * <pre>
       *附加信息
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.Builder getExtBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getExtFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
       *
       * <pre>
       *附加信息
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExtOrBuilder getExtOrBuilder() {
        if (extBuilder_ != null) {
          return extBuilder_.getMessageOrBuilder();
        } else {
          return ext_;
        }
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Response.BidResponseExt ext = 4;</code>
       *
       * <pre>
       *附加信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt, com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.Builder, com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExtOrBuilder> 
          getExtFieldBuilder() {
        if (extBuilder_ == null) {
          extBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt, com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExt.Builder, com.madhouse.media.tencent.GPBForDSP.Response.BidResponseExtOrBuilder>(
                  getExt(),
                  getParentForChildren(),
                  isClean());
          ext_ = null;
        }
        return extBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Response)
    }

    static {
      defaultInstance = new Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Response)
  }

  public interface Direct_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Direct_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    boolean hasBidid();
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    java.lang.String getBidid();
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    com.google.protobuf.ByteString
        getBididBytes();

    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid> 
        getSeatbidList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid getSeatbid(int index);
    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    int getSeatbidCount();
    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder> 
        getSeatbidOrBuilderList();
    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder getSeatbidOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.madhouse.media.tencent.Direct_Response}
   *
   * <pre>
   *免审核接口
   * </pre>
   */
  public static final class Direct_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Direct_Response)
      Direct_ResponseOrBuilder {
    // Use Direct_Response.newBuilder() to construct.
    private Direct_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Direct_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Direct_Response defaultInstance;
    public static Direct_Response getDefaultInstance() {
      return defaultInstance;
    }

    public Direct_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Direct_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              bidid_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                seatbid_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid>();
                mutable_bitField0_ |= 0x00000004;
              }
              seatbid_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          seatbid_ = java.util.Collections.unmodifiableList(seatbid_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.madhouse.media.tencent.GPBForDSP.Direct_Response.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<Direct_Response> PARSER =
        new com.google.protobuf.AbstractParser<Direct_Response>() {
      public Direct_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Direct_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Direct_Response> getParserForType() {
      return PARSER;
    }

    public interface MaterialInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Direct_Response.MaterialInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
       * </pre>
       */
      boolean hasContent();
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
       * </pre>
       */
      java.lang.String getContent();
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
       * </pre>
       */
      com.google.protobuf.ByteString
          getContentBytes();

      /**
       * <code>optional string format = 2;</code>
       *
       * <pre>
       *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
       * </pre>
       */
      boolean hasFormat();
      /**
       * <code>optional string format = 2;</code>
       *
       * <pre>
       *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
       * </pre>
       */
      java.lang.String getFormat();
      /**
       * <code>optional string format = 2;</code>
       *
       * <pre>
       *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
       * </pre>
       */
      com.google.protobuf.ByteString
          getFormatBytes();
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Direct_Response.MaterialInfo}
     */
    public static final class MaterialInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Direct_Response.MaterialInfo)
        MaterialInfoOrBuilder {
      // Use MaterialInfo.newBuilder() to construct.
      private MaterialInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private MaterialInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final MaterialInfo defaultInstance;
      public static MaterialInfo getDefaultInstance() {
        return defaultInstance;
      }

      public MaterialInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private MaterialInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                content_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                format_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<MaterialInfo> PARSER =
          new com.google.protobuf.AbstractParser<MaterialInfo>() {
        public MaterialInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MaterialInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<MaterialInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CONTENT_FIELD_NUMBER = 1;
      private java.lang.Object content_;
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
       * </pre>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            content_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FORMAT_FIELD_NUMBER = 2;
      private java.lang.Object format_;
      /**
       * <code>optional string format = 2;</code>
       *
       * <pre>
       *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
       * </pre>
       */
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string format = 2;</code>
       *
       * <pre>
       *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
       * </pre>
       */
      public java.lang.String getFormat() {
        java.lang.Object ref = format_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            format_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string format = 2;</code>
       *
       * <pre>
       *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFormatBytes() {
        java.lang.Object ref = format_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          format_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        content_ = "";
        format_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getContentBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getFormatBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getContentBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getFormatBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Direct_Response.MaterialInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Direct_Response.MaterialInfo)
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          content_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          format_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo build() {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo result = new com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.content_ = content_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.format_ = format_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.getDefaultInstance()) return this;
          if (other.hasContent()) {
            bitField0_ |= 0x00000001;
            content_ = other.content_;
            onChanged();
          }
          if (other.hasFormat()) {
            bitField0_ |= 0x00000002;
            format_ = other.format_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object content_ = "";
        /**
         * <code>optional string content = 1;</code>
         *
         * <pre>
         *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
         * </pre>
         */
        public boolean hasContent() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string content = 1;</code>
         *
         * <pre>
         *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
         * </pre>
         */
        public java.lang.String getContent() {
          java.lang.Object ref = content_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              content_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string content = 1;</code>
         *
         * <pre>
         *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
         * </pre>
         */
        public com.google.protobuf.ByteString
            getContentBytes() {
          java.lang.Object ref = content_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            content_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string content = 1;</code>
         *
         * <pre>
         *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
         * </pre>
         */
        public Builder setContent(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          content_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string content = 1;</code>
         *
         * <pre>
         *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
         * </pre>
         */
        public Builder clearContent() {
          bitField0_ = (bitField0_ & ~0x00000001);
          content_ = getDefaultInstance().getContent();
          onChanged();
          return this;
        }
        /**
         * <code>optional string content = 1;</code>
         *
         * <pre>
         *如果是format为txt，则content为utf-8编码的字符串；其他format为文件url	
         * </pre>
         */
        public Builder setContentBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          content_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object format_ = "";
        /**
         * <code>optional string format = 2;</code>
         *
         * <pre>
         *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
         * </pre>
         */
        public boolean hasFormat() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string format = 2;</code>
         *
         * <pre>
         *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
         * </pre>
         */
        public java.lang.String getFormat() {
          java.lang.Object ref = format_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              format_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string format = 2;</code>
         *
         * <pre>
         *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getFormatBytes() {
          java.lang.Object ref = format_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            format_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string format = 2;</code>
         *
         * <pre>
         *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
         * </pre>
         */
        public Builder setFormat(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          format_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string format = 2;</code>
         *
         * <pre>
         *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
         * </pre>
         */
        public Builder clearFormat() {
          bitField0_ = (bitField0_ & ~0x00000002);
          format_ = getDefaultInstance().getFormat();
          onChanged();
          return this;
        }
        /**
         * <code>optional string format = 2;</code>
         *
         * <pre>
         *素材的格式,文件后缀名，全小写如：jpg,swf,txt(表示文字链) 
         * </pre>
         */
        public Builder setFormatBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          format_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Direct_Response.MaterialInfo)
      }

      static {
        defaultInstance = new MaterialInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Direct_Response.MaterialInfo)
    }

    public interface AppInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Direct_Response.AppInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string pkg_name = 1;</code>
       *
       * <pre>
       *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
       * </pre>
       */
      boolean hasPkgName();
      /**
       * <code>optional string pkg_name = 1;</code>
       *
       * <pre>
       *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
       * </pre>
       */
      java.lang.String getPkgName();
      /**
       * <code>optional string pkg_name = 1;</code>
       *
       * <pre>
       *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
       * </pre>
       */
      com.google.protobuf.ByteString
          getPkgNameBytes();

      /**
       * <code>optional string deep_link = 2;</code>
       *
       * <pre>
       *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
       * </pre>
       */
      boolean hasDeepLink();
      /**
       * <code>optional string deep_link = 2;</code>
       *
       * <pre>
       *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
       * </pre>
       */
      java.lang.String getDeepLink();
      /**
       * <code>optional string deep_link = 2;</code>
       *
       * <pre>
       *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
       * </pre>
       */
      com.google.protobuf.ByteString
          getDeepLinkBytes();

      /**
       * <code>optional string down_load_url = 3;</code>
       *
       * <pre>
       *通用结构如scheme://host/path?query [application]+[openURL]+[options]
       * </pre>
       */
      boolean hasDownLoadUrl();
      /**
       * <code>optional string down_load_url = 3;</code>
       *
       * <pre>
       *通用结构如scheme://host/path?query [application]+[openURL]+[options]
       * </pre>
       */
      java.lang.String getDownLoadUrl();
      /**
       * <code>optional string down_load_url = 3;</code>
       *
       * <pre>
       *通用结构如scheme://host/path?query [application]+[openURL]+[options]
       * </pre>
       */
      com.google.protobuf.ByteString
          getDownLoadUrlBytes();

      /**
       * <code>optional string app_name = 4;</code>
       *
       * <pre>
       * app name for android（仅android含有本字段）
       * </pre>
       */
      boolean hasAppName();
      /**
       * <code>optional string app_name = 4;</code>
       *
       * <pre>
       * app name for android（仅android含有本字段）
       * </pre>
       */
      java.lang.String getAppName();
      /**
       * <code>optional string app_name = 4;</code>
       *
       * <pre>
       * app name for android（仅android含有本字段）
       * </pre>
       */
      com.google.protobuf.ByteString
          getAppNameBytes();
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Direct_Response.AppInfo}
     */
    public static final class AppInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Direct_Response.AppInfo)
        AppInfoOrBuilder {
      // Use AppInfo.newBuilder() to construct.
      private AppInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private AppInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final AppInfo defaultInstance;
      public static AppInfo getDefaultInstance() {
        return defaultInstance;
      }

      public AppInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private AppInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                pkgName_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                deepLink_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                downLoadUrl_ = bs;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                appName_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<AppInfo> PARSER =
          new com.google.protobuf.AbstractParser<AppInfo>() {
        public AppInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AppInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<AppInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int PKG_NAME_FIELD_NUMBER = 1;
      private java.lang.Object pkgName_;
      /**
       * <code>optional string pkg_name = 1;</code>
       *
       * <pre>
       *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
       * </pre>
       */
      public boolean hasPkgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string pkg_name = 1;</code>
       *
       * <pre>
       *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
       * </pre>
       */
      public java.lang.String getPkgName() {
        java.lang.Object ref = pkgName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pkgName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string pkg_name = 1;</code>
       *
       * <pre>
       *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPkgNameBytes() {
        java.lang.Object ref = pkgName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pkgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEEP_LINK_FIELD_NUMBER = 2;
      private java.lang.Object deepLink_;
      /**
       * <code>optional string deep_link = 2;</code>
       *
       * <pre>
       *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
       * </pre>
       */
      public boolean hasDeepLink() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string deep_link = 2;</code>
       *
       * <pre>
       *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
       * </pre>
       */
      public java.lang.String getDeepLink() {
        java.lang.Object ref = deepLink_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deepLink_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string deep_link = 2;</code>
       *
       * <pre>
       *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDeepLinkBytes() {
        java.lang.Object ref = deepLink_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deepLink_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DOWN_LOAD_URL_FIELD_NUMBER = 3;
      private java.lang.Object downLoadUrl_;
      /**
       * <code>optional string down_load_url = 3;</code>
       *
       * <pre>
       *通用结构如scheme://host/path?query [application]+[openURL]+[options]
       * </pre>
       */
      public boolean hasDownLoadUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string down_load_url = 3;</code>
       *
       * <pre>
       *通用结构如scheme://host/path?query [application]+[openURL]+[options]
       * </pre>
       */
      public java.lang.String getDownLoadUrl() {
        java.lang.Object ref = downLoadUrl_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            downLoadUrl_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string down_load_url = 3;</code>
       *
       * <pre>
       *通用结构如scheme://host/path?query [application]+[openURL]+[options]
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDownLoadUrlBytes() {
        java.lang.Object ref = downLoadUrl_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          downLoadUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int APP_NAME_FIELD_NUMBER = 4;
      private java.lang.Object appName_;
      /**
       * <code>optional string app_name = 4;</code>
       *
       * <pre>
       * app name for android（仅android含有本字段）
       * </pre>
       */
      public boolean hasAppName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string app_name = 4;</code>
       *
       * <pre>
       * app name for android（仅android含有本字段）
       * </pre>
       */
      public java.lang.String getAppName() {
        java.lang.Object ref = appName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            appName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string app_name = 4;</code>
       *
       * <pre>
       * app name for android（仅android含有本字段）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAppNameBytes() {
        java.lang.Object ref = appName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        pkgName_ = "";
        deepLink_ = "";
        downLoadUrl_ = "";
        appName_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getPkgNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDeepLinkBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getDownLoadUrlBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getAppNameBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getPkgNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDeepLinkBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getDownLoadUrlBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getAppNameBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Direct_Response.AppInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Direct_Response.AppInfo)
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          pkgName_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          deepLink_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          downLoadUrl_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          appName_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo build() {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo result = new com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.pkgName_ = pkgName_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.deepLink_ = deepLink_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.downLoadUrl_ = downLoadUrl_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.appName_ = appName_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.getDefaultInstance()) return this;
          if (other.hasPkgName()) {
            bitField0_ |= 0x00000001;
            pkgName_ = other.pkgName_;
            onChanged();
          }
          if (other.hasDeepLink()) {
            bitField0_ |= 0x00000002;
            deepLink_ = other.deepLink_;
            onChanged();
          }
          if (other.hasDownLoadUrl()) {
            bitField0_ |= 0x00000004;
            downLoadUrl_ = other.downLoadUrl_;
            onChanged();
          }
          if (other.hasAppName()) {
            bitField0_ |= 0x00000008;
            appName_ = other.appName_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object pkgName_ = "";
        /**
         * <code>optional string pkg_name = 1;</code>
         *
         * <pre>
         *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
         * </pre>
         */
        public boolean hasPkgName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string pkg_name = 1;</code>
         *
         * <pre>
         *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
         * </pre>
         */
        public java.lang.String getPkgName() {
          java.lang.Object ref = pkgName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              pkgName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string pkg_name = 1;</code>
         *
         * <pre>
         *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
         * </pre>
         */
        public com.google.protobuf.ByteString
            getPkgNameBytes() {
          java.lang.Object ref = pkgName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            pkgName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string pkg_name = 1;</code>
         *
         * <pre>
         *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
         * </pre>
         */
        public Builder setPkgName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          pkgName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string pkg_name = 1;</code>
         *
         * <pre>
         *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
         * </pre>
         */
        public Builder clearPkgName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          pkgName_ = getDefaultInstance().getPkgName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string pkg_name = 1;</code>
         *
         * <pre>
         *唤起app的包名（用户为android系统时需要提供本字段） (用来判断应用是否安装,ios则直接提取deep_link中的scheme判断)
         * </pre>
         */
        public Builder setPkgNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          pkgName_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object deepLink_ = "";
        /**
         * <code>optional string deep_link = 2;</code>
         *
         * <pre>
         *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
         * </pre>
         */
        public boolean hasDeepLink() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string deep_link = 2;</code>
         *
         * <pre>
         *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
         * </pre>
         */
        public java.lang.String getDeepLink() {
          java.lang.Object ref = deepLink_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              deepLink_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string deep_link = 2;</code>
         *
         * <pre>
         *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDeepLinkBytes() {
          java.lang.Object ref = deepLink_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deepLink_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string deep_link = 2;</code>
         *
         * <pre>
         *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
         * </pre>
         */
        public Builder setDeepLink(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          deepLink_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string deep_link = 2;</code>
         *
         * <pre>
         *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
         * </pre>
         */
        public Builder clearDeepLink() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deepLink_ = getDefaultInstance().getDeepLink();
          onChanged();
          return this;
        }
        /**
         * <code>optional string deep_link = 2;</code>
         *
         * <pre>
         *pkg url 比如 dianping://shopinfo?id=1859284 openapp.jdmobile://viturl?params=%szxdfas%,
         * </pre>
         */
        public Builder setDeepLinkBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          deepLink_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object downLoadUrl_ = "";
        /**
         * <code>optional string down_load_url = 3;</code>
         *
         * <pre>
         *通用结构如scheme://host/path?query [application]+[openURL]+[options]
         * </pre>
         */
        public boolean hasDownLoadUrl() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string down_load_url = 3;</code>
         *
         * <pre>
         *通用结构如scheme://host/path?query [application]+[openURL]+[options]
         * </pre>
         */
        public java.lang.String getDownLoadUrl() {
          java.lang.Object ref = downLoadUrl_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              downLoadUrl_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string down_load_url = 3;</code>
         *
         * <pre>
         *通用结构如scheme://host/path?query [application]+[openURL]+[options]
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDownLoadUrlBytes() {
          java.lang.Object ref = downLoadUrl_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            downLoadUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string down_load_url = 3;</code>
         *
         * <pre>
         *通用结构如scheme://host/path?query [application]+[openURL]+[options]
         * </pre>
         */
        public Builder setDownLoadUrl(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          downLoadUrl_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string down_load_url = 3;</code>
         *
         * <pre>
         *通用结构如scheme://host/path?query [application]+[openURL]+[options]
         * </pre>
         */
        public Builder clearDownLoadUrl() {
          bitField0_ = (bitField0_ & ~0x00000004);
          downLoadUrl_ = getDefaultInstance().getDownLoadUrl();
          onChanged();
          return this;
        }
        /**
         * <code>optional string down_load_url = 3;</code>
         *
         * <pre>
         *通用结构如scheme://host/path?query [application]+[openURL]+[options]
         * </pre>
         */
        public Builder setDownLoadUrlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          downLoadUrl_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object appName_ = "";
        /**
         * <code>optional string app_name = 4;</code>
         *
         * <pre>
         * app name for android（仅android含有本字段）
         * </pre>
         */
        public boolean hasAppName() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string app_name = 4;</code>
         *
         * <pre>
         * app name for android（仅android含有本字段）
         * </pre>
         */
        public java.lang.String getAppName() {
          java.lang.Object ref = appName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              appName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string app_name = 4;</code>
         *
         * <pre>
         * app name for android（仅android含有本字段）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAppNameBytes() {
          java.lang.Object ref = appName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            appName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string app_name = 4;</code>
         *
         * <pre>
         * app name for android（仅android含有本字段）
         * </pre>
         */
        public Builder setAppName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          appName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string app_name = 4;</code>
         *
         * <pre>
         * app name for android（仅android含有本字段）
         * </pre>
         */
        public Builder clearAppName() {
          bitField0_ = (bitField0_ & ~0x00000008);
          appName_ = getDefaultInstance().getAppName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string app_name = 4;</code>
         *
         * <pre>
         * app name for android（仅android含有本字段）
         * </pre>
         */
        public Builder setAppNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          appName_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Direct_Response.AppInfo)
      }

      static {
        defaultInstance = new AppInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Direct_Response.AppInfo)
    }

    public interface BidOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Direct_Response.Bid)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      java.lang.String getId();
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      boolean hasImpid();
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      java.lang.String getImpid();
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      com.google.protobuf.ByteString
          getImpidBytes();

      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo> 
          getMaterialsList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo getMaterials(int index);
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      int getMaterialsCount();
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder> 
          getMaterialsOrBuilderList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder getMaterialsOrBuilder(
          int index);

      /**
       * <code>repeated string monitorurl = 4;</code>
       *
       * <pre>
       *第三方曝光监测URL,最多3个
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getMonitorurlList();
      /**
       * <code>repeated string monitorurl = 4;</code>
       *
       * <pre>
       *第三方曝光监测URL,最多3个
       * </pre>
       */
      int getMonitorurlCount();
      /**
       * <code>repeated string monitorurl = 4;</code>
       *
       * <pre>
       *第三方曝光监测URL,最多3个
       * </pre>
       */
      java.lang.String getMonitorurl(int index);
      /**
       * <code>repeated string monitorurl = 4;</code>
       *
       * <pre>
       *第三方曝光监测URL,最多3个
       * </pre>
       */
      com.google.protobuf.ByteString
          getMonitorurlBytes(int index);

      /**
       * <code>optional string click_url = 5;</code>
       *
       * <pre>
       *点击落地页
       * </pre>
       */
      boolean hasClickUrl();
      /**
       * <code>optional string click_url = 5;</code>
       *
       * <pre>
       *点击落地页
       * </pre>
       */
      java.lang.String getClickUrl();
      /**
       * <code>optional string click_url = 5;</code>
       *
       * <pre>
       *点击落地页
       * </pre>
       */
      com.google.protobuf.ByteString
          getClickUrlBytes();

      /**
       * <code>optional string ext = 6;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      boolean hasExt();
      /**
       * <code>optional string ext = 6;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      java.lang.String getExt();
      /**
       * <code>optional string ext = 6;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getExtBytes();

      /**
       * <code>repeated string disp_exts = 7;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getDispExtsList();
      /**
       * <code>repeated string disp_exts = 7;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      int getDispExtsCount();
      /**
       * <code>repeated string disp_exts = 7;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      java.lang.String getDispExts(int index);
      /**
       * <code>repeated string disp_exts = 7;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getDispExtsBytes(int index);

      /**
       * <code>repeated string click_exts = 8;</code>
       *
       * <pre>
       * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getClickExtsList();
      /**
       * <code>repeated string click_exts = 8;</code>
       *
       * <pre>
       * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      int getClickExtsCount();
      /**
       * <code>repeated string click_exts = 8;</code>
       *
       * <pre>
       * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      java.lang.String getClickExts(int index);
      /**
       * <code>repeated string click_exts = 8;</code>
       *
       * <pre>
       * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getClickExtsBytes(int index);

      /**
       * <code>repeated string click_monitor_urls = 9;</code>
       *
       * <pre>
       * click monitor urls （可不填）
       * </pre>
       */
      com.google.protobuf.ProtocolStringList
          getClickMonitorUrlsList();
      /**
       * <code>repeated string click_monitor_urls = 9;</code>
       *
       * <pre>
       * click monitor urls （可不填）
       * </pre>
       */
      int getClickMonitorUrlsCount();
      /**
       * <code>repeated string click_monitor_urls = 9;</code>
       *
       * <pre>
       * click monitor urls （可不填）
       * </pre>
       */
      java.lang.String getClickMonitorUrls(int index);
      /**
       * <code>repeated string click_monitor_urls = 9;</code>
       *
       * <pre>
       * click monitor urls （可不填）
       * </pre>
       */
      com.google.protobuf.ByteString
          getClickMonitorUrlsBytes(int index);

      /**
       * <code>optional float price = 10;</code>
       *
       * <pre>
       *dsp对本次曝光的出价，单位千次曝光分
       * </pre>
       */
      boolean hasPrice();
      /**
       * <code>optional float price = 10;</code>
       *
       * <pre>
       *dsp对本次曝光的出价，单位千次曝光分
       * </pre>
       */
      float getPrice();

      /**
       * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
       *
       * <pre>
       *点击唤起app 和app下载的信息 【仅高级功能才填】
       * </pre>
       */
      boolean hasAppInfo();
      /**
       * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
       *
       * <pre>
       *点击唤起app 和app下载的信息 【仅高级功能才填】
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo getAppInfo();
      /**
       * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
       *
       * <pre>
       *点击唤起app 和app下载的信息 【仅高级功能才填】
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfoOrBuilder getAppInfoOrBuilder();

      /**
       * <code>optional uint32 display_type = 12;</code>
       *
       * <pre>
       *选中的播放形式 1:信息流大图 2:原生信息流3:信息流三小图； dsp根据impression.display_type.display_type中给的几种展示形式进行选单，选到合适的订单后将该订单对应的展示形式回复给adx，取值只能是请求中指定的值（仅rtb）
       * </pre>
       */
      boolean hasDisplayType();
      /**
       * <code>optional uint32 display_type = 12;</code>
       *
       * <pre>
       *选中的播放形式 1:信息流大图 2:原生信息流3:信息流三小图； dsp根据impression.display_type.display_type中给的几种展示形式进行选单，选到合适的订单后将该订单对应的展示形式回复给adx，取值只能是请求中指定的值（仅rtb）
       * </pre>
       */
      int getDisplayType();

      /**
       * <code>optional uint32 creative_id = 13;</code>
       *
       * <pre>
       *创意id 需要dsp给出一个广告创意id，用来标识一组素材，与本dsp在同一资源（如新闻app、快报app等）同时展示的其他广告创意做区分，如果不同创意的创意id相同，会在app端出现覆盖现象，都展示为最新的一个。
       * </pre>
       */
      boolean hasCreativeId();
      /**
       * <code>optional uint32 creative_id = 13;</code>
       *
       * <pre>
       *创意id 需要dsp给出一个广告创意id，用来标识一组素材，与本dsp在同一资源（如新闻app、快报app等）同时展示的其他广告创意做区分，如果不同创意的创意id相同，会在app端出现覆盖现象，都展示为最新的一个。
       * </pre>
       */
      int getCreativeId();

      /**
       * <code>optional uint32 display_id = 14;</code>
       *
       * <pre>
       *[无效字段]智汇推闪屏专用 新闻客户端不同版本使用不同播放形式，优先级高于订单内的播放形式,0表示默认使用订单的播放形式
       * </pre>
       */
      boolean hasDisplayId();
      /**
       * <code>optional uint32 display_id = 14;</code>
       *
       * <pre>
       *[无效字段]智汇推闪屏专用 新闻客户端不同版本使用不同播放形式，优先级高于订单内的播放形式,0表示默认使用订单的播放形式
       * </pre>
       */
      int getDisplayId();

      /**
       * <code>optional uint32 click_type = 15;</code>
       *
       * <pre>
       * 播放形式动作 1：唤起  2: 下载；从请求给出的值中选择一个点击类型，只能填请求中指定的
       * </pre>
       */
      boolean hasClickType();
      /**
       * <code>optional uint32 click_type = 15;</code>
       *
       * <pre>
       * 播放形式动作 1：唤起  2: 下载；从请求给出的值中选择一个点击类型，只能填请求中指定的
       * </pre>
       */
      int getClickType();

      /**
       * <code>optional string adid = 16;</code>
       *
       * <pre>
       *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
       * </pre>
       */
      boolean hasAdid();
      /**
       * <code>optional string adid = 16;</code>
       *
       * <pre>
       *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
       * </pre>
       */
      java.lang.String getAdid();
      /**
       * <code>optional string adid = 16;</code>
       *
       * <pre>
       *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
       * </pre>
       */
      com.google.protobuf.ByteString
          getAdidBytes();
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Direct_Response.Bid}
     */
    public static final class Bid extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Direct_Response.Bid)
        BidOrBuilder {
      // Use Bid.newBuilder() to construct.
      private Bid(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Bid(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Bid defaultInstance;
      public static Bid getDefaultInstance() {
        return defaultInstance;
      }

      public Bid getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Bid(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                id_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                impid_ = bs;
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  materials_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo>();
                  mutable_bitField0_ |= 0x00000004;
                }
                materials_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  monitorurl_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000008;
                }
                monitorurl_.add(bs);
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                clickUrl_ = bs;
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                ext_ = bs;
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  dispExts_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000040;
                }
                dispExts_.add(bs);
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                  clickExts_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000080;
                }
                clickExts_.add(bs);
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  clickMonitorUrls_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000100;
                }
                clickMonitorUrls_.add(bs);
                break;
              }
              case 85: {
                bitField0_ |= 0x00000010;
                price_ = input.readFloat();
                break;
              }
              case 90: {
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = appInfo_.toBuilder();
                }
                appInfo_ = input.readMessage(com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(appInfo_);
                  appInfo_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
              case 96: {
                bitField0_ |= 0x00000040;
                displayType_ = input.readUInt32();
                break;
              }
              case 104: {
                bitField0_ |= 0x00000080;
                creativeId_ = input.readUInt32();
                break;
              }
              case 112: {
                bitField0_ |= 0x00000100;
                displayId_ = input.readUInt32();
                break;
              }
              case 120: {
                bitField0_ |= 0x00000200;
                clickType_ = input.readUInt32();
                break;
              }
              case 130: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000400;
                adid_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            materials_ = java.util.Collections.unmodifiableList(materials_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            monitorurl_ = monitorurl_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            dispExts_ = dispExts_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
            clickExts_ = clickExts_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
            clickMonitorUrls_ = clickMonitorUrls_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_Bid_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_Bid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder.class);
      }

      public static com.google.protobuf.Parser<Bid> PARSER =
          new com.google.protobuf.AbstractParser<Bid>() {
        public Bid parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Bid(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Bid> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private java.lang.Object id_;
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp自己标识一次曝光机会的id（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IMPID_FIELD_NUMBER = 2;
      private java.lang.Object impid_;
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      public boolean hasImpid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      public java.lang.String getImpid() {
        java.lang.Object ref = impid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            impid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string impid = 2;</code>
       *
       * <pre>
       *标识曝光ID(设置为对应Request.Impression.id)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getImpidBytes() {
        java.lang.Object ref = impid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          impid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MATERIALS_FIELD_NUMBER = 3;
      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo> materials_;
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo> getMaterialsList() {
        return materials_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder> 
          getMaterialsOrBuilderList() {
        return materials_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      public int getMaterialsCount() {
        return materials_.size();
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo getMaterials(int index) {
        return materials_.get(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
       *
       * <pre>
       *素材信息，repeated结构，填写订单中每个素材的具体信息	
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder getMaterialsOrBuilder(
          int index) {
        return materials_.get(index);
      }

      public static final int MONITORURL_FIELD_NUMBER = 4;
      private com.google.protobuf.LazyStringList monitorurl_;
      /**
       * <code>repeated string monitorurl = 4;</code>
       *
       * <pre>
       *第三方曝光监测URL,最多3个
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getMonitorurlList() {
        return monitorurl_;
      }
      /**
       * <code>repeated string monitorurl = 4;</code>
       *
       * <pre>
       *第三方曝光监测URL,最多3个
       * </pre>
       */
      public int getMonitorurlCount() {
        return monitorurl_.size();
      }
      /**
       * <code>repeated string monitorurl = 4;</code>
       *
       * <pre>
       *第三方曝光监测URL,最多3个
       * </pre>
       */
      public java.lang.String getMonitorurl(int index) {
        return monitorurl_.get(index);
      }
      /**
       * <code>repeated string monitorurl = 4;</code>
       *
       * <pre>
       *第三方曝光监测URL,最多3个
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMonitorurlBytes(int index) {
        return monitorurl_.getByteString(index);
      }

      public static final int CLICK_URL_FIELD_NUMBER = 5;
      private java.lang.Object clickUrl_;
      /**
       * <code>optional string click_url = 5;</code>
       *
       * <pre>
       *点击落地页
       * </pre>
       */
      public boolean hasClickUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string click_url = 5;</code>
       *
       * <pre>
       *点击落地页
       * </pre>
       */
      public java.lang.String getClickUrl() {
        java.lang.Object ref = clickUrl_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clickUrl_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string click_url = 5;</code>
       *
       * <pre>
       *点击落地页
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClickUrlBytes() {
        java.lang.Object ref = clickUrl_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clickUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EXT_FIELD_NUMBER = 6;
      private java.lang.Object ext_;
      /**
       * <code>optional string ext = 6;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public boolean hasExt() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string ext = 6;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public java.lang.String getExt() {
        java.lang.Object ref = ext_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ext_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string ext = 6;</code>
       *
       * <pre>
       *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes() {
        java.lang.Object ref = ext_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ext_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DISP_EXTS_FIELD_NUMBER = 7;
      private com.google.protobuf.LazyStringList dispExts_;
      /**
       * <code>repeated string disp_exts = 7;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getDispExtsList() {
        return dispExts_;
      }
      /**
       * <code>repeated string disp_exts = 7;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public int getDispExtsCount() {
        return dispExts_.size();
      }
      /**
       * <code>repeated string disp_exts = 7;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public java.lang.String getDispExts(int index) {
        return dispExts_.get(index);
      }
      /**
       * <code>repeated string disp_exts = 7;</code>
       *
       * <pre>
       * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDispExtsBytes(int index) {
        return dispExts_.getByteString(index);
      }

      public static final int CLICK_EXTS_FIELD_NUMBER = 8;
      private com.google.protobuf.LazyStringList clickExts_;
      /**
       * <code>repeated string click_exts = 8;</code>
       *
       * <pre>
       * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getClickExtsList() {
        return clickExts_;
      }
      /**
       * <code>repeated string click_exts = 8;</code>
       *
       * <pre>
       * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public int getClickExtsCount() {
        return clickExts_.size();
      }
      /**
       * <code>repeated string click_exts = 8;</code>
       *
       * <pre>
       * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public java.lang.String getClickExts(int index) {
        return clickExts_.get(index);
      }
      /**
       * <code>repeated string click_exts = 8;</code>
       *
       * <pre>
       * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClickExtsBytes(int index) {
        return clickExts_.getByteString(index);
      }

      public static final int CLICK_MONITOR_URLS_FIELD_NUMBER = 9;
      private com.google.protobuf.LazyStringList clickMonitorUrls_;
      /**
       * <code>repeated string click_monitor_urls = 9;</code>
       *
       * <pre>
       * click monitor urls （可不填）
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getClickMonitorUrlsList() {
        return clickMonitorUrls_;
      }
      /**
       * <code>repeated string click_monitor_urls = 9;</code>
       *
       * <pre>
       * click monitor urls （可不填）
       * </pre>
       */
      public int getClickMonitorUrlsCount() {
        return clickMonitorUrls_.size();
      }
      /**
       * <code>repeated string click_monitor_urls = 9;</code>
       *
       * <pre>
       * click monitor urls （可不填）
       * </pre>
       */
      public java.lang.String getClickMonitorUrls(int index) {
        return clickMonitorUrls_.get(index);
      }
      /**
       * <code>repeated string click_monitor_urls = 9;</code>
       *
       * <pre>
       * click monitor urls （可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClickMonitorUrlsBytes(int index) {
        return clickMonitorUrls_.getByteString(index);
      }

      public static final int PRICE_FIELD_NUMBER = 10;
      private float price_;
      /**
       * <code>optional float price = 10;</code>
       *
       * <pre>
       *dsp对本次曝光的出价，单位千次曝光分
       * </pre>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float price = 10;</code>
       *
       * <pre>
       *dsp对本次曝光的出价，单位千次曝光分
       * </pre>
       */
      public float getPrice() {
        return price_;
      }

      public static final int APP_INFO_FIELD_NUMBER = 11;
      private com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo appInfo_;
      /**
       * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
       *
       * <pre>
       *点击唤起app 和app下载的信息 【仅高级功能才填】
       * </pre>
       */
      public boolean hasAppInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
       *
       * <pre>
       *点击唤起app 和app下载的信息 【仅高级功能才填】
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo getAppInfo() {
        return appInfo_;
      }
      /**
       * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
       *
       * <pre>
       *点击唤起app 和app下载的信息 【仅高级功能才填】
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfoOrBuilder getAppInfoOrBuilder() {
        return appInfo_;
      }

      public static final int DISPLAY_TYPE_FIELD_NUMBER = 12;
      private int displayType_;
      /**
       * <code>optional uint32 display_type = 12;</code>
       *
       * <pre>
       *选中的播放形式 1:信息流大图 2:原生信息流3:信息流三小图； dsp根据impression.display_type.display_type中给的几种展示形式进行选单，选到合适的订单后将该订单对应的展示形式回复给adx，取值只能是请求中指定的值（仅rtb）
       * </pre>
       */
      public boolean hasDisplayType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 display_type = 12;</code>
       *
       * <pre>
       *选中的播放形式 1:信息流大图 2:原生信息流3:信息流三小图； dsp根据impression.display_type.display_type中给的几种展示形式进行选单，选到合适的订单后将该订单对应的展示形式回复给adx，取值只能是请求中指定的值（仅rtb）
       * </pre>
       */
      public int getDisplayType() {
        return displayType_;
      }

      public static final int CREATIVE_ID_FIELD_NUMBER = 13;
      private int creativeId_;
      /**
       * <code>optional uint32 creative_id = 13;</code>
       *
       * <pre>
       *创意id 需要dsp给出一个广告创意id，用来标识一组素材，与本dsp在同一资源（如新闻app、快报app等）同时展示的其他广告创意做区分，如果不同创意的创意id相同，会在app端出现覆盖现象，都展示为最新的一个。
       * </pre>
       */
      public boolean hasCreativeId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 creative_id = 13;</code>
       *
       * <pre>
       *创意id 需要dsp给出一个广告创意id，用来标识一组素材，与本dsp在同一资源（如新闻app、快报app等）同时展示的其他广告创意做区分，如果不同创意的创意id相同，会在app端出现覆盖现象，都展示为最新的一个。
       * </pre>
       */
      public int getCreativeId() {
        return creativeId_;
      }

      public static final int DISPLAY_ID_FIELD_NUMBER = 14;
      private int displayId_;
      /**
       * <code>optional uint32 display_id = 14;</code>
       *
       * <pre>
       *[无效字段]智汇推闪屏专用 新闻客户端不同版本使用不同播放形式，优先级高于订单内的播放形式,0表示默认使用订单的播放形式
       * </pre>
       */
      public boolean hasDisplayId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 display_id = 14;</code>
       *
       * <pre>
       *[无效字段]智汇推闪屏专用 新闻客户端不同版本使用不同播放形式，优先级高于订单内的播放形式,0表示默认使用订单的播放形式
       * </pre>
       */
      public int getDisplayId() {
        return displayId_;
      }

      public static final int CLICK_TYPE_FIELD_NUMBER = 15;
      private int clickType_;
      /**
       * <code>optional uint32 click_type = 15;</code>
       *
       * <pre>
       * 播放形式动作 1：唤起  2: 下载；从请求给出的值中选择一个点击类型，只能填请求中指定的
       * </pre>
       */
      public boolean hasClickType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 click_type = 15;</code>
       *
       * <pre>
       * 播放形式动作 1：唤起  2: 下载；从请求给出的值中选择一个点击类型，只能填请求中指定的
       * </pre>
       */
      public int getClickType() {
        return clickType_;
      }

      public static final int ADID_FIELD_NUMBER = 16;
      private java.lang.Object adid_;
      /**
       * <code>optional string adid = 16;</code>
       *
       * <pre>
       *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
       * </pre>
       */
      public boolean hasAdid() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string adid = 16;</code>
       *
       * <pre>
       *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
       * </pre>
       */
      public java.lang.String getAdid() {
        java.lang.Object ref = adid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            adid_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string adid = 16;</code>
       *
       * <pre>
       *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAdidBytes() {
        java.lang.Object ref = adid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          adid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        id_ = "";
        impid_ = "";
        materials_ = java.util.Collections.emptyList();
        monitorurl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        clickUrl_ = "";
        ext_ = "";
        dispExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        clickExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        clickMonitorUrls_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        price_ = 0F;
        appInfo_ = com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.getDefaultInstance();
        displayType_ = 0;
        creativeId_ = 0;
        displayId_ = 0;
        clickType_ = 0;
        adid_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getImpidBytes());
        }
        for (int i = 0; i < materials_.size(); i++) {
          output.writeMessage(3, materials_.get(i));
        }
        for (int i = 0; i < monitorurl_.size(); i++) {
          output.writeBytes(4, monitorurl_.getByteString(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(5, getClickUrlBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(6, getExtBytes());
        }
        for (int i = 0; i < dispExts_.size(); i++) {
          output.writeBytes(7, dispExts_.getByteString(i));
        }
        for (int i = 0; i < clickExts_.size(); i++) {
          output.writeBytes(8, clickExts_.getByteString(i));
        }
        for (int i = 0; i < clickMonitorUrls_.size(); i++) {
          output.writeBytes(9, clickMonitorUrls_.getByteString(i));
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(10, price_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeMessage(11, appInfo_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(12, displayType_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(13, creativeId_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeUInt32(14, displayId_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeUInt32(15, clickType_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBytes(16, getAdidBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getImpidBytes());
        }
        for (int i = 0; i < materials_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, materials_.get(i));
        }
        {
          int dataSize = 0;
          for (int i = 0; i < monitorurl_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(monitorurl_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getMonitorurlList().size();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getClickUrlBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getExtBytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < dispExts_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(dispExts_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getDispExtsList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < clickExts_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(clickExts_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getClickExtsList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < clickMonitorUrls_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(clickMonitorUrls_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getClickMonitorUrlsList().size();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(10, price_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, appInfo_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, displayType_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(13, creativeId_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(14, displayId_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(15, clickType_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(16, getAdidBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Direct_Response.Bid}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Direct_Response.Bid)
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_Bid_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_Bid_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getMaterialsFieldBuilder();
            getAppInfoFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          impid_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (materialsBuilder_ == null) {
            materials_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            materialsBuilder_.clear();
          }
          monitorurl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          clickUrl_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          ext_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          dispExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000040);
          clickExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000080);
          clickMonitorUrls_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000100);
          price_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000200);
          if (appInfoBuilder_ == null) {
            appInfo_ = com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.getDefaultInstance();
          } else {
            appInfoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000400);
          displayType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          creativeId_ = 0;
          bitField0_ = (bitField0_ & ~0x00001000);
          displayId_ = 0;
          bitField0_ = (bitField0_ & ~0x00002000);
          clickType_ = 0;
          bitField0_ = (bitField0_ & ~0x00004000);
          adid_ = "";
          bitField0_ = (bitField0_ & ~0x00008000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_Bid_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid build() {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid result = new com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.impid_ = impid_;
          if (materialsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              materials_ = java.util.Collections.unmodifiableList(materials_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.materials_ = materials_;
          } else {
            result.materials_ = materialsBuilder_.build();
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            monitorurl_ = monitorurl_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.monitorurl_ = monitorurl_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000004;
          }
          result.clickUrl_ = clickUrl_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000008;
          }
          result.ext_ = ext_;
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            dispExts_ = dispExts_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.dispExts_ = dispExts_;
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            clickExts_ = clickExts_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.clickExts_ = clickExts_;
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            clickMonitorUrls_ = clickMonitorUrls_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.clickMonitorUrls_ = clickMonitorUrls_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000010;
          }
          result.price_ = price_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000020;
          }
          if (appInfoBuilder_ == null) {
            result.appInfo_ = appInfo_;
          } else {
            result.appInfo_ = appInfoBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000040;
          }
          result.displayType_ = displayType_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00000080;
          }
          result.creativeId_ = creativeId_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00000100;
          }
          result.displayId_ = displayId_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00000200;
          }
          result.clickType_ = clickType_;
          if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
            to_bitField0_ |= 0x00000400;
          }
          result.adid_ = adid_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.getDefaultInstance()) return this;
          if (other.hasId()) {
            bitField0_ |= 0x00000001;
            id_ = other.id_;
            onChanged();
          }
          if (other.hasImpid()) {
            bitField0_ |= 0x00000002;
            impid_ = other.impid_;
            onChanged();
          }
          if (materialsBuilder_ == null) {
            if (!other.materials_.isEmpty()) {
              if (materials_.isEmpty()) {
                materials_ = other.materials_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureMaterialsIsMutable();
                materials_.addAll(other.materials_);
              }
              onChanged();
            }
          } else {
            if (!other.materials_.isEmpty()) {
              if (materialsBuilder_.isEmpty()) {
                materialsBuilder_.dispose();
                materialsBuilder_ = null;
                materials_ = other.materials_;
                bitField0_ = (bitField0_ & ~0x00000004);
                materialsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getMaterialsFieldBuilder() : null;
              } else {
                materialsBuilder_.addAllMessages(other.materials_);
              }
            }
          }
          if (!other.monitorurl_.isEmpty()) {
            if (monitorurl_.isEmpty()) {
              monitorurl_ = other.monitorurl_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMonitorurlIsMutable();
              monitorurl_.addAll(other.monitorurl_);
            }
            onChanged();
          }
          if (other.hasClickUrl()) {
            bitField0_ |= 0x00000010;
            clickUrl_ = other.clickUrl_;
            onChanged();
          }
          if (other.hasExt()) {
            bitField0_ |= 0x00000020;
            ext_ = other.ext_;
            onChanged();
          }
          if (!other.dispExts_.isEmpty()) {
            if (dispExts_.isEmpty()) {
              dispExts_ = other.dispExts_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureDispExtsIsMutable();
              dispExts_.addAll(other.dispExts_);
            }
            onChanged();
          }
          if (!other.clickExts_.isEmpty()) {
            if (clickExts_.isEmpty()) {
              clickExts_ = other.clickExts_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureClickExtsIsMutable();
              clickExts_.addAll(other.clickExts_);
            }
            onChanged();
          }
          if (!other.clickMonitorUrls_.isEmpty()) {
            if (clickMonitorUrls_.isEmpty()) {
              clickMonitorUrls_ = other.clickMonitorUrls_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureClickMonitorUrlsIsMutable();
              clickMonitorUrls_.addAll(other.clickMonitorUrls_);
            }
            onChanged();
          }
          if (other.hasPrice()) {
            setPrice(other.getPrice());
          }
          if (other.hasAppInfo()) {
            mergeAppInfo(other.getAppInfo());
          }
          if (other.hasDisplayType()) {
            setDisplayType(other.getDisplayType());
          }
          if (other.hasCreativeId()) {
            setCreativeId(other.getCreativeId());
          }
          if (other.hasDisplayId()) {
            setDisplayId(other.getDisplayId());
          }
          if (other.hasClickType()) {
            setClickType(other.getClickType());
          }
          if (other.hasAdid()) {
            bitField0_ |= 0x00008000;
            adid_ = other.adid_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object id_ = "";
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              id_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         *
         * <pre>
         *dsp自己标识一次曝光机会的id（可不填）
         * </pre>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object impid_ = "";
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public boolean hasImpid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public java.lang.String getImpid() {
          java.lang.Object ref = impid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              impid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public com.google.protobuf.ByteString
            getImpidBytes() {
          java.lang.Object ref = impid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            impid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public Builder setImpid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          impid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public Builder clearImpid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          impid_ = getDefaultInstance().getImpid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string impid = 2;</code>
         *
         * <pre>
         *标识曝光ID(设置为对应Request.Impression.id)
         * </pre>
         */
        public Builder setImpidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          impid_ = value;
          onChanged();
          return this;
        }

        private java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo> materials_ =
          java.util.Collections.emptyList();
        private void ensureMaterialsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            materials_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo>(materials_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder> materialsBuilder_;

        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo> getMaterialsList() {
          if (materialsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(materials_);
          } else {
            return materialsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public int getMaterialsCount() {
          if (materialsBuilder_ == null) {
            return materials_.size();
          } else {
            return materialsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo getMaterials(int index) {
          if (materialsBuilder_ == null) {
            return materials_.get(index);
          } else {
            return materialsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public Builder setMaterials(
            int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo value) {
          if (materialsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMaterialsIsMutable();
            materials_.set(index, value);
            onChanged();
          } else {
            materialsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public Builder setMaterials(
            int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder builderForValue) {
          if (materialsBuilder_ == null) {
            ensureMaterialsIsMutable();
            materials_.set(index, builderForValue.build());
            onChanged();
          } else {
            materialsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public Builder addMaterials(com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo value) {
          if (materialsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMaterialsIsMutable();
            materials_.add(value);
            onChanged();
          } else {
            materialsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public Builder addMaterials(
            int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo value) {
          if (materialsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMaterialsIsMutable();
            materials_.add(index, value);
            onChanged();
          } else {
            materialsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public Builder addMaterials(
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder builderForValue) {
          if (materialsBuilder_ == null) {
            ensureMaterialsIsMutable();
            materials_.add(builderForValue.build());
            onChanged();
          } else {
            materialsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public Builder addMaterials(
            int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder builderForValue) {
          if (materialsBuilder_ == null) {
            ensureMaterialsIsMutable();
            materials_.add(index, builderForValue.build());
            onChanged();
          } else {
            materialsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public Builder addAllMaterials(
            java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo> values) {
          if (materialsBuilder_ == null) {
            ensureMaterialsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, materials_);
            onChanged();
          } else {
            materialsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public Builder clearMaterials() {
          if (materialsBuilder_ == null) {
            materials_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            materialsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public Builder removeMaterials(int index) {
          if (materialsBuilder_ == null) {
            ensureMaterialsIsMutable();
            materials_.remove(index);
            onChanged();
          } else {
            materialsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder getMaterialsBuilder(
            int index) {
          return getMaterialsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder getMaterialsOrBuilder(
            int index) {
          if (materialsBuilder_ == null) {
            return materials_.get(index);  } else {
            return materialsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder> 
             getMaterialsOrBuilderList() {
          if (materialsBuilder_ != null) {
            return materialsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(materials_);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder addMaterialsBuilder() {
          return getMaterialsFieldBuilder().addBuilder(
              com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder addMaterialsBuilder(
            int index) {
          return getMaterialsFieldBuilder().addBuilder(
              index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.MaterialInfo materials = 3;</code>
         *
         * <pre>
         *素材信息，repeated结构，填写订单中每个素材的具体信息	
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder> 
             getMaterialsBuilderList() {
          return getMaterialsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder> 
            getMaterialsFieldBuilder() {
          if (materialsBuilder_ == null) {
            materialsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfo.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.MaterialInfoOrBuilder>(
                    materials_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            materials_ = null;
          }
          return materialsBuilder_;
        }

        private com.google.protobuf.LazyStringList monitorurl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureMonitorurlIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            monitorurl_ = new com.google.protobuf.LazyStringArrayList(monitorurl_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated string monitorurl = 4;</code>
         *
         * <pre>
         *第三方曝光监测URL,最多3个
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getMonitorurlList() {
          return monitorurl_.getUnmodifiableView();
        }
        /**
         * <code>repeated string monitorurl = 4;</code>
         *
         * <pre>
         *第三方曝光监测URL,最多3个
         * </pre>
         */
        public int getMonitorurlCount() {
          return monitorurl_.size();
        }
        /**
         * <code>repeated string monitorurl = 4;</code>
         *
         * <pre>
         *第三方曝光监测URL,最多3个
         * </pre>
         */
        public java.lang.String getMonitorurl(int index) {
          return monitorurl_.get(index);
        }
        /**
         * <code>repeated string monitorurl = 4;</code>
         *
         * <pre>
         *第三方曝光监测URL,最多3个
         * </pre>
         */
        public com.google.protobuf.ByteString
            getMonitorurlBytes(int index) {
          return monitorurl_.getByteString(index);
        }
        /**
         * <code>repeated string monitorurl = 4;</code>
         *
         * <pre>
         *第三方曝光监测URL,最多3个
         * </pre>
         */
        public Builder setMonitorurl(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureMonitorurlIsMutable();
          monitorurl_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string monitorurl = 4;</code>
         *
         * <pre>
         *第三方曝光监测URL,最多3个
         * </pre>
         */
        public Builder addMonitorurl(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureMonitorurlIsMutable();
          monitorurl_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string monitorurl = 4;</code>
         *
         * <pre>
         *第三方曝光监测URL,最多3个
         * </pre>
         */
        public Builder addAllMonitorurl(
            java.lang.Iterable<java.lang.String> values) {
          ensureMonitorurlIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, monitorurl_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string monitorurl = 4;</code>
         *
         * <pre>
         *第三方曝光监测URL,最多3个
         * </pre>
         */
        public Builder clearMonitorurl() {
          monitorurl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string monitorurl = 4;</code>
         *
         * <pre>
         *第三方曝光监测URL,最多3个
         * </pre>
         */
        public Builder addMonitorurlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureMonitorurlIsMutable();
          monitorurl_.add(value);
          onChanged();
          return this;
        }

        private java.lang.Object clickUrl_ = "";
        /**
         * <code>optional string click_url = 5;</code>
         *
         * <pre>
         *点击落地页
         * </pre>
         */
        public boolean hasClickUrl() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string click_url = 5;</code>
         *
         * <pre>
         *点击落地页
         * </pre>
         */
        public java.lang.String getClickUrl() {
          java.lang.Object ref = clickUrl_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              clickUrl_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string click_url = 5;</code>
         *
         * <pre>
         *点击落地页
         * </pre>
         */
        public com.google.protobuf.ByteString
            getClickUrlBytes() {
          java.lang.Object ref = clickUrl_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            clickUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string click_url = 5;</code>
         *
         * <pre>
         *点击落地页
         * </pre>
         */
        public Builder setClickUrl(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          clickUrl_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string click_url = 5;</code>
         *
         * <pre>
         *点击落地页
         * </pre>
         */
        public Builder clearClickUrl() {
          bitField0_ = (bitField0_ & ~0x00000010);
          clickUrl_ = getDefaultInstance().getClickUrl();
          onChanged();
          return this;
        }
        /**
         * <code>optional string click_url = 5;</code>
         *
         * <pre>
         *点击落地页
         * </pre>
         */
        public Builder setClickUrlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          clickUrl_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object ext_ = "";
        /**
         * <code>optional string ext = 6;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public boolean hasExt() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string ext = 6;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public java.lang.String getExt() {
          java.lang.Object ref = ext_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              ext_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ext = 6;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getExtBytes() {
          java.lang.Object ref = ext_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ext_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ext = 6;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder setExt(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          ext_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ext = 6;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder clearExt() {
          bitField0_ = (bitField0_ & ~0x00000020);
          ext_ = getDefaultInstance().getExt();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ext = 6;</code>
         *
         * <pre>
         *替换曝光监测、点击落地页和点击监测中的宏${EXT}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder setExtBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          ext_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList dispExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureDispExtsIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            dispExts_ = new com.google.protobuf.LazyStringArrayList(dispExts_);
            bitField0_ |= 0x00000040;
           }
        }
        /**
         * <code>repeated string disp_exts = 7;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getDispExtsList() {
          return dispExts_.getUnmodifiableView();
        }
        /**
         * <code>repeated string disp_exts = 7;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public int getDispExtsCount() {
          return dispExts_.size();
        }
        /**
         * <code>repeated string disp_exts = 7;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public java.lang.String getDispExts(int index) {
          return dispExts_.get(index);
        }
        /**
         * <code>repeated string disp_exts = 7;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDispExtsBytes(int index) {
          return dispExts_.getByteString(index);
        }
        /**
         * <code>repeated string disp_exts = 7;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder setDispExts(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureDispExtsIsMutable();
          dispExts_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string disp_exts = 7;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder addDispExts(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureDispExtsIsMutable();
          dispExts_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string disp_exts = 7;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder addAllDispExts(
            java.lang.Iterable<java.lang.String> values) {
          ensureDispExtsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dispExts_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string disp_exts = 7;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder clearDispExts() {
          dispExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string disp_exts = 7;</code>
         *
         * <pre>
         * 只替换曝光监测的宏， repeated字段最多3个，分别替换这三个宏${DISPLAY_EXT1}${DISPLAY_EXT2}${DISPLAY_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder addDispExtsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureDispExtsIsMutable();
          dispExts_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList clickExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureClickExtsIsMutable() {
          if (!((bitField0_ & 0x00000080) == 0x00000080)) {
            clickExts_ = new com.google.protobuf.LazyStringArrayList(clickExts_);
            bitField0_ |= 0x00000080;
           }
        }
        /**
         * <code>repeated string click_exts = 8;</code>
         *
         * <pre>
         * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getClickExtsList() {
          return clickExts_.getUnmodifiableView();
        }
        /**
         * <code>repeated string click_exts = 8;</code>
         *
         * <pre>
         * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public int getClickExtsCount() {
          return clickExts_.size();
        }
        /**
         * <code>repeated string click_exts = 8;</code>
         *
         * <pre>
         * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public java.lang.String getClickExts(int index) {
          return clickExts_.get(index);
        }
        /**
         * <code>repeated string click_exts = 8;</code>
         *
         * <pre>
         * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getClickExtsBytes(int index) {
          return clickExts_.getByteString(index);
        }
        /**
         * <code>repeated string click_exts = 8;</code>
         *
         * <pre>
         * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder setClickExts(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureClickExtsIsMutable();
          clickExts_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_exts = 8;</code>
         *
         * <pre>
         * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder addClickExts(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureClickExtsIsMutable();
          clickExts_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_exts = 8;</code>
         *
         * <pre>
         * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder addAllClickExts(
            java.lang.Iterable<java.lang.String> values) {
          ensureClickExtsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, clickExts_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_exts = 8;</code>
         *
         * <pre>
         * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder clearClickExts() {
          clickExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_exts = 8;</code>
         *
         * <pre>
         * 只替换点击监测和点击落地页中的宏，repeated字段最多3个，分别替换这三个宏${ CLICK_EXT1 }${ CLICK_EXT2}${ CLICK_EXT3}。(要求base64 encode，每个不超过256字节，dsp接收到后自己base64 decode)（可不填）
         * </pre>
         */
        public Builder addClickExtsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureClickExtsIsMutable();
          clickExts_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList clickMonitorUrls_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureClickMonitorUrlsIsMutable() {
          if (!((bitField0_ & 0x00000100) == 0x00000100)) {
            clickMonitorUrls_ = new com.google.protobuf.LazyStringArrayList(clickMonitorUrls_);
            bitField0_ |= 0x00000100;
           }
        }
        /**
         * <code>repeated string click_monitor_urls = 9;</code>
         *
         * <pre>
         * click monitor urls （可不填）
         * </pre>
         */
        public com.google.protobuf.ProtocolStringList
            getClickMonitorUrlsList() {
          return clickMonitorUrls_.getUnmodifiableView();
        }
        /**
         * <code>repeated string click_monitor_urls = 9;</code>
         *
         * <pre>
         * click monitor urls （可不填）
         * </pre>
         */
        public int getClickMonitorUrlsCount() {
          return clickMonitorUrls_.size();
        }
        /**
         * <code>repeated string click_monitor_urls = 9;</code>
         *
         * <pre>
         * click monitor urls （可不填）
         * </pre>
         */
        public java.lang.String getClickMonitorUrls(int index) {
          return clickMonitorUrls_.get(index);
        }
        /**
         * <code>repeated string click_monitor_urls = 9;</code>
         *
         * <pre>
         * click monitor urls （可不填）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getClickMonitorUrlsBytes(int index) {
          return clickMonitorUrls_.getByteString(index);
        }
        /**
         * <code>repeated string click_monitor_urls = 9;</code>
         *
         * <pre>
         * click monitor urls （可不填）
         * </pre>
         */
        public Builder setClickMonitorUrls(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureClickMonitorUrlsIsMutable();
          clickMonitorUrls_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_monitor_urls = 9;</code>
         *
         * <pre>
         * click monitor urls （可不填）
         * </pre>
         */
        public Builder addClickMonitorUrls(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureClickMonitorUrlsIsMutable();
          clickMonitorUrls_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_monitor_urls = 9;</code>
         *
         * <pre>
         * click monitor urls （可不填）
         * </pre>
         */
        public Builder addAllClickMonitorUrls(
            java.lang.Iterable<java.lang.String> values) {
          ensureClickMonitorUrlsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, clickMonitorUrls_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_monitor_urls = 9;</code>
         *
         * <pre>
         * click monitor urls （可不填）
         * </pre>
         */
        public Builder clearClickMonitorUrls() {
          clickMonitorUrls_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string click_monitor_urls = 9;</code>
         *
         * <pre>
         * click monitor urls （可不填）
         * </pre>
         */
        public Builder addClickMonitorUrlsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureClickMonitorUrlsIsMutable();
          clickMonitorUrls_.add(value);
          onChanged();
          return this;
        }

        private float price_ ;
        /**
         * <code>optional float price = 10;</code>
         *
         * <pre>
         *dsp对本次曝光的出价，单位千次曝光分
         * </pre>
         */
        public boolean hasPrice() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional float price = 10;</code>
         *
         * <pre>
         *dsp对本次曝光的出价，单位千次曝光分
         * </pre>
         */
        public float getPrice() {
          return price_;
        }
        /**
         * <code>optional float price = 10;</code>
         *
         * <pre>
         *dsp对本次曝光的出价，单位千次曝光分
         * </pre>
         */
        public Builder setPrice(float value) {
          bitField0_ |= 0x00000200;
          price_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float price = 10;</code>
         *
         * <pre>
         *dsp对本次曝光的出价，单位千次曝光分
         * </pre>
         */
        public Builder clearPrice() {
          bitField0_ = (bitField0_ & ~0x00000200);
          price_ = 0F;
          onChanged();
          return this;
        }

        private com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo appInfo_ = com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo, com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfoOrBuilder> appInfoBuilder_;
        /**
         * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
         *
         * <pre>
         *点击唤起app 和app下载的信息 【仅高级功能才填】
         * </pre>
         */
        public boolean hasAppInfo() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
         *
         * <pre>
         *点击唤起app 和app下载的信息 【仅高级功能才填】
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo getAppInfo() {
          if (appInfoBuilder_ == null) {
            return appInfo_;
          } else {
            return appInfoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
         *
         * <pre>
         *点击唤起app 和app下载的信息 【仅高级功能才填】
         * </pre>
         */
        public Builder setAppInfo(com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo value) {
          if (appInfoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            appInfo_ = value;
            onChanged();
          } else {
            appInfoBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000400;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
         *
         * <pre>
         *点击唤起app 和app下载的信息 【仅高级功能才填】
         * </pre>
         */
        public Builder setAppInfo(
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.Builder builderForValue) {
          if (appInfoBuilder_ == null) {
            appInfo_ = builderForValue.build();
            onChanged();
          } else {
            appInfoBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000400;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
         *
         * <pre>
         *点击唤起app 和app下载的信息 【仅高级功能才填】
         * </pre>
         */
        public Builder mergeAppInfo(com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo value) {
          if (appInfoBuilder_ == null) {
            if (((bitField0_ & 0x00000400) == 0x00000400) &&
                appInfo_ != com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.getDefaultInstance()) {
              appInfo_ =
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.newBuilder(appInfo_).mergeFrom(value).buildPartial();
            } else {
              appInfo_ = value;
            }
            onChanged();
          } else {
            appInfoBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000400;
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
         *
         * <pre>
         *点击唤起app 和app下载的信息 【仅高级功能才填】
         * </pre>
         */
        public Builder clearAppInfo() {
          if (appInfoBuilder_ == null) {
            appInfo_ = com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.getDefaultInstance();
            onChanged();
          } else {
            appInfoBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
         *
         * <pre>
         *点击唤起app 和app下载的信息 【仅高级功能才填】
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.Builder getAppInfoBuilder() {
          bitField0_ |= 0x00000400;
          onChanged();
          return getAppInfoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
         *
         * <pre>
         *点击唤起app 和app下载的信息 【仅高级功能才填】
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfoOrBuilder getAppInfoOrBuilder() {
          if (appInfoBuilder_ != null) {
            return appInfoBuilder_.getMessageOrBuilder();
          } else {
            return appInfo_;
          }
        }
        /**
         * <code>optional .com.madhouse.media.tencent.Direct_Response.AppInfo app_info = 11;</code>
         *
         * <pre>
         *点击唤起app 和app下载的信息 【仅高级功能才填】
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo, com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfoOrBuilder> 
            getAppInfoFieldBuilder() {
          if (appInfoBuilder_ == null) {
            appInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo, com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfo.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.AppInfoOrBuilder>(
                    getAppInfo(),
                    getParentForChildren(),
                    isClean());
            appInfo_ = null;
          }
          return appInfoBuilder_;
        }

        private int displayType_ ;
        /**
         * <code>optional uint32 display_type = 12;</code>
         *
         * <pre>
         *选中的播放形式 1:信息流大图 2:原生信息流3:信息流三小图； dsp根据impression.display_type.display_type中给的几种展示形式进行选单，选到合适的订单后将该订单对应的展示形式回复给adx，取值只能是请求中指定的值（仅rtb）
         * </pre>
         */
        public boolean hasDisplayType() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional uint32 display_type = 12;</code>
         *
         * <pre>
         *选中的播放形式 1:信息流大图 2:原生信息流3:信息流三小图； dsp根据impression.display_type.display_type中给的几种展示形式进行选单，选到合适的订单后将该订单对应的展示形式回复给adx，取值只能是请求中指定的值（仅rtb）
         * </pre>
         */
        public int getDisplayType() {
          return displayType_;
        }
        /**
         * <code>optional uint32 display_type = 12;</code>
         *
         * <pre>
         *选中的播放形式 1:信息流大图 2:原生信息流3:信息流三小图； dsp根据impression.display_type.display_type中给的几种展示形式进行选单，选到合适的订单后将该订单对应的展示形式回复给adx，取值只能是请求中指定的值（仅rtb）
         * </pre>
         */
        public Builder setDisplayType(int value) {
          bitField0_ |= 0x00000800;
          displayType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 display_type = 12;</code>
         *
         * <pre>
         *选中的播放形式 1:信息流大图 2:原生信息流3:信息流三小图； dsp根据impression.display_type.display_type中给的几种展示形式进行选单，选到合适的订单后将该订单对应的展示形式回复给adx，取值只能是请求中指定的值（仅rtb）
         * </pre>
         */
        public Builder clearDisplayType() {
          bitField0_ = (bitField0_ & ~0x00000800);
          displayType_ = 0;
          onChanged();
          return this;
        }

        private int creativeId_ ;
        /**
         * <code>optional uint32 creative_id = 13;</code>
         *
         * <pre>
         *创意id 需要dsp给出一个广告创意id，用来标识一组素材，与本dsp在同一资源（如新闻app、快报app等）同时展示的其他广告创意做区分，如果不同创意的创意id相同，会在app端出现覆盖现象，都展示为最新的一个。
         * </pre>
         */
        public boolean hasCreativeId() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional uint32 creative_id = 13;</code>
         *
         * <pre>
         *创意id 需要dsp给出一个广告创意id，用来标识一组素材，与本dsp在同一资源（如新闻app、快报app等）同时展示的其他广告创意做区分，如果不同创意的创意id相同，会在app端出现覆盖现象，都展示为最新的一个。
         * </pre>
         */
        public int getCreativeId() {
          return creativeId_;
        }
        /**
         * <code>optional uint32 creative_id = 13;</code>
         *
         * <pre>
         *创意id 需要dsp给出一个广告创意id，用来标识一组素材，与本dsp在同一资源（如新闻app、快报app等）同时展示的其他广告创意做区分，如果不同创意的创意id相同，会在app端出现覆盖现象，都展示为最新的一个。
         * </pre>
         */
        public Builder setCreativeId(int value) {
          bitField0_ |= 0x00001000;
          creativeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 creative_id = 13;</code>
         *
         * <pre>
         *创意id 需要dsp给出一个广告创意id，用来标识一组素材，与本dsp在同一资源（如新闻app、快报app等）同时展示的其他广告创意做区分，如果不同创意的创意id相同，会在app端出现覆盖现象，都展示为最新的一个。
         * </pre>
         */
        public Builder clearCreativeId() {
          bitField0_ = (bitField0_ & ~0x00001000);
          creativeId_ = 0;
          onChanged();
          return this;
        }

        private int displayId_ ;
        /**
         * <code>optional uint32 display_id = 14;</code>
         *
         * <pre>
         *[无效字段]智汇推闪屏专用 新闻客户端不同版本使用不同播放形式，优先级高于订单内的播放形式,0表示默认使用订单的播放形式
         * </pre>
         */
        public boolean hasDisplayId() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional uint32 display_id = 14;</code>
         *
         * <pre>
         *[无效字段]智汇推闪屏专用 新闻客户端不同版本使用不同播放形式，优先级高于订单内的播放形式,0表示默认使用订单的播放形式
         * </pre>
         */
        public int getDisplayId() {
          return displayId_;
        }
        /**
         * <code>optional uint32 display_id = 14;</code>
         *
         * <pre>
         *[无效字段]智汇推闪屏专用 新闻客户端不同版本使用不同播放形式，优先级高于订单内的播放形式,0表示默认使用订单的播放形式
         * </pre>
         */
        public Builder setDisplayId(int value) {
          bitField0_ |= 0x00002000;
          displayId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 display_id = 14;</code>
         *
         * <pre>
         *[无效字段]智汇推闪屏专用 新闻客户端不同版本使用不同播放形式，优先级高于订单内的播放形式,0表示默认使用订单的播放形式
         * </pre>
         */
        public Builder clearDisplayId() {
          bitField0_ = (bitField0_ & ~0x00002000);
          displayId_ = 0;
          onChanged();
          return this;
        }

        private int clickType_ ;
        /**
         * <code>optional uint32 click_type = 15;</code>
         *
         * <pre>
         * 播放形式动作 1：唤起  2: 下载；从请求给出的值中选择一个点击类型，只能填请求中指定的
         * </pre>
         */
        public boolean hasClickType() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional uint32 click_type = 15;</code>
         *
         * <pre>
         * 播放形式动作 1：唤起  2: 下载；从请求给出的值中选择一个点击类型，只能填请求中指定的
         * </pre>
         */
        public int getClickType() {
          return clickType_;
        }
        /**
         * <code>optional uint32 click_type = 15;</code>
         *
         * <pre>
         * 播放形式动作 1：唤起  2: 下载；从请求给出的值中选择一个点击类型，只能填请求中指定的
         * </pre>
         */
        public Builder setClickType(int value) {
          bitField0_ |= 0x00004000;
          clickType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 click_type = 15;</code>
         *
         * <pre>
         * 播放形式动作 1：唤起  2: 下载；从请求给出的值中选择一个点击类型，只能填请求中指定的
         * </pre>
         */
        public Builder clearClickType() {
          bitField0_ = (bitField0_ & ~0x00004000);
          clickType_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object adid_ = "";
        /**
         * <code>optional string adid = 16;</code>
         *
         * <pre>
         *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
         * </pre>
         */
        public boolean hasAdid() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional string adid = 16;</code>
         *
         * <pre>
         *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
         * </pre>
         */
        public java.lang.String getAdid() {
          java.lang.Object ref = adid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              adid_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string adid = 16;</code>
         *
         * <pre>
         *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
         * </pre>
         */
        public com.google.protobuf.ByteString
            getAdidBytes() {
          java.lang.Object ref = adid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            adid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string adid = 16;</code>
         *
         * <pre>
         *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
         * </pre>
         */
        public Builder setAdid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
          adid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string adid = 16;</code>
         *
         * <pre>
         *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
         * </pre>
         */
        public Builder clearAdid() {
          bitField0_ = (bitField0_ & ~0x00008000);
          adid_ = getDefaultInstance().getAdid();
          onChanged();
          return this;
        }
        /**
         * <code>optional string adid = 16;</code>
         *
         * <pre>
         *广告ID或订单ID，跟素材上传api中的dsp_order_id相同 （半免审核使用）
         * </pre>
         */
        public Builder setAdidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
          adid_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Direct_Response.Bid)
      }

      static {
        defaultInstance = new Bid(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Direct_Response.Bid)
    }

    public interface SeatBidOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.madhouse.media.tencent.Direct_Response.SeatBid)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid> 
          getBidList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid getBid(int index);
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      int getBidCount();
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder> 
          getBidOrBuilderList();
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder getBidOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Direct_Response.SeatBid}
     */
    public static final class SeatBid extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.madhouse.media.tencent.Direct_Response.SeatBid)
        SeatBidOrBuilder {
      // Use SeatBid.newBuilder() to construct.
      private SeatBid(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SeatBid(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SeatBid defaultInstance;
      public static SeatBid getDefaultInstance() {
        return defaultInstance;
      }

      public SeatBid getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SeatBid(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  bid_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid>();
                  mutable_bitField0_ |= 0x00000001;
                }
                bid_.add(input.readMessage(com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            bid_ = java.util.Collections.unmodifiableList(bid_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder.class);
      }

      public static com.google.protobuf.Parser<SeatBid> PARSER =
          new com.google.protobuf.AbstractParser<SeatBid>() {
        public SeatBid parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SeatBid(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SeatBid> getParserForType() {
        return PARSER;
      }

      public static final int BID_FIELD_NUMBER = 1;
      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid> bid_;
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid> getBidList() {
        return bid_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder> 
          getBidOrBuilderList() {
        return bid_;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public int getBidCount() {
        return bid_.size();
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid getBid(int index) {
        return bid_.get(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
       *
       * <pre>
       *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder getBidOrBuilder(
          int index) {
        return bid_.get(index);
      }

      private void initFields() {
        bid_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < bid_.size(); i++) {
          output.writeMessage(1, bid_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < bid_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, bid_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.madhouse.media.tencent.Direct_Response.SeatBid}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Direct_Response.SeatBid)
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder.class);
        }

        // Construct using com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getBidFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (bidBuilder_ == null) {
            bid_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            bidBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_descriptor;
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid getDefaultInstanceForType() {
          return com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.getDefaultInstance();
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid build() {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid buildPartial() {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid result = new com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid(this);
          int from_bitField0_ = bitField0_;
          if (bidBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              bid_ = java.util.Collections.unmodifiableList(bid_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.bid_ = bid_;
          } else {
            result.bid_ = bidBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid) {
            return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid other) {
          if (other == com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.getDefaultInstance()) return this;
          if (bidBuilder_ == null) {
            if (!other.bid_.isEmpty()) {
              if (bid_.isEmpty()) {
                bid_ = other.bid_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureBidIsMutable();
                bid_.addAll(other.bid_);
              }
              onChanged();
            }
          } else {
            if (!other.bid_.isEmpty()) {
              if (bidBuilder_.isEmpty()) {
                bidBuilder_.dispose();
                bidBuilder_ = null;
                bid_ = other.bid_;
                bitField0_ = (bitField0_ & ~0x00000001);
                bidBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBidFieldBuilder() : null;
              } else {
                bidBuilder_.addAllMessages(other.bid_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid> bid_ =
          java.util.Collections.emptyList();
        private void ensureBidIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            bid_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid>(bid_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder> bidBuilder_;

        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid> getBidList() {
          if (bidBuilder_ == null) {
            return java.util.Collections.unmodifiableList(bid_);
          } else {
            return bidBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public int getBidCount() {
          if (bidBuilder_ == null) {
            return bid_.size();
          } else {
            return bidBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid getBid(int index) {
          if (bidBuilder_ == null) {
            return bid_.get(index);
          } else {
            return bidBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder setBid(
            int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid value) {
          if (bidBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBidIsMutable();
            bid_.set(index, value);
            onChanged();
          } else {
            bidBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder setBid(
            int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder builderForValue) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            bid_.set(index, builderForValue.build());
            onChanged();
          } else {
            bidBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addBid(com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid value) {
          if (bidBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBidIsMutable();
            bid_.add(value);
            onChanged();
          } else {
            bidBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addBid(
            int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid value) {
          if (bidBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBidIsMutable();
            bid_.add(index, value);
            onChanged();
          } else {
            bidBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addBid(
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder builderForValue) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            bid_.add(builderForValue.build());
            onChanged();
          } else {
            bidBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addBid(
            int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder builderForValue) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            bid_.add(index, builderForValue.build());
            onChanged();
          } else {
            bidBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder addAllBid(
            java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid> values) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, bid_);
            onChanged();
          } else {
            bidBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder clearBid() {
          if (bidBuilder_ == null) {
            bid_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            bidBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public Builder removeBid(int index) {
          if (bidBuilder_ == null) {
            ensureBidIsMutable();
            bid_.remove(index);
            onChanged();
          } else {
            bidBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder getBidBuilder(
            int index) {
          return getBidFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder getBidOrBuilder(
            int index) {
          if (bidBuilder_ == null) {
            return bid_.get(index);  } else {
            return bidBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder> 
             getBidOrBuilderList() {
          if (bidBuilder_ != null) {
            return bidBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(bid_);
          }
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder addBidBuilder() {
          return getBidFieldBuilder().addBuilder(
              com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder addBidBuilder(
            int index) {
          return getBidFieldBuilder().addBuilder(
              index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.getDefaultInstance());
        }
        /**
         * <code>repeated .com.madhouse.media.tencent.Direct_Response.Bid bid = 1;</code>
         *
         * <pre>
         *与request中的impression对应，可以对多个impression回复参与竞价，也可以对其中一部分回复参与竞价
         * </pre>
         */
        public java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder> 
             getBidBuilderList() {
          return getBidFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder> 
            getBidFieldBuilder() {
          if (bidBuilder_ == null) {
            bidBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Bid.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.BidOrBuilder>(
                    bid_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            bid_ = null;
          }
          return bidBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Direct_Response.SeatBid)
      }

      static {
        defaultInstance = new SeatBid(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Direct_Response.SeatBid)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BIDID_FIELD_NUMBER = 2;
    private java.lang.Object bidid_;
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    public boolean hasBidid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    public java.lang.String getBidid() {
      java.lang.Object ref = bidid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bidid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string bidid = 2;</code>
     *
     * <pre>
     *dsp方自己标识本次请求的请求id（可不填）
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBididBytes() {
      java.lang.Object ref = bidid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bidid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEATBID_FIELD_NUMBER = 3;
    private java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid> seatbid_;
    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    public java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid> getSeatbidList() {
      return seatbid_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder> 
        getSeatbidOrBuilderList() {
      return seatbid_;
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    public int getSeatbidCount() {
      return seatbid_.size();
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid getSeatbid(int index) {
      return seatbid_.get(index);
    }
    /**
     * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
     *
     * <pre>
     *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
     * </pre>
     */
    public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder getSeatbidOrBuilder(
        int index) {
      return seatbid_.get(index);
    }

    private void initFields() {
      id_ = "";
      bidid_ = "";
      seatbid_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBididBytes());
      }
      for (int i = 0; i < seatbid_.size(); i++) {
        output.writeMessage(3, seatbid_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBididBytes());
      }
      for (int i = 0; i < seatbid_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, seatbid_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.madhouse.media.tencent.GPBForDSP.Direct_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.madhouse.media.tencent.GPBForDSP.Direct_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.madhouse.media.tencent.Direct_Response}
     *
     * <pre>
     *免审核接口
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.madhouse.media.tencent.Direct_Response)
        com.madhouse.media.tencent.GPBForDSP.Direct_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.madhouse.media.tencent.GPBForDSP.Direct_Response.class, com.madhouse.media.tencent.GPBForDSP.Direct_Response.Builder.class);
      }

      // Construct using com.madhouse.media.tencent.GPBForDSP.Direct_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSeatbidFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        bidid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (seatbidBuilder_ == null) {
          seatbid_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          seatbidBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.madhouse.media.tencent.GPBForDSP.internal_static_com_madhouse_media_tencent_Direct_Response_descriptor;
      }

      public com.madhouse.media.tencent.GPBForDSP.Direct_Response getDefaultInstanceForType() {
        return com.madhouse.media.tencent.GPBForDSP.Direct_Response.getDefaultInstance();
      }

      public com.madhouse.media.tencent.GPBForDSP.Direct_Response build() {
        com.madhouse.media.tencent.GPBForDSP.Direct_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.madhouse.media.tencent.GPBForDSP.Direct_Response buildPartial() {
        com.madhouse.media.tencent.GPBForDSP.Direct_Response result = new com.madhouse.media.tencent.GPBForDSP.Direct_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bidid_ = bidid_;
        if (seatbidBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            seatbid_ = java.util.Collections.unmodifiableList(seatbid_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.seatbid_ = seatbid_;
        } else {
          result.seatbid_ = seatbidBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.madhouse.media.tencent.GPBForDSP.Direct_Response) {
          return mergeFrom((com.madhouse.media.tencent.GPBForDSP.Direct_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.madhouse.media.tencent.GPBForDSP.Direct_Response other) {
        if (other == com.madhouse.media.tencent.GPBForDSP.Direct_Response.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasBidid()) {
          bitField0_ |= 0x00000002;
          bidid_ = other.bidid_;
          onChanged();
        }
        if (seatbidBuilder_ == null) {
          if (!other.seatbid_.isEmpty()) {
            if (seatbid_.isEmpty()) {
              seatbid_ = other.seatbid_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSeatbidIsMutable();
              seatbid_.addAll(other.seatbid_);
            }
            onChanged();
          }
        } else {
          if (!other.seatbid_.isEmpty()) {
            if (seatbidBuilder_.isEmpty()) {
              seatbidBuilder_.dispose();
              seatbidBuilder_ = null;
              seatbid_ = other.seatbid_;
              bitField0_ = (bitField0_ & ~0x00000004);
              seatbidBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSeatbidFieldBuilder() : null;
            } else {
              seatbidBuilder_.addAllMessages(other.seatbid_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.madhouse.media.tencent.GPBForDSP.Direct_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.madhouse.media.tencent.GPBForDSP.Direct_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       *dsp必须填写Request.id字段中的内容，即使放弃本次曝光机会也必须回复本字段
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object bidid_ = "";
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public boolean hasBidid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public java.lang.String getBidid() {
        java.lang.Object ref = bidid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            bidid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBididBytes() {
        java.lang.Object ref = bidid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bidid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public Builder setBidid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bidid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public Builder clearBidid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bidid_ = getDefaultInstance().getBidid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string bidid = 2;</code>
       *
       * <pre>
       *dsp方自己标识本次请求的请求id（可不填）
       * </pre>
       */
      public Builder setBididBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bidid_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid> seatbid_ =
        java.util.Collections.emptyList();
      private void ensureSeatbidIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          seatbid_ = new java.util.ArrayList<com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid>(seatbid_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder> seatbidBuilder_;

      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid> getSeatbidList() {
        if (seatbidBuilder_ == null) {
          return java.util.Collections.unmodifiableList(seatbid_);
        } else {
          return seatbidBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public int getSeatbidCount() {
        if (seatbidBuilder_ == null) {
          return seatbid_.size();
        } else {
          return seatbidBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid getSeatbid(int index) {
        if (seatbidBuilder_ == null) {
          return seatbid_.get(index);
        } else {
          return seatbidBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public Builder setSeatbid(
          int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid value) {
        if (seatbidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatbidIsMutable();
          seatbid_.set(index, value);
          onChanged();
        } else {
          seatbidBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public Builder setSeatbid(
          int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder builderForValue) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          seatbid_.set(index, builderForValue.build());
          onChanged();
        } else {
          seatbidBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public Builder addSeatbid(com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid value) {
        if (seatbidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatbidIsMutable();
          seatbid_.add(value);
          onChanged();
        } else {
          seatbidBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public Builder addSeatbid(
          int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid value) {
        if (seatbidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatbidIsMutable();
          seatbid_.add(index, value);
          onChanged();
        } else {
          seatbidBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public Builder addSeatbid(
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder builderForValue) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          seatbid_.add(builderForValue.build());
          onChanged();
        } else {
          seatbidBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public Builder addSeatbid(
          int index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder builderForValue) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          seatbid_.add(index, builderForValue.build());
          onChanged();
        } else {
          seatbidBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public Builder addAllSeatbid(
          java.lang.Iterable<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid> values) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, seatbid_);
          onChanged();
        } else {
          seatbidBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public Builder clearSeatbid() {
        if (seatbidBuilder_ == null) {
          seatbid_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          seatbidBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public Builder removeSeatbid(int index) {
        if (seatbidBuilder_ == null) {
          ensureSeatbidIsMutable();
          seatbid_.remove(index);
          onChanged();
        } else {
          seatbidBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder getSeatbidBuilder(
          int index) {
        return getSeatbidFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder getSeatbidOrBuilder(
          int index) {
        if (seatbidBuilder_ == null) {
          return seatbid_.get(index);  } else {
          return seatbidBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public java.util.List<? extends com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder> 
           getSeatbidOrBuilderList() {
        if (seatbidBuilder_ != null) {
          return seatbidBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(seatbid_);
        }
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder addSeatbidBuilder() {
        return getSeatbidFieldBuilder().addBuilder(
            com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder addSeatbidBuilder(
          int index) {
        return getSeatbidFieldBuilder().addBuilder(
            index, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.getDefaultInstance());
      }
      /**
       * <code>repeated .com.madhouse.media.tencent.Direct_Response.SeatBid seatbid = 3;</code>
       *
       * <pre>
       *回复参与竞价信息， 目前只支持将回复结果设置在seatbid[0]
       * </pre>
       */
      public java.util.List<com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder> 
           getSeatbidBuilderList() {
        return getSeatbidFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder> 
          getSeatbidFieldBuilder() {
        if (seatbidBuilder_ == null) {
          seatbidBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBid.Builder, com.madhouse.media.tencent.GPBForDSP.Direct_Response.SeatBidOrBuilder>(
                  seatbid_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          seatbid_ = null;
        }
        return seatbidBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.madhouse.media.tencent.Direct_Response)
    }

    static {
      defaultInstance = new Direct_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.madhouse.media.tencent.Direct_Response)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_Impression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_Impression_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_Impression_Banner_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_Impression_Banner_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_Impression_Video_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_Impression_Video_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_Site_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_Site_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_Device_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_Device_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_Device_Geo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_Device_Geo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_User_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_User_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_App_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_App_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_PlayOrder_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_PlayOrder_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Response_BidResponseExt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Response_BidResponseExt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Response_Bid_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Response_Bid_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Response_SeatBid_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Response_SeatBid_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Direct_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Direct_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Direct_Response_Bid_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Direct_Response_Bid_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024tx_rtb_for_dsp.proto\022\032com.madhouse.med" +
      "ia.tencent\"\305\022\n\007Request\022\n\n\002id\030\001 \001(\t\022\n\n\002at" +
      "\030\002 \001(\r\0226\n\004site\030\003 \001(\0132(.com.madhouse.medi" +
      "a.tencent.Request.Site\022:\n\006device\030\004 \001(\0132*" +
      ".com.madhouse.media.tencent.Request.Devi" +
      "ce\0226\n\004user\030\005 \001(\0132(.com.madhouse.media.te" +
      "ncent.Request.User\022B\n\nimpression\030\006 \003(\0132." +
      ".com.madhouse.media.tencent.Request.Impr" +
      "ession\022\022\n\ninner_info\030\007 \001(\t\0224\n\003app\030\010 \001(\0132" +
      "\'.com.madhouse.media.tencent.Request.App",
      "\022\031\n\021unlike_order_list\030\t \003(\t\022;\n\004oids\030\n \003(" +
      "\0132-.com.madhouse.media.tencent.Request.P" +
      "layOrder\022\034\n\024request_black_orders\030\013 \003(\t\022T" +
      "\n\024channel_black_orders\030\014 \003(\01326.com.madho" +
      "use.media.tencent.Request.ChannelBlackOr" +
      "ders\022\026\n\016is_order_cache\030\r \001(\010\022\025\n\ris_first" +
      "_time\030\016 \001(\010\032\262\010\n\nImpression\022\n\n\002id\030\001 \001(\t\022\r" +
      "\n\005tagid\030\002 \001(\t\022\020\n\010bidfloor\030\003 \001(\002\022E\n\006banne" +
      "r\030\004 \001(\01325.com.madhouse.media.tencent.Req" +
      "uest.Impression.Banner\022C\n\005video\030\005 \001(\01324.",
      "com.madhouse.media.tencent.Request.Impre" +
      "ssion.Video\022\020\n\010clientid\030\006 \001(\t\022\021\n\ttradeco" +
      "de\030\007 \001(\t\022\021\n\tsns_lists\030\010 \001(\t\022\016\n\006dealid\030\t " +
      "\001(\t\022R\n\013adm_require\030\n \003(\0132=.com.madhouse." +
      "media.tencent.Request.Impression.Materia" +
      "lFormat\022F\n\007imp_ext\030\013 \001(\01325.com.madhouse." +
      "media.tencent.Request.Impression.ImpExt\022" +
      "\017\n\007channel\030\014 \001(\t\022\014\n\004date\030\r \001(\t\022\017\n\007tag_se" +
      "q\030\016 \001(\r\022P\n\014display_type\030\017 \003(\0132:.com.madh" +
      "ouse.media.tencent.Request.Impression.Di",
      "splayType\022\017\n\007dealids\030\020 \003(\t\022\027\n\017max_order_" +
      "count\030\021 \001(\r\032%\n\006ImpExt\022\014\n\004chid\030\001 \001(\r\022\r\n\005s" +
      "type\030\002 \003(\r\032_\n\006Banner\022\r\n\005width\030\001 \001(\r\022\016\n\006h" +
      "eight\030\002 \001(\r\022\r\n\005mimes\030\003 \003(\t\022\023\n\013extra_styl" +
      "e\030\004 \001(\t\022\022\n\nvisibility\030\005 \001(\r\032\204\001\n\005Video\022\r\n" +
      "\005mimes\030\001 \003(\t\022\021\n\tlinearity\030\002 \001(\r\022\023\n\013mindu" +
      "ration\030\003 \001(\r\022\023\n\013maxduration\030\004 \001(\r\022\020\n\010pro" +
      "tocol\030\005 \001(\r\022\r\n\005width\030\006 \001(\r\022\016\n\006height\030\007 \001" +
      "(\r\032>\n\016MaterialFormat\022\r\n\005width\030\001 \001(\r\022\016\n\006h" +
      "eight\030\002 \001(\r\022\r\n\005mimes\030\003 \001(\t\032\213\001\n\013DisplayTy",
      "pe\022\024\n\014display_type\030\001 \001(\r\022\022\n\nclick_type\030\002" +
      " \003(\r\022R\n\013adm_require\030\003 \003(\0132=.com.madhouse" +
      ".media.tencent.Request.Impression.Materi" +
      "alFormat\032@\n\004Site\022\014\n\004name\030\001 \001(\t\022\014\n\004page\030\002" +
      " \001(\t\022\013\n\003ref\030\003 \001(\t\022\017\n\007channel\030\004 \001(\t\032\350\002\n\006D" +
      "evice\022\n\n\002ip\030\001 \001(\t\022\n\n\002ua\030\002 \001(\t\022;\n\003geo\030\003 \001" +
      "(\0132..com.madhouse.media.tencent.Request." +
      "Device.Geo\022\014\n\004idfa\030\004 \001(\t\022\020\n\010idfa_enc\030\005 \001" +
      "(\r\022\020\n\010openudid\030\006 \001(\t\022\017\n\007carrier\030\007 \001(\r\022\014\n" +
      "\004make\030\010 \001(\t\022\r\n\005model\030\t \001(\t\022\n\n\002os\030\n \001(\t\022\013",
      "\n\003Osv\030\013 \001(\t\022\n\n\002Js\030\014 \001(\r\022\026\n\016connectiontyp" +
      "e\030\r \001(\r\022\022\n\ndevicetype\030\016 \001(\r\022\013\n\003mac\030\017 \001(\t" +
      "\022\014\n\004imei\030\020 \001(\t\022\021\n\tandroidid\030\021 \001(\t\032*\n\003Geo" +
      "\022\020\n\010latitude\030\001 \001(\002\022\021\n\tlongitude\030\002 \001(\002\032P\n" +
      "\004User\022\n\n\002id\030\001 \001(\t\022\017\n\007buyerid\030\002 \001(\t\022\016\n\006ge" +
      "nder\030\003 \001(\t\022\013\n\003age\030\004 \001(\r\022\016\n\006tag_id\030\005 \003(\t\032" +
      "P\n\003App\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016\n\006doma" +
      "in\030\003 \001(\t\022\013\n\003cat\030\004 \003(\t\022\022\n\nsectioncat\030\005 \003(" +
      "\t\032\'\n\tPlayOrder\022\013\n\003oid\030\001 \001(\t\022\r\n\005index\030\002 \001" +
      "(\r\032>\n\022ChannelBlackOrders\022\022\n\nchannel_id\030\001",
      " \001(\r\022\024\n\014black_orders\030\002 \003(\t\"\224\004\n\010Response\022" +
      "\n\n\002id\030\001 \001(\t\022\r\n\005bidid\030\002 \001(\t\022=\n\007seatbid\030\003 " +
      "\003(\0132,.com.madhouse.media.tencent.Respons" +
      "e.SeatBid\022@\n\003ext\030\004 \001(\01323.com.madhouse.me" +
      "dia.tencent.Response.BidResponseExt\032$\n\016B" +
      "idResponseExt\022\022\n\nup_version\030\001 \001(\t\032\203\002\n\003Bi" +
      "d\022\n\n\002id\030\001 \001(\t\022\r\n\005impid\030\002 \001(\t\022\r\n\005price\030\003 " +
      "\001(\002\022\014\n\004adid\030\004 \001(\t\022\014\n\004nurl\030\005 \001(\t\022\013\n\003adm\030\006" +
      " \001(\t\022\013\n\003ext\030\007 \001(\t\022\020\n\010adm_para\030\010 \001(\t\022\022\n\ni" +
      "nner_resp\030\t \001(\t\022\014\n\004ext2\030\n \001(\t\022\021\n\tdisp_ex",
      "ts\030\013 \003(\t\022\022\n\nclick_exts\030\014 \003(\t\022\014\n\004ext3\030\r \001" +
      "(\t\022\024\n\014display_type\030\016 \001(\r\022\r\n\005stype\030\017 \001(\r\022" +
      "\016\n\006dealid\030\020 \001(\t\032@\n\007SeatBid\0225\n\003bid\030\001 \003(\0132" +
      "(.com.madhouse.media.tencent.Response.Bi" +
      "d\"\343\005\n\017Direct_Response\022\n\n\002id\030\001 \001(\t\022\r\n\005bid" +
      "id\030\002 \001(\t\022D\n\007seatbid\030\003 \003(\01323.com.madhouse" +
      ".media.tencent.Direct_Response.SeatBid\032/" +
      "\n\014MaterialInfo\022\017\n\007content\030\001 \001(\t\022\016\n\006forma" +
      "t\030\002 \001(\t\032W\n\007AppInfo\022\020\n\010pkg_name\030\001 \001(\t\022\021\n\t" +
      "deep_link\030\002 \001(\t\022\025\n\rdown_load_url\030\003 \001(\t\022\020",
      "\n\010app_name\030\004 \001(\t\032\233\003\n\003Bid\022\n\n\002id\030\001 \001(\t\022\r\n\005" +
      "impid\030\002 \001(\t\022K\n\tmaterials\030\003 \003(\01328.com.mad" +
      "house.media.tencent.Direct_Response.Mate" +
      "rialInfo\022\022\n\nmonitorurl\030\004 \003(\t\022\021\n\tclick_ur" +
      "l\030\005 \001(\t\022\013\n\003ext\030\006 \001(\t\022\021\n\tdisp_exts\030\007 \003(\t\022" +
      "\022\n\nclick_exts\030\010 \003(\t\022\032\n\022click_monitor_url" +
      "s\030\t \003(\t\022\r\n\005price\030\n \001(\002\022E\n\010app_info\030\013 \001(\013" +
      "23.com.madhouse.media.tencent.Direct_Res" +
      "ponse.AppInfo\022\024\n\014display_type\030\014 \001(\r\022\023\n\013c" +
      "reative_id\030\r \001(\r\022\022\n\ndisplay_id\030\016 \001(\r\022\022\n\n",
      "click_type\030\017 \001(\r\022\014\n\004adid\030\020 \001(\t\032G\n\007SeatBi" +
      "d\022<\n\003bid\030\001 \003(\0132/.com.madhouse.media.tenc" +
      "ent.Direct_Response.BidB\013B\tGPBForDSP"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_madhouse_media_tencent_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_madhouse_media_tencent_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_descriptor,
        new java.lang.String[] { "Id", "At", "Site", "Device", "User", "Impression", "InnerInfo", "App", "UnlikeOrderList", "Oids", "RequestBlackOrders", "ChannelBlackOrders", "IsOrderCache", "IsFirstTime", });
    internal_static_com_madhouse_media_tencent_Request_Impression_descriptor =
      internal_static_com_madhouse_media_tencent_Request_descriptor.getNestedTypes().get(0);
    internal_static_com_madhouse_media_tencent_Request_Impression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_Impression_descriptor,
        new java.lang.String[] { "Id", "Tagid", "Bidfloor", "Banner", "Video", "Clientid", "Tradecode", "SnsLists", "Dealid", "AdmRequire", "ImpExt", "Channel", "Date", "TagSeq", "DisplayType", "Dealids", "MaxOrderCount", });
    internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_descriptor =
      internal_static_com_madhouse_media_tencent_Request_Impression_descriptor.getNestedTypes().get(0);
    internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_Impression_ImpExt_descriptor,
        new java.lang.String[] { "Chid", "Stype", });
    internal_static_com_madhouse_media_tencent_Request_Impression_Banner_descriptor =
      internal_static_com_madhouse_media_tencent_Request_Impression_descriptor.getNestedTypes().get(1);
    internal_static_com_madhouse_media_tencent_Request_Impression_Banner_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_Impression_Banner_descriptor,
        new java.lang.String[] { "Width", "Height", "Mimes", "ExtraStyle", "Visibility", });
    internal_static_com_madhouse_media_tencent_Request_Impression_Video_descriptor =
      internal_static_com_madhouse_media_tencent_Request_Impression_descriptor.getNestedTypes().get(2);
    internal_static_com_madhouse_media_tencent_Request_Impression_Video_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_Impression_Video_descriptor,
        new java.lang.String[] { "Mimes", "Linearity", "Minduration", "Maxduration", "Protocol", "Width", "Height", });
    internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_descriptor =
      internal_static_com_madhouse_media_tencent_Request_Impression_descriptor.getNestedTypes().get(3);
    internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_Impression_MaterialFormat_descriptor,
        new java.lang.String[] { "Width", "Height", "Mimes", });
    internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_descriptor =
      internal_static_com_madhouse_media_tencent_Request_Impression_descriptor.getNestedTypes().get(4);
    internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_Impression_DisplayType_descriptor,
        new java.lang.String[] { "DisplayType", "ClickType", "AdmRequire", });
    internal_static_com_madhouse_media_tencent_Request_Site_descriptor =
      internal_static_com_madhouse_media_tencent_Request_descriptor.getNestedTypes().get(1);
    internal_static_com_madhouse_media_tencent_Request_Site_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_Site_descriptor,
        new java.lang.String[] { "Name", "Page", "Ref", "Channel", });
    internal_static_com_madhouse_media_tencent_Request_Device_descriptor =
      internal_static_com_madhouse_media_tencent_Request_descriptor.getNestedTypes().get(2);
    internal_static_com_madhouse_media_tencent_Request_Device_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_Device_descriptor,
        new java.lang.String[] { "Ip", "Ua", "Geo", "Idfa", "IdfaEnc", "Openudid", "Carrier", "Make", "Model", "Os", "Osv", "Js", "Connectiontype", "Devicetype", "Mac", "Imei", "Androidid", });
    internal_static_com_madhouse_media_tencent_Request_Device_Geo_descriptor =
      internal_static_com_madhouse_media_tencent_Request_Device_descriptor.getNestedTypes().get(0);
    internal_static_com_madhouse_media_tencent_Request_Device_Geo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_Device_Geo_descriptor,
        new java.lang.String[] { "Latitude", "Longitude", });
    internal_static_com_madhouse_media_tencent_Request_User_descriptor =
      internal_static_com_madhouse_media_tencent_Request_descriptor.getNestedTypes().get(3);
    internal_static_com_madhouse_media_tencent_Request_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_User_descriptor,
        new java.lang.String[] { "Id", "Buyerid", "Gender", "Age", "TagId", });
    internal_static_com_madhouse_media_tencent_Request_App_descriptor =
      internal_static_com_madhouse_media_tencent_Request_descriptor.getNestedTypes().get(4);
    internal_static_com_madhouse_media_tencent_Request_App_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_App_descriptor,
        new java.lang.String[] { "Id", "Name", "Domain", "Cat", "Sectioncat", });
    internal_static_com_madhouse_media_tencent_Request_PlayOrder_descriptor =
      internal_static_com_madhouse_media_tencent_Request_descriptor.getNestedTypes().get(5);
    internal_static_com_madhouse_media_tencent_Request_PlayOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_PlayOrder_descriptor,
        new java.lang.String[] { "Oid", "Index", });
    internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_descriptor =
      internal_static_com_madhouse_media_tencent_Request_descriptor.getNestedTypes().get(6);
    internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Request_ChannelBlackOrders_descriptor,
        new java.lang.String[] { "ChannelId", "BlackOrders", });
    internal_static_com_madhouse_media_tencent_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_madhouse_media_tencent_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Response_descriptor,
        new java.lang.String[] { "Id", "Bidid", "Seatbid", "Ext", });
    internal_static_com_madhouse_media_tencent_Response_BidResponseExt_descriptor =
      internal_static_com_madhouse_media_tencent_Response_descriptor.getNestedTypes().get(0);
    internal_static_com_madhouse_media_tencent_Response_BidResponseExt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Response_BidResponseExt_descriptor,
        new java.lang.String[] { "UpVersion", });
    internal_static_com_madhouse_media_tencent_Response_Bid_descriptor =
      internal_static_com_madhouse_media_tencent_Response_descriptor.getNestedTypes().get(1);
    internal_static_com_madhouse_media_tencent_Response_Bid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Response_Bid_descriptor,
        new java.lang.String[] { "Id", "Impid", "Price", "Adid", "Nurl", "Adm", "Ext", "AdmPara", "InnerResp", "Ext2", "DispExts", "ClickExts", "Ext3", "DisplayType", "Stype", "Dealid", });
    internal_static_com_madhouse_media_tencent_Response_SeatBid_descriptor =
      internal_static_com_madhouse_media_tencent_Response_descriptor.getNestedTypes().get(2);
    internal_static_com_madhouse_media_tencent_Response_SeatBid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Response_SeatBid_descriptor,
        new java.lang.String[] { "Bid", });
    internal_static_com_madhouse_media_tencent_Direct_Response_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_madhouse_media_tencent_Direct_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Direct_Response_descriptor,
        new java.lang.String[] { "Id", "Bidid", "Seatbid", });
    internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_descriptor =
      internal_static_com_madhouse_media_tencent_Direct_Response_descriptor.getNestedTypes().get(0);
    internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Direct_Response_MaterialInfo_descriptor,
        new java.lang.String[] { "Content", "Format", });
    internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_descriptor =
      internal_static_com_madhouse_media_tencent_Direct_Response_descriptor.getNestedTypes().get(1);
    internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Direct_Response_AppInfo_descriptor,
        new java.lang.String[] { "PkgName", "DeepLink", "DownLoadUrl", "AppName", });
    internal_static_com_madhouse_media_tencent_Direct_Response_Bid_descriptor =
      internal_static_com_madhouse_media_tencent_Direct_Response_descriptor.getNestedTypes().get(2);
    internal_static_com_madhouse_media_tencent_Direct_Response_Bid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Direct_Response_Bid_descriptor,
        new java.lang.String[] { "Id", "Impid", "Materials", "Monitorurl", "ClickUrl", "Ext", "DispExts", "ClickExts", "ClickMonitorUrls", "Price", "AppInfo", "DisplayType", "CreativeId", "DisplayId", "ClickType", "Adid", });
    internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_descriptor =
      internal_static_com_madhouse_media_tencent_Direct_Response_descriptor.getNestedTypes().get(3);
    internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_madhouse_media_tencent_Direct_Response_SeatBid_descriptor,
        new java.lang.String[] { "Bid", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
