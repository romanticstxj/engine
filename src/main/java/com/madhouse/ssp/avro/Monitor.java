/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.madhouse.ssp.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Monitor extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Monitor\",\"namespace\":\"com.madhouse.ssp.avro\",\"fields\":[{\"name\":\"impurl\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Track\",\"fields\":[{\"name\":\"startdelay\",\"type\":\"int\",\"default\":0},{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}},{\"name\":\"clkurl\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"securl\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"exts\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<com.madhouse.ssp.avro.Track> impurl;
  @Deprecated public java.util.List<java.lang.String> clkurl;
  @Deprecated public java.util.List<java.lang.String> securl;
  @Deprecated public java.util.List<java.lang.String> exts;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Monitor() {}

  /**
   * All-args constructor.
   */
  public Monitor(java.util.List<com.madhouse.ssp.avro.Track> impurl, java.util.List<java.lang.String> clkurl, java.util.List<java.lang.String> securl, java.util.List<java.lang.String> exts) {
    this.impurl = impurl;
    this.clkurl = clkurl;
    this.securl = securl;
    this.exts = exts;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return impurl;
    case 1: return clkurl;
    case 2: return securl;
    case 3: return exts;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: impurl = (java.util.List<com.madhouse.ssp.avro.Track>)value$; break;
    case 1: clkurl = (java.util.List<java.lang.String>)value$; break;
    case 2: securl = (java.util.List<java.lang.String>)value$; break;
    case 3: exts = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'impurl' field.
   */
  public java.util.List<com.madhouse.ssp.avro.Track> getImpurl() {
    return impurl;
  }

  /**
   * Sets the value of the 'impurl' field.
   * @param value the value to set.
   */
  public void setImpurl(java.util.List<com.madhouse.ssp.avro.Track> value) {
    this.impurl = value;
  }

  /**
   * Gets the value of the 'clkurl' field.
   */
  public java.util.List<java.lang.String> getClkurl() {
    return clkurl;
  }

  /**
   * Sets the value of the 'clkurl' field.
   * @param value the value to set.
   */
  public void setClkurl(java.util.List<java.lang.String> value) {
    this.clkurl = value;
  }

  /**
   * Gets the value of the 'securl' field.
   */
  public java.util.List<java.lang.String> getSecurl() {
    return securl;
  }

  /**
   * Sets the value of the 'securl' field.
   * @param value the value to set.
   */
  public void setSecurl(java.util.List<java.lang.String> value) {
    this.securl = value;
  }

  /**
   * Gets the value of the 'exts' field.
   */
  public java.util.List<java.lang.String> getExts() {
    return exts;
  }

  /**
   * Sets the value of the 'exts' field.
   * @param value the value to set.
   */
  public void setExts(java.util.List<java.lang.String> value) {
    this.exts = value;
  }

  /** Creates a new Monitor RecordBuilder */
  public static com.madhouse.ssp.avro.Monitor.Builder newBuilder() {
    return new com.madhouse.ssp.avro.Monitor.Builder();
  }
  
  /** Creates a new Monitor RecordBuilder by copying an existing Builder */
  public static com.madhouse.ssp.avro.Monitor.Builder newBuilder(com.madhouse.ssp.avro.Monitor.Builder other) {
    return new com.madhouse.ssp.avro.Monitor.Builder(other);
  }
  
  /** Creates a new Monitor RecordBuilder by copying an existing Monitor instance */
  public static com.madhouse.ssp.avro.Monitor.Builder newBuilder(com.madhouse.ssp.avro.Monitor other) {
    return new com.madhouse.ssp.avro.Monitor.Builder(other);
  }
  
  /**
   * RecordBuilder for Monitor instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Monitor>
    implements org.apache.avro.data.RecordBuilder<Monitor> {

    private java.util.List<com.madhouse.ssp.avro.Track> impurl;
    private java.util.List<java.lang.String> clkurl;
    private java.util.List<java.lang.String> securl;
    private java.util.List<java.lang.String> exts;

    /** Creates a new Builder */
    private Builder() {
      super(com.madhouse.ssp.avro.Monitor.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.madhouse.ssp.avro.Monitor.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.impurl)) {
        this.impurl = data().deepCopy(fields()[0].schema(), other.impurl);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.clkurl)) {
        this.clkurl = data().deepCopy(fields()[1].schema(), other.clkurl);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.securl)) {
        this.securl = data().deepCopy(fields()[2].schema(), other.securl);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exts)) {
        this.exts = data().deepCopy(fields()[3].schema(), other.exts);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Monitor instance */
    private Builder(com.madhouse.ssp.avro.Monitor other) {
            super(com.madhouse.ssp.avro.Monitor.SCHEMA$);
      if (isValidValue(fields()[0], other.impurl)) {
        this.impurl = data().deepCopy(fields()[0].schema(), other.impurl);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.clkurl)) {
        this.clkurl = data().deepCopy(fields()[1].schema(), other.clkurl);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.securl)) {
        this.securl = data().deepCopy(fields()[2].schema(), other.securl);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.exts)) {
        this.exts = data().deepCopy(fields()[3].schema(), other.exts);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'impurl' field */
    public java.util.List<com.madhouse.ssp.avro.Track> getImpurl() {
      return impurl;
    }
    
    /** Sets the value of the 'impurl' field */
    public com.madhouse.ssp.avro.Monitor.Builder setImpurl(java.util.List<com.madhouse.ssp.avro.Track> value) {
      validate(fields()[0], value);
      this.impurl = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'impurl' field has been set */
    public boolean hasImpurl() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'impurl' field */
    public com.madhouse.ssp.avro.Monitor.Builder clearImpurl() {
      impurl = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'clkurl' field */
    public java.util.List<java.lang.String> getClkurl() {
      return clkurl;
    }
    
    /** Sets the value of the 'clkurl' field */
    public com.madhouse.ssp.avro.Monitor.Builder setClkurl(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.clkurl = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'clkurl' field has been set */
    public boolean hasClkurl() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'clkurl' field */
    public com.madhouse.ssp.avro.Monitor.Builder clearClkurl() {
      clkurl = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'securl' field */
    public java.util.List<java.lang.String> getSecurl() {
      return securl;
    }
    
    /** Sets the value of the 'securl' field */
    public com.madhouse.ssp.avro.Monitor.Builder setSecurl(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.securl = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'securl' field has been set */
    public boolean hasSecurl() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'securl' field */
    public com.madhouse.ssp.avro.Monitor.Builder clearSecurl() {
      securl = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'exts' field */
    public java.util.List<java.lang.String> getExts() {
      return exts;
    }
    
    /** Sets the value of the 'exts' field */
    public com.madhouse.ssp.avro.Monitor.Builder setExts(java.util.List<java.lang.String> value) {
      validate(fields()[3], value);
      this.exts = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'exts' field has been set */
    public boolean hasExts() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'exts' field */
    public com.madhouse.ssp.avro.Monitor.Builder clearExts() {
      exts = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Monitor build() {
      try {
        Monitor record = new Monitor();
        record.impurl = fieldSetFlags()[0] ? this.impurl : (java.util.List<com.madhouse.ssp.avro.Track>) defaultValue(fields()[0]);
        record.clkurl = fieldSetFlags()[1] ? this.clkurl : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.securl = fieldSetFlags()[2] ? this.securl : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        record.exts = fieldSetFlags()[3] ? this.exts : (java.util.List<java.lang.String>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
